(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[   1003410,      22073]
NotebookOptionsPosition[    966919,      21466]
NotebookOutlinePosition[    967345,      21483]
CellTagsIndexPosition[    967302,      21480]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["with ", "Subsubsection",
 CellChangeTimes->{{3.817212579107834*^9, 
  3.817212580674062*^9}},ExpressionUUID->"0e04f34a-64ee-4b50-b0e1-\
3af2c76f8028"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CoupledEntropy", "[", 
    RowBox[{
     RowBox[{"CoupledNormalDistribution", "[", 
      RowBox[{"0.", ",", " ", "1.", ",", " ", "1"}], "]"}], ",", " ", "#", 
     ",", " ", "2", ",", " ", "1", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Infinity]"}], ",", " ", "\[Infinity]"}], "}"}], ",", 
     " ", "False"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"0.01", ",", "0.25", ",", "0.5", ",", "1", ",", "2", ",", "4"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.817212245462303*^9, 3.817212335404708*^9}, 
   3.817212388837678*^9, {3.8172125122846403`*^9, 3.817212552857778*^9}, {
   3.817212606932384*^9, 3.817212612218861*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"6e2effb1-3692-42b8-96fb-99a1cd2c0d13"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.536879605206489`", ",", "2.6525475226597193`", ",", 
   "2.6996173720632313`", ",", "2.641592653589793`", ",", 
   "2.3306607026435158`", ",", "1.7647893042196197`"}], "}"}]], "Output",
 CellChangeTimes->{3.8172123463150806`*^9, 3.817212618921217*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"2fd3160e-d6fe-4156-aaf1-f4ba9b1c5cee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CoupledEntropy", "[", 
    RowBox[{
     RowBox[{"CoupledNormalDistribution", "[", 
      RowBox[{"0.", ",", "1.", ",", "1"}], "]"}], ",", "#", ",", "2", ",", 
     "1", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
     "True"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"0.01", ",", "0.25", ",", "0.5", ",", "1", ",", "2", ",", "4"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.817212381171082*^9, 3.817212391225873*^9}, {
  3.8172126171951303`*^9, 3.8172126235066767`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"fdfeb680-6d91-46a0-bed8-13f55816fc52"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.144813763225547`", ",", "2.114422048133678`", ",", "2.0810728088743344`",
    ",", "1.9995217388311752`", ",", "1.8276812581515407`", ",", 
   "1.5580060471189348`"}], "}"}]], "Output",
 CellChangeTimes->{3.817212402775017*^9, 3.8172126278484583`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"4b072e76-709b-4ae4-8431-3ac14d72b91f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TsallisEntropy", "[", 
    RowBox[{
     RowBox[{"CoupledNormalDistribution", "[", 
      RowBox[{"0.", ",", "1.", ",", "1"}], "]"}], ",", "#", ",", "2", ",", 
     "1", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
     "False"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"0.01", ",", "0.25", ",", "0.5", ",", "1", ",", "2", ",", "4"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.81721242446644*^9, 3.8172124398056393`*^9}, {
  3.817212628119876*^9, 3.8172126333075657`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"c49b2882-5040-4a94-91b2-b55ad4db9667"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.4385235862053665`", ",", "1.4253199509197814`", ",", "1.09455266608734`",
    ",", "0.8408450569081048`", ",", "0.6773441875532366`", ",", 
   "0.5836594125463838`"}], "}"}]], "Output",
 CellChangeTimes->{3.8172124442501183`*^9, 3.817212637489459*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"4a64a6f1-ae9f-4f3f-a2ba-f66577d2ae54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TsallisEntropy", "[", 
    RowBox[{
     RowBox[{"CoupledNormalDistribution", "[", 
      RowBox[{"0.", ",", "1.", ",", "1"}], "]"}], ",", "#", ",", "2", ",", 
     "1", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
     "True"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"0.01", ",", "0.25", ",", "0.5", ",", "1", ",", "2", ",", "4"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.817212453984119*^9, 3.817212454470429*^9}, {
  3.817212637327629*^9, 3.817212642660297*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"c6ec4542-942f-4e60-a868-d4a83827f275"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.562248401258554`", ",", "3.3156844033246493`", ",", "4.049426058094847`",
    ",", "5.283185307179586`", ",", "6.991982107930547`", ",", 
   "8.823946521098097`"}], "}"}]], "Output",
 CellChangeTimes->{3.817212455620055*^9, 3.817212643968566*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"5de7458e-30a5-4206-a6c0-4454381632de"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "PlotCoupledEntDist", "]"}]], "Input",
 CellChangeTimes->{{3.817212782694592*^9, 3.817212788183188*^9}, {
  3.817212827007497*^9, 3.81721283137866*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"0def6640-1552-42fa-995c-9c834adf9d73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"1", " ", "+", " ", 
       RowBox[{"d", " ", "\[Kappa]Mod"}]}], 
      RowBox[{
       RowBox[{"-", "\[Alpha]"}], " ", "\[Kappa]Mod"}]], "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       FractionBox[
        RowBox[{"1", "+", 
         RowBox[{"d", " ", "\[Kappa]Org"}]}], 
        RowBox[{
         RowBox[{"-", "\[Alpha]"}], " ", "\[Kappa]Org"}]], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "\[Alpha]"}], " ", "\[Kappa]Bias"}], 
         RowBox[{"1", "+", " ", 
          RowBox[{"d", " ", "\[Kappa]Bias"}]}]]}], ")"}]}]}], ",", 
    "\[Kappa]Mod", ",", "Reals"}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8225824617158003`*^9, 3.8225824718099537`*^9}, {
  3.822582513550024*^9, 3.8225825602881107`*^9}, {3.822582651292385*^9, 
  3.822582732623412*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"0fe6fd11-06e5-4a0f-a04d-aef5f751c5c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Kappa]Mod", "\[Rule]", 
    FractionBox[
     RowBox[{"\[Kappa]Org", "+", 
      RowBox[{"d", " ", "\[Kappa]Bias", " ", "\[Kappa]Org"}]}], 
     RowBox[{"1", "+", 
      RowBox[{"\[Kappa]Bias", " ", 
       RowBox[{"(", 
        RowBox[{"d", "+", "\[Alpha]", "+", 
         RowBox[{"d", " ", "\[Alpha]", " ", "\[Kappa]Org"}]}], ")"}]}]}]]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8225827217670403`*^9, 3.822582733561227*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"4eb4313d-2fde-41dd-9c78-51cefef02701"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$Assumptions", "=", 
  RowBox[{"$Assumptions", "&&", 
   RowBox[{
    RowBox[{"-", "1"}], "<", "a", "<", "1"}], "&&", 
   RowBox[{
    RowBox[{"-", "1"}], "<", "b", "<", "1"}], "&&", 
   RowBox[{
    RowBox[{"-", "1"}], "<", "c", "<", "1"}], "&&", 
   RowBox[{
    RowBox[{"-", "1"}], "<", "d", "<", "1"}]}]}]], "Input",
 CellChangeTimes->{{3.823011093256742*^9, 3.823011131942717*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"959143c8-d3aa-41e2-a490-ab6c4abae194"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
    "\[Mu]1", "|", "\[Mu]2", "|", "\[Sigma]", "|", "\[Kappa]", "|", "a", "|", 
     "b", "|", "c", "|", "d"}], ")"}], "\[Element]", 
   TemplateBox[{},
    "Reals"]}], "&&", 
  RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
  RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
  RowBox[{
   RowBox[{"-", "\[Infinity]"}], "<", 
   RowBox[{"{", 
    RowBox[{"\[Mu]1", ",", "\[Mu]2"}], "}"}], "<", "\[Infinity]"}], "&&", 
  RowBox[{
   RowBox[{"-", "1"}], "<", "a", "<", "1"}], "&&", 
  RowBox[{
   RowBox[{"-", "1"}], "<", "b", "<", "1"}], "&&", 
  RowBox[{
   RowBox[{"-", "1"}], "<", "c", "<", "1"}], "&&", 
  RowBox[{
   RowBox[{"-", "1"}], "<", "d", "<", "1"}]}]], "Output",
 CellChangeTimes->{{3.823011112167823*^9, 3.823011133018442*^9}, 
   3.82301303718825*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"c1174779-3af5-432e-9a72-d11afc883280"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", ",", "e"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "f"}], "}"}]}], "}"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.823029038782487*^9, 3.82302904972998*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"c99a9227-0c8a-4804-b9d4-59f0db01eb55"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"d", "e"},
     {"0", "f"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.823029041116618*^9, 3.823029051292218*^9}},
 CellLabel->
  "Out[61]//MatrixForm=",ExpressionUUID->"4bd1399a-e67a-483f-9296-\
b83dbea44732"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Matrix2x2", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"b", ",", "c"}], "}"}]}], "}"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"d", ",", "e"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "f"}], "}"}]}], "}"}]}], "//", "FullSimplify"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Matrix2x2", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
      RowBox[{"{", "2", "}"}], ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatrixPD", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"ConjugateTranspose", "[", "Matrix2x2", "]"}], ".", 
     "Matrix2x2"}], "//", "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"PositiveDefiniteMatrixQ", "[", "MatrixPD", "]"}]}], "Input",
 CellChangeTimes->{{3.822903690603619*^9, 3.822903700444145*^9}, {
  3.8230108589933357`*^9, 3.823010888330358*^9}, {3.823010929493374*^9, 
  3.823010992109363*^9}, {3.8230111617876577`*^9, 3.823011240652376*^9}, {
  3.8230112724675694`*^9, 3.823011288427512*^9}, {3.823013025591868*^9, 
  3.823013027513011*^9}, {3.823014176547586*^9, 3.823014182134688*^9}, {
  3.823014226645919*^9, 3.8230142302911453`*^9}, {3.823014939735417*^9, 
  3.823014942133132*^9}, {3.8230172363702717`*^9, 3.823017254555801*^9}, {
  3.8230173191901827`*^9, 3.823017347727661*^9}, {3.823017382813258*^9, 
  3.823017392026847*^9}, {3.823017422194042*^9, 3.823017431452406*^9}, {
  3.8230175320748873`*^9, 3.823017542416494*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"d162035e-4556-42c7-8f4d-973ca8620e3b"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.823010993548276*^9, 3.823011136605524*^9, 3.8230112417152653`*^9, 
   3.823011289331459*^9, {3.823013029920534*^9, 3.8230130396331663`*^9}, 
   3.823014232934978*^9, 3.82301462022447*^9, 3.823014943079389*^9, 
   3.823017255933563*^9, 3.823017350586967*^9, 3.8230174499162283`*^9, 
   3.82301754352276*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"4398b12c-4e9a-42d4-bcab-d50f4fed6e1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPD", "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8230113218269033`*^9, 3.823011328132366*^9}, {
  3.823017300591548*^9, 3.8230173018729277`*^9}, {3.82301754859478*^9, 
  3.823017549773245*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"77d7b7eb-8d7b-4694-99ed-03cb5e492cd1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["a", "2"], "+", 
        SuperscriptBox["b", "2"]}], ")"}], " ", 
      SuperscriptBox["d", "2"]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["b", "2"]}], ")"}], " ", "d", " ", "e"}], "+", 
      RowBox[{"b", " ", "c", " ", "d", " ", "f"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["b", "2"]}], ")"}], " ", "d", " ", "e"}], "+", 
      RowBox[{"b", " ", "c", " ", "d", " ", "f"}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["a", "2"], " ", 
       SuperscriptBox["e", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"b", " ", "e"}], "+", 
         RowBox[{"c", " ", "f"}]}], ")"}], "2"]}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.8230113291611853`*^9, {3.823017292910334*^9, 3.823017302484098*^9}, 
   3.823017353017592*^9, 3.823017452102231*^9, 3.82301755090597*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"7db85414-722c-46e6-bd22-5f45d5e21b72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inverse", "[", "Matrix2x2", "]"}]], "Input",
 CellChangeTimes->{{3.823017486229885*^9, 3.8230174928714046`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"de9b0169-0d7a-423e-a75b-cd522b9085c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"b", " ", "e"}], "+", 
       RowBox[{"c", " ", "f"}]}], 
      RowBox[{"a", " ", "c", " ", "d", " ", "f"}]], ",", 
     RowBox[{"-", 
      FractionBox["e", 
       RowBox[{"c", " ", "d", " ", "f"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["b", 
       RowBox[{"a", " ", "c", " ", "f"}]]}], ",", 
     FractionBox["1", 
      RowBox[{"c", " ", "f"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8230174935754347`*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"87d0217e-28f0-47bc-a866-cc9c434faa74"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{
    Cell[
     TextData["Re"]], "paclet:ref/Re"},
   "RefLink",
   BaseStyle->{"InlineFormula"}], "[", 
  RowBox[{
   RowBox[{
    TemplateBox[{
      Cell[
       TextData["Conjugate"]], "paclet:ref/Conjugate"},
     "RefLink",
     BaseStyle->{"InlineFormula"}], "[", 
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2"}], "}"}], "]"}], ".", "MatrixPD", ".", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8230146320390577`*^9, 3.823014686451907*^9}, {
  3.8230175544662523`*^9, 3.823017556195225*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"0a45b8cb-8d3e-4fbc-ac8c-ce303b16bd8e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RefLink", "[", 
   RowBox[{
    InterpretationBox[Cell[BoxData[
     "Re"],ExpressionUUID->"26be020e-6499-4d65-a765-b379e5ddb79c"],
     TextCell[
      RawBoxes["Re"]]], ",", 
    RowBox[{"paclet", ":", 
     FractionBox["ref", "Re"]}]}], "]"}], "[", 
  RowBox[{
   RowBox[{
    RowBox[{"RefLink", "[", 
     RowBox[{
      InterpretationBox[Cell[BoxData[
       "Conjugate"],ExpressionUUID->"5fc0568b-0310-46e7-94ef-1d8a7dc0e8d0"],
       TextCell[
        RawBoxes["Conjugate"]]], ",", 
      RowBox[{"paclet", ":", 
       FractionBox["ref", "Conjugate"]}]}], "]"}], "[", 
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2"}], "}"}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["a", "2"], "+", 
         SuperscriptBox["b", "2"]}], ")"}], " ", 
       SuperscriptBox["d", "2"], " ", "x1"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["b", "2"]}], ")"}], " ", "d", " ", "e"}], "+", 
         RowBox[{"b", " ", "c", " ", "d", " ", "f"}]}], ")"}], " ", "x2"}]}], 
     ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["a", "2"], "+", 
            SuperscriptBox["b", "2"]}], ")"}], " ", "d", " ", "e"}], "+", 
         RowBox[{"b", " ", "c", " ", "d", " ", "f"}]}], ")"}], " ", "x1"}], 
      "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["a", "2"], " ", 
          SuperscriptBox["e", "2"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"b", " ", "e"}], "+", 
            RowBox[{"c", " ", "f"}]}], ")"}], "2"]}], ")"}], " ", "x2"}]}]}], 
    "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.8230146366563597`*^9, 3.82301465053932*^9}, 
   3.8230146895195436`*^9, 3.823017557322516*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"8fb31925-5d9d-4126-9bea-39fd330edade"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Conjugate", "[", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2"}], "}"}], "]"}], ".", "MatrixPositiveDefinite", 
  ".", 
  RowBox[{"{", 
   RowBox[{"x1", ",", "x2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.823014712338583*^9, 3.8230147145681334`*^9}, 
   3.8230148432655*^9},
 CellLabel->"In[95]:=",ExpressionUUID->"088f1d09-f254-4e05-9965-54c33a3455f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x1", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", " ", 
         RowBox[{"Conjugate", "[", "a", "]"}]}], "+", 
        RowBox[{"c", " ", 
         RowBox[{"Conjugate", "[", "c", "]"}]}]}], ")"}], " ", 
      RowBox[{"Conjugate", "[", "x1", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a", " ", 
         RowBox[{"Conjugate", "[", "b", "]"}]}], "+", 
        RowBox[{"c", " ", 
         RowBox[{"Conjugate", "[", "d", "]"}]}]}], ")"}], " ", 
      RowBox[{"Conjugate", "[", "x2", "]"}]}]}], ")"}]}], "+", 
  RowBox[{"x2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"b", " ", 
         RowBox[{"Conjugate", "[", "a", "]"}]}], "+", 
        RowBox[{"d", " ", 
         RowBox[{"Conjugate", "[", "c", "]"}]}]}], ")"}], " ", 
      RowBox[{"Conjugate", "[", "x1", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"b", " ", 
         RowBox[{"Conjugate", "[", "b", "]"}]}], "+", 
        RowBox[{"d", " ", 
         RowBox[{"Conjugate", "[", "d", "]"}]}]}], ")"}], " ", 
      RowBox[{"Conjugate", "[", "x2", "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8230148446049633`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"39ba7be0-6de3-42ba-bb0e-2c20f5dd0b2e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Assuming", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "\[Element]", 
     "Reals"}], ",", 
    RowBox[{
     RowBox[{"x1", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", " ", 
            RowBox[{"Conjugate", "[", "a", "]"}]}], "+", 
           RowBox[{"c", " ", 
            RowBox[{"Conjugate", "[", "c", "]"}]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "x1", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", " ", 
            RowBox[{"Conjugate", "[", "b", "]"}]}], "+", 
           RowBox[{"c", " ", 
            RowBox[{"Conjugate", "[", "d", "]"}]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "x2", "]"}]}]}], ")"}]}], "+", 
     RowBox[{"x2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"b", " ", 
            RowBox[{"Conjugate", "[", "a", "]"}]}], "+", 
           RowBox[{"d", " ", 
            RowBox[{"Conjugate", "[", "c", "]"}]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "x1", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"b", " ", 
            RowBox[{"Conjugate", "[", "b", "]"}]}], "+", 
           RowBox[{"d", " ", 
            RowBox[{"Conjugate", "[", "d", "]"}]}]}], ")"}], " ", 
         RowBox[{"Conjugate", "[", "x2", "]"}]}]}], ")"}]}]}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8230148865900383`*^9, 3.8230149243535852`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"1a7632fd-87c9-409a-a08e-dbb11a1aeb4e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["a", "2"], " ", "x1"}], "+", 
      RowBox[{"a", " ", "b", " ", "x2"}], "+", 
      RowBox[{"c", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c", " ", "x1"}], "+", 
         RowBox[{"d", " ", "x2"}]}], ")"}]}]}], ")"}], " ", "x1"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a", " ", "b", " ", "x1"}], "+", 
      RowBox[{"c", " ", "d", " ", "x1"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["b", "2"], "+", 
         SuperscriptBox["d", "2"]}], ")"}], " ", "x2"}]}], ")"}], " ", 
    "x2"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.823014982044609*^9, 3.823014996809325*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"c6a64f5a-c41b-4ae2-a983-5abed770fcdc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["a", "2"], " ", 
   SuperscriptBox["x1", "2"]}], "+", 
  RowBox[{
   SuperscriptBox["c", "2"], " ", 
   SuperscriptBox["x1", "2"]}], "+", 
  RowBox[{"2", " ", "a", " ", "b", " ", "x1", " ", "x2"}], "+", 
  RowBox[{"2", " ", "c", " ", "d", " ", "x1", " ", "x2"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["b", "2"], "+", 
     SuperscriptBox["d", "2"]}], ")"}], " ", 
   SuperscriptBox["x2", "2"]}]}]], "Output",
 CellChangeTimes->{3.8230149975137653`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"26756705-0e1f-4dc6-9cd6-b12804717688"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PositiveDefiniteMatrixQ", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"20", ",", "30"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"30", ",", "45"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.823016707848364*^9, 3.823016717005394*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"ae504e7c-ae91-4282-869e-0a9f842b0661"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8230167180599613`*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"0f7a9243-7ad6-4091-a489-5124c890476a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inverse", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "6"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.823016732359613*^9, 3.823016774553877*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"58a05b44-2539-4b01-8d2b-761eb4080cd0"],

Cell[BoxData[
 TemplateBox[{
  "Inverse", "sing", 
   "\"Matrix \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"2\\\", \\\",\\\", \\\"3\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"4\\\", \\\",\\\", \\\"6\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}]\\) is singular.\"", 2, 102, 3, 31273697625196734964, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.823016775245771*^9},
 CellLabel->
  "During evaluation of \
In[102]:=",ExpressionUUID->"0aa5c219-ac3b-4037-9788-de4b71eb807c"],

Cell[BoxData[
 RowBox[{"Inverse", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "6"}], "}"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.823016775252102*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"a2e8d9d9-0f24-4368-a5f5-dc8e847ddf6e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "TableCoupledEntDist", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TableCoupledEntDist", "[", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "coupledDist", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"coupledDist", "=", 
      RowBox[{"CoupledNormalDistribution", "[", 
       RowBox[{"0.", ",", "1.", ",", "\[Kappa]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"CoupledEntropy", "[", 
          RowBox[{"coupledDist", ",", "\[Kappa]", ",", "1", ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           "False", ",", "False"}], "]"}], ",", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"\[Alpha]", " ", "=", " ", "1"}], ";", " ", 
           RowBox[{"ie", " ", "no", " ", "root"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"CoupledEntropy", "[", 
          RowBox[{"coupledDist", ",", "\[Kappa]", ",", "2", ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           "False", ",", "False"}], "]"}], ",", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"\[Alpha]", " ", "=", " ", "2"}], ";", " ", 
           RowBox[{"ie", " ", "with", " ", "root"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"CoupledEntropy", "[", 
          RowBox[{"coupledDist", ",", "0", ",", "1", ",", "1", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           "False", ",", "False"}], "]"}]}], " ", 
        RowBox[{"(*", " ", "Shannon", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"TsallisEntropy", "[", 
           RowBox[{
           "coupledDist", ",", "\[Kappa]", ",", "\[Alpha]", ",", "1", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
            "False"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"TsallisEntropy", "[", 
           RowBox[{
           "coupledDist", ",", "\[Kappa]", ",", "\[Alpha]", ",", "1", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
            "True"}], "]"}], ","}], "*)"}], "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]", ",", "0", ",", "4", ",", ".2"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.82536136776422*^9, 3.825361399426776*^9}, 
   3.825361602398926*^9, 3.825363142044585*^9, 3.825363736979072*^9},
 CellLabel->"In[82]:=",ExpressionUUID->"4e8d433f-9b48-417b-8f0e-1558dc9f8177"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableCoupledEntDist", "[", "]"}]], "Input",
 CellLabel->"In[84]:=",ExpressionUUID->"472675d1-ece9-4e53-94f3-4be3a88a1f59"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1.4189385332048903`", ",", "1.6474397726289727`", ",", 
     "1.4189385332046727`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.4898318566228173`", ",", "1.7399737224416723`", ",", 
     "1.6275026724532424`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5639739756969249`", ",", "1.8188286199859944`", ",", 
     "1.847760061298019`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.6384342208769729`", ",", "1.8869559313389477`", ",", 
     "2.0737072047476763`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.7119943004139766`", ",", "1.9466312614079313`", ",", 
     "2.302032512137508`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.7841639984157844`", ",", "1.999521738831175`", ",", 
     "2.53102424696937`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.8547643204185622`", ",", "2.046858616056756`", ",", 
     "2.7598034134253284`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.9237557689836047`", ",", "2.089571306790674`", ",", 
     "2.9879235547772636`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.991163272940447`", ",", "2.1283777925020226`", ",", 
     "3.215167827746358`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.057041303617071`", ",", "2.1638440610848138`", ",", 
     "3.441443833387181`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.1214568743140445`", ",", "2.1964243700238515`", ",", 
     "3.666727416103722`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.1844809961748703`", ",", "2.2264888809081675`", ",", 
     "3.8910317603291116`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.2461843363111313`", ",", "2.2543432049067693`", ",", 
     "4.114389998840304`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.30663504578283`", ",", "2.28024254073385`", ",", 
     "4.336845262253151`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.365897738907579`", ",", "2.3044021177382907`", ",", 
     "4.558444936383895`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.4240330930472513`", ",", "2.327005054325887`", ",", 
     "4.77923735158058`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.4810977833904873`", ",", "2.348208369244433`", ",", 
     "4.999269901759247`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.5371445955017347`", ",", "2.3681476471553555`", ",", 
     "5.218588014054255`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.5922226276200133`", ",", "2.3869407068253703`", ",", 
     "5.43723462777681`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.6463775330382875`", ",", "2.4046905186262526`", ",", 
     "5.6552499782056564`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.699651774592957`", ",", "2.4214875491674404`", ",", 
     "5.872671561128831`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.825361407973524*^9, 3.825361597845491*^9, 
  3.825361680097987*^9, 3.825363159158346*^9, 3.825363726378076*^9, 
  3.8253637746935*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"7642154c-1612-4747-a47b-bf189fc016bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"CoupledLogarithm", "[", 
     RowBox[{"x", ",", "\[Kappa]", ",", "1"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0.02", ",", "2", ",", "0.02"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\[Kappa]", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.5", ",", "1.0"}], "}"}]}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8253617453090363`*^9, 3.82536185785738*^9}, {
  3.8253618994002666`*^9, 3.825361901259856*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"6ec63dd9-b87d-431a-844c-4e2d47765ef1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "3.912023005428146`"}], 
      RowBox[{"-", "1.4571164766810187`"}], 
      RowBox[{"-", "0.8585786437626906`"}]},
     {
      RowBox[{"-", "3.2188758248682006`"}], 
      RowBox[{"-", "1.316009621329321`"}], 
      RowBox[{"-", "0.8`"}]},
     {
      RowBox[{"-", "2.8134107167600364`"}], 
      RowBox[{"-", "1.2170264717662271`"}], 
      RowBox[{"-", "0.7550510257216823`"}]},
     {
      RowBox[{"-", "2.5257286443082556`"}], 
      RowBox[{"-", "1.1382261239872464`"}], 
      RowBox[{"-", "0.717157287525381`"}]},
     {
      RowBox[{"-", "2.3025850929940455`"}], 
      RowBox[{"-", "1.071682233277444`"}], 
      RowBox[{"-", "0.683772233983162`"}]},
     {
      RowBox[{"-", "2.120263536200091`"}], 
      RowBox[{"-", "1.0135151702678118`"}], 
      RowBox[{"-", "0.6535898384862245`"}]},
     {
      RowBox[{"-", "1.966112856372833`"}], 
      RowBox[{"-", "0.9615011796297792`"}], 
      RowBox[{"-", "0.6258342613226059`"}]},
     {
      RowBox[{"-", "1.8325814637483102`"}], 
      RowBox[{"-", "0.9142329533620372`"}], 
      RowBox[{"-", "0.6`"}]},
     {
      RowBox[{"-", "1.7147984280919266`"}], 
      RowBox[{"-", "0.8707567653427657`"}], 
      RowBox[{"-", "0.5757359312880714`"}]},
     {
      RowBox[{"-", "1.6094379124341005`"}], 
      RowBox[{"-", "0.8303929047148535`"}], 
      RowBox[{"-", "0.5527864045000421`"}]},
     {
      RowBox[{"-", "1.5141277326297755`"}], 
      RowBox[{"-", "0.7926378526404627`"}], 
      RowBox[{"-", "0.530958424017657`"}]},
     {
      RowBox[{"-", "1.4271163556401458`"}], 
      RowBox[{"-", "0.7571069976184563`"}], 
      RowBox[{"-", "0.5101020514433644`"}]},
     {
      RowBox[{"-", "1.3470736479666092`"}], 
      RowBox[{"-", "0.7234991402280184`"}], 
      RowBox[{"-", "0.4900980486407215`"}]},
     {
      RowBox[{"-", "1.2729656758128873`"}], 
      RowBox[{"-", "0.691573475924564`"}], 
      RowBox[{"-", "0.47084973778708183`"}]},
     {
      RowBox[{"-", "1.203972804325936`"}], 
      RowBox[{"-", "0.661134099835661`"}], 
      RowBox[{"-", "0.4522774424948338`"}]},
     {
      RowBox[{"-", "1.1394342831883648`"}], 
      RowBox[{"-", "0.6320192426586424`"}], 
      RowBox[{"-", "0.434314575050762`"}]},
     {
      RowBox[{"-", "1.0788096613719298`"}], 
      RowBox[{"-", "0.6040935906182225`"}], 
      RowBox[{"-", "0.4169048105154699`"}]},
     {
      RowBox[{"-", "1.0216512475319812`"}], 
      RowBox[{"-", "0.5772426782039748`"}], 
      RowBox[{"-", "0.3999999999999999`"}]},
     {
      RowBox[{"-", "0.9675840262617056`"}], 
      RowBox[{"-", "0.5513687113116519`"}], 
      RowBox[{"-", "0.38355859970310235`"}]},
     {
      RowBox[{"-", "0.916290731874155`"}], 
      RowBox[{"-", "0.5263874005438454`"}], 
      RowBox[{"-", "0.3675444679663241`"}]},
     {
      RowBox[{"-", "0.867500567704723`"}], 
      RowBox[{"-", "0.5022255225562986`"}], 
      RowBox[{"-", "0.3519259301592139`"}]},
     {
      RowBox[{"-", "0.8209805520698302`"}], 
      RowBox[{"-", "0.4788190156954433`"}], 
      RowBox[{"-", "0.33667504192892006`"}]},
     {
      RowBox[{"-", "0.7765287894989963`"}], 
      RowBox[{"-", "0.4561114741276717`"}], 
      RowBox[{"-", "0.3217670016874732`"}]},
     {
      RowBox[{"-", "0.7339691750802003`"}], 
      RowBox[{"-", "0.4340529435324545`"}], 
      RowBox[{"-", "0.3071796769724491`"}]},
     {
      RowBox[{"-", "0.6931471805599453`"}], 
      RowBox[{"-", "0.4125989480318004`"}], 
      RowBox[{"-", "0.2928932188134524`"}]},
     {
      RowBox[{"-", "0.6539264674066639`"}], 
      RowBox[{"-", "0.3917096965643767`"}], 
      RowBox[{"-", "0.2788897449072021`"}]},
     {
      RowBox[{"-", "0.616186139423817`"}], 
      RowBox[{"-", "0.371349430043056`"}], 
      RowBox[{"-", "0.26515307716504655`"}]},
     {
      RowBox[{"-", "0.579818495252942`"}], 
      RowBox[{"-", "0.3514858800765772`"}], 
      RowBox[{"-", "0.25166852264521167`"}]},
     {
      RowBox[{"-", "0.5447271754416719`"}], 
      RowBox[{"-", "0.3320898169194786`"}], 
      RowBox[{"-", "0.2384226894136091`"}]},
     {
      RowBox[{"-", "0.5108256237659907`"}], 
      RowBox[{"-", "0.3131346693965016`"}], 
      RowBox[{"-", "0.2254033307585166`"}]},
     {
      RowBox[{"-", "0.4780358009429998`"}], 
      RowBox[{"-", "0.2945962033436804`"}], 
      RowBox[{"-", "0.21259921259881887`"}]},
     {
      RowBox[{"-", "0.4462871026284195`"}], 
      RowBox[{"-", "0.2764522479744931`"}], 
      RowBox[{"-", "0.19999999999999996`"}]},
     {
      RowBox[{"-", "0.4155154439616658`"}], 
      RowBox[{"-", "0.25868246176527765`"}], 
      RowBox[{"-", "0.18759615953640396`"}]},
     {
      RowBox[{"-", "0.3856624808119846`"}], 
      RowBox[{"-", "0.24126813113672818`"}], 
      RowBox[{"-", "0.17537887487646786`"}]},
     {
      RowBox[{"-", "0.3566749439387323`"}], 
      RowBox[{"-", "0.22419199651479849`"}], 
      RowBox[{"-", "0.16333997346592444`"}]},
     {
      RowBox[{"-", "0.32850406697203594`"}], 
      RowBox[{"-", "0.20743810137713403`"}], 
      RowBox[{"-", "0.15147186257614287`"}]},
     {
      RowBox[{"-", "0.3011050927839216`"}], 
      RowBox[{"-", "0.19099166069794493`"}], 
      RowBox[{"-", "0.13976747329573735`"}]},
     {
      RowBox[{"-", "0.2744368457017603`"}], 
      RowBox[{"-", "0.1748389458452133`"}], 
      RowBox[{"-", "0.12822021129186534`"}]},
     {
      RowBox[{"-", "0.2484613592984996`"}], 
      RowBox[{"-", "0.15896718349682226`"}], 
      RowBox[{"-", "0.11682391336721532`"}]},
     {
      RowBox[{"-", "0.2231435513142097`"}], 
      RowBox[{"-", "0.14336446655488833`"}], 
      RowBox[{"-", "0.10557280900008414`"}]},
     {
      RowBox[{"-", "0.19845093872383818`"}], 
      RowBox[{"-", "0.12801967537176862`"}], 
      RowBox[{"-", "0.09446148618625827`"}]},
     {
      RowBox[{"-", "0.17435338714477766`"}], 
      RowBox[{"-", "0.11292240787338659`"}], 
      RowBox[{"-", "0.0834848610088319`"}]},
     {
      RowBox[{"-", "0.15082288973458366`"}], 
      RowBox[{"-", "0.09806291738837003`"}], 
      RowBox[{"-", "0.07263815045042965`"}]},
     {
      RowBox[{"-", "0.12783337150988489`"}], 
      RowBox[{"-", "0.08343205717488633`"}], 
      RowBox[{"-", "0.061916848035314054`"}]},
     {
      RowBox[{"-", "0.10536051565782628`"}], 
      RowBox[{"-", "0.06902123078874056`"}], 
      RowBox[{"-", "0.05131670194948623`"}]},
     {
      RowBox[{"-", "0.08338160893905101`"}], 
      RowBox[{"-", "0.05482234756228799`"}], 
      RowBox[{"-", "0.040833695337456066`"}]},
     {
      RowBox[{"-", "0.06187540371808741`"}], 
      RowBox[{"-", "0.04082778256887698`"}], 
      RowBox[{"-", "0.030464028516734132`"}]},
     {
      RowBox[{"-", "0.04082199452025505`"}], 
      RowBox[{"-", "0.02703034053562381`"}], 
      RowBox[{"-", "0.020204102886728692`"}]},
     {
      RowBox[{"-", "0.020202707317519466`"}], 
      RowBox[{"-", "0.013423223241462612`"}], 
      RowBox[{"-", "0.01005050633883342`"}]},
     {"0.`", "0.`", "0.`"},
     {"0.01980262729617973`", "0.013245419120226032`", "0.00995049383620783`"},
     {"0.03922071315328133`", "0.026318807640354436`", "0.01980390271855703`"},
     {"0.058268908123975824`", "0.03922564484443258`", "0.02956301409869999`"},
     {"0.0769610411361284`", "0.05197113601203629`", 
      "0.039230484541326494`"},
     {"0.09531017980432493`", "0.06456023091273444`", 
      "0.04880884817015163`"},
     {"0.11332868530700327`", "0.07699764074044158`", 
      "0.05830052442583633`"},
     {"0.1310282624064042`", "0.08928785364463732`", "0.06770782520313112`"},
     {"0.1484200051182734`", "0.10143514899716077`", "0.07703296142690097`"},
     {"0.16551443847757333`", "0.11344361051744167`", 
      "0.08627804912002146`"},
     {"0.1823215567939546`", "0.1253171383652223`", "0.09544511501033215`"},
     {"0.19885085874516517`", "0.13705946029775307`", 
      "0.10453610171872607`"},
     {"0.2151113796169455`", "0.14867414197793272`", "0.11355287256600444`"},
     {"0.23111172096338664`", "0.16016459651058135`", 
      "0.12249721603218244`"},
     {"0.2468600779315258`", "0.17153409327592506`", "0.13137084989847603`"},
     {"0.26236426446749106`", "0.18278576612221187`", 
      "0.14017542509913805`"},
     {"0.27763173659827955`", "0.19392262097304735`", 
      "0.14891252930760568`"},
     {"0.29266961396282004`", "0.20494754289946648`", 
      "0.15758369027902264`"},
     {"0.3074846997479607`", "0.21586330270178555`", "0.1661903789690602`"},
     {"0.3220834991691134`", "0.22667256304190353`", "0.1747340124470731`"},
     {"0.336472236621213`", "0.2373778841627936`", "0.18321595661992318`"},
     {"0.3506568716131695`", "0.2479817292284534`", "0.19163752878129858`"},
     {"0.36464311358790924`", "0.25848646931446817`", 
      "0.19999999999999996`"},
     {"0.37843643572024505`", "0.2688943880765633`", "0.20830459735945728`"},
     {"0.3920420877760237`", "0.27920768612202584`", "0.21655250605964382`"},
     {"0.4054651081081644`", "0.28942848510666375`", "0.22474487139158894`"},
     {"0.41871033485818504`", "0.2995588315779325`", "0.2328828005937953`"},
     {"0.43178241642553783`", "0.3096007005830912`", "0.24096736459908574`"},
     {"0.44468582126144574`", "0.31955599905959886`", 
      "0.24899959967967966`"},
     {"0.4574248470388755`", "0.32942656902350986`", "0.25698050899765357`"},
     {"0.47000362924573563`", "0.339214190570293`", "0.26491106406735176`"},
     {"0.4824261492442928`", "0.34892058470131815`", "0.2727922061357855`"},
     {"0.4946962418361071`", "0.35854741598814677`", "0.2806248474865698`"},
     {"0.506817602368452`", "0.36809629508579667`", "0.2884098726725126`"},
     {"0.5187937934151676`", "0.37756878110525216`", "0.29614813968157216`"},
     {"0.5306282510621704`", "0.38696638385467397`", "0.30384048104052974`"},
     {"0.5423242908253617`", "0.3962905659580369`", "0.3114877048604001`"},
     {"0.5538851132264376`", "0.4055427448592326`", "0.3190905958272918`"},
     {"0.5653138090500605`", "0.4147242947190741`", "0.3266499161421599`"},
     {"0.5766133643039938`", "0.42383654821207584`", "0.3341664064126333`"},
     {"0.5877866649021191`", "0.4328807982293599`", "0.34164078649987384`"},
     {"0.598836501088704`", "0.441858299493588`", "0.34907375632320425`"},
     {"0.6097655716208943`", "0.45077027009136694`", "0.3564659966250536`"},
     {"0.62057648772511`", "0.45961789292819955`", "0.3638181696985856`"},
     {"0.6312717768418579`", "0.46840231711068725`", "0.37113092008020887`"},
     {"0.6418538861723948`", "0.47712465926034175`", "0.37840487520902233`"},
     {"0.6523251860396903`", "0.4857860047630873`", "0.38564064605510184`"},
     {"0.6626879730752367`", "0.49438740895822475`", "0.39283882771841183`"},
     {"0.6729444732424258`", "0.5029298982703896`", "0.3999999999999999`"},
     {"0.6830968447064438`", "0.5114144712877824`", "0.4071247279470289`"},
     {"0.6931471805599453`", "0.5198420997897464`", "0.41421356237309515`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.825361859565082*^9, 3.825361902382959*^9},
 CellLabel->
  "Out[68]//MatrixForm=",ExpressionUUID->"1ce076fd-a44e-433e-bc86-\
d35719bf324c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"coupledDistTest", "=", 
   RowBox[{"CoupledNormalDistribution", "[", 
    RowBox[{"0.", ",", "1.", ",", "\[Kappa]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CoupledEntropy", "[", 
      RowBox[{
      "coupledDistTest", ",", "\[Kappa]", ",", "1", ",", "2", ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
     ",", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"\[Alpha]", " ", "=", " ", "1"}], ";", " ", 
       RowBox[{"ie", " ", "no", " ", "root"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"CoupledEntropy", "[", 
      RowBox[{
      "coupledDistTest", ",", "\[Kappa]", ",", "1", ",", "2", ",", "2", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
     ",", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"\[Alpha]", " ", "=", " ", "2"}], ";", " ", 
       RowBox[{"ie", " ", "with", " ", "root"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"CoupledEntropy", "[", 
      RowBox[{
      "coupledDistTest", ",", "0", ",", "1", ",", "2", ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}],
     " ", 
    RowBox[{"(*", " ", "Shannon", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"TsallisEntropy", "[", 
       RowBox[{"coupledDist", ",", "\[Kappa]", ",", "\[Alpha]", ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
        "False"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"TsallisEntropy", "[", 
       RowBox[{"coupledDist", ",", "\[Kappa]", ",", "\[Alpha]", ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
        "True"}], "]"}], ","}], "*)"}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", "0", ",", "2", ",", "1"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.825688396694743*^9, 3.8256884228947687`*^9}, {
  3.8256884570959797`*^9, 3.825688469457005*^9}, {3.825689793148816*^9, 
  3.825689793230629*^9}, {3.82568984514865*^9, 3.825689864963606*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"52a644f3-8ca3-471e-bc0b-b3c4fe380405"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1.4124597352069417`", ",", "1.1640530475448743`", ",", 
     "1.4124597352069417`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.05216354879291`", ",", "0.952938668019131`", ",", 
     "2.5133804281671375`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.9980844480967578`", ",", "0.8725209803897483`", ",", 
     "3.654405919462733`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8256888692211943`*^9, {3.825689773596677*^9, 3.825689803185512*^9}, {
   3.825689846636367*^9, 3.8256898676019907`*^9}, 3.825690241575005*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"8b8538b4-6730-4215-8e12-afea5e05c68f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CoupledCrossEntropy", "[", 
  RowBox[{
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     FractionBox["0.3989422804014327`", 
      SqrtBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"1.`", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", "\[FormalX]"}], ")"}], 
          "2"]}]]]], ",", 
     RowBox[{"{", 
      RowBox[{"\[FormalX]", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     FractionBox["0.3989422804014327`", 
      SqrtBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"1.`", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", "\[FormalX]"}], ")"}], 
          "2"]}]]]], ",", 
     RowBox[{"{", 
      RowBox[{"\[FormalX]", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
   ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.825688891894554*^9, 3.82568889242653*^9}, 
   3.8256892703993587`*^9},
 CellLabel->"In[51]:=",ExpressionUUID->"810d4078-0ce4-49aa-ba7d-e0e51311b748"],

Cell[BoxData[
 RowBox[{"CoupledCrossEntropy", "[", 
  RowBox[{
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     FractionBox["0.3989422804014327`", 
      SqrtBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"1.`", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", "\[FormalX]"}], ")"}], 
          "2"]}]]]], ",", 
     RowBox[{"{", 
      RowBox[{"\[FormalX]", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     FractionBox["0.3989422804014327`", 
      SqrtBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"1.`", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", "\[FormalX]"}], ")"}], 
          "2"]}]]]], ",", 
     RowBox[{"{", 
      RowBox[{"\[FormalX]", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
   ",", "0", ",", "1", ",", "1", ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.825688893412158*^9, 3.8256891083722878`*^9, 
  3.8256892716247597`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"41f00d5a-a448-4e05-b63d-bcd037431d02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"CoupledProbability", "[", 
     RowBox[{
      RowBox[{"ProbabilityDistribution", "[", 
       RowBox[{
        FractionBox["0.3989422804014327`", 
         SqrtBox[
          SuperscriptBox["2.718281828459045`", 
           RowBox[{"1.`", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"0.`", "\[VeryThinSpace]", "+", "\[FormalX]"}], ")"}], 
             "2"]}]]]], ",", 
        RowBox[{"{", 
         RowBox[{"\[FormalX]", ",", 
          RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
      ",", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "2"}], " ", "1"}], 
       RowBox[{"1", "+", 
        RowBox[{"1", " ", "1"}]}]], ",", "x"}], "]"}], 
    SuperscriptBox[
     RowBox[{"CoupledLogarithm", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"PDF", "[", 
         RowBox[{
          RowBox[{"ProbabilityDistribution", "[", 
           RowBox[{
            FractionBox["0.3989422804014327`", 
             SqrtBox[
              SuperscriptBox["2.718281828459045`", 
               RowBox[{"1.`", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"0.`", "\[VeryThinSpace]", "+", "\[FormalX]"}], 
                  ")"}], "2"]}]]]], ",", 
            RowBox[{"{", 
             RowBox[{"\[FormalX]", ",", 
              RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
           "]"}], ",", "x"}], "]"}], 
        RowBox[{"-", "2"}]], ",", "1", ",", "1"}], "]"}], 
     FractionBox["1", "1"]]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Method", "\[Rule]", "\"\<AdaptiveMonteCarlo\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.82568903001696*^9, 3.825689086675531*^9}, {
  3.825689169696793*^9, 3.825689175838088*^9}, {3.8256896348010683`*^9, 
  3.8256896348103857`*^9}, {3.825689685895061*^9, 3.825689698910811*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"54f6b41a-56a8-4757-b07d-3b4c8bdda499"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"", 2, 53, 1, 31291960688958910043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.825689701307374*^9},
 CellLabel->
  "During evaluation of \
In[53]:=",ExpressionUUID->"cb139f6d-7d30-4b27-bdc4-ecd42748d42e"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
SuperscriptBox[RowBox[{\\\"(\\\", SuperscriptBox[\\\"y\\\", \\\"2\\\"], \\\")\
\\\"}], RowBox[{\\\"-\\\", \\\"System`MeijerGDump`s$5833\\\"}]], \\\" \\\", \
\\\"ComplexInfinity\\\", \\\" \\\", RowBox[{\\\"Gamma\\\", \\\"[\\\", \
\\\"System`MeijerGDump`s$5833\\\", \\\"]\\\"}]}]\\) encountered.\"", 2, 53, 2,
    31291960688958910043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.825689701314838*^9},
 CellLabel->
  "During evaluation of \
In[53]:=",ExpressionUUID->"e11d1929-080c-4631-b856-7b3906c54da4"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0.`\\\"]\\) \
encountered.\"", 2, 53, 3, 31291960688958910043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.825689701320065*^9},
 CellLabel->
  "During evaluation of \
In[53]:=",ExpressionUUID->"97068e41-1707-48d1-bd63-2fa0b724bf13"],

Cell[BoxData[
 TemplateBox[{
  "Infinity", "indet", 
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0.`\\\", \\\" \\\", \
SuperscriptBox[RowBox[{\\\"(\\\", SuperscriptBox[\\\"y\\\", \\\"2\\\"], \\\")\
\\\"}], RowBox[{\\\"-\\\", \\\"System`MeijerGDump`s$5833\\\"}]], \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"", 2, 53, 4, 31291960688958910043, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8256897013263063`*^9},
 CellLabel->
  "During evaluation of \
In[53]:=",ExpressionUUID->"38b84b37-ded9-46e1-a5b6-4e262b92ebf3"],

Cell[BoxData["2.60797783796326`"], "Output",
 CellChangeTimes->{3.8256890888140287`*^9, 3.8256891860751657`*^9, 
  3.825689256163558*^9, 3.825689701359684*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"ea669b28-f8a9-4c6b-8f68-d43511b4289e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CoupledCrossEntropy"}]], "Input",
 CellChangeTimes->{{3.825689313461355*^9, 3.825689314629367*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"637054d7-2211-426f-9332-831ca2598ecc"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Global`CoupledCrossEntropy\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"CoupledCrossEntropy", "[", 
                    RowBox[{"distP_", ",", "distQ_", ",", "\[Kappa]_", ",", 
                    RowBox[{"d_", ":", "1"}], ",", "Null", ",", 
                    RowBox[{"\[Alpha]_", ":", "2"}], ",", 
                    RowBox[{"\[Delta]_", ":", "1"}], ",", 
                    RowBox[{"limits_", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], 
                    "}"}]}]}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"CoupledCrossEntropy", "[", 
                    RowBox[{
                    "distP", ",", "distQ", ",", "\[Kappa]", ",", "d", ",", 
                    "\[Alpha]", ",", "\[Delta]", ",", "limits"}], "]"}], "=", 
                    
                    RowBox[{"NIntegrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"CoupledProbability", "[", 
                    RowBox[{"distP", ",", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"\[Alpha]", " ", "\[Kappa]"}], 
                    RowBox[{"1", "+", 
                    RowBox[{"d", " ", "\[Kappa]"}]}]]}], ",", "x"}], "]"}], 
                    " ", 
                    SuperscriptBox[
                    RowBox[{"CoupledLogarithm", "[", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"PDF", "[", 
                    RowBox[{"distQ", ",", "x"}], "]"}], 
                    RowBox[{"-", "\[Alpha]"}]], ",", "\[Kappa]", ",", "d"}], 
                    "]"}], 
                    RowBox[{"1", "/", "\[Delta]"}]]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{
                    "limits", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "limits", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{
                    "Method", "\[Rule]", "\<\"AdaptiveMonteCarlo\"\>"}]}], 
                    "]"}]}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`CoupledCrossEntropy\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{13., {2., 11.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{13., {2., 11.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Global`CoupledCrossEntropy\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`CoupledCrossEntropy", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`CoupledCrossEntropy, \
{$CellContext`CoupledCrossEntropy[
         Pattern[$CellContext`distP, 
          Blank[]], 
         Pattern[$CellContext`distQ, 
          Blank[]], 
         Pattern[$CellContext`\[Kappa], 
          Blank[]], 
         Optional[
          Pattern[$CellContext`d, 
           Blank[]], 1], Null, 
         Optional[
          Pattern[$CellContext`\[Alpha], 
           Blank[]], 2], 
         Optional[
          Pattern[$CellContext`\[Delta], 
           Blank[]], 1], 
         Optional[
          Pattern[$CellContext`limits, 
           Blank[]], {
           DirectedInfinity[-1], 
           DirectedInfinity[
           1]}]] :> ($CellContext`CoupledCrossEntropy[$CellContext`distP, \
$CellContext`distQ, $CellContext`\[Kappa], $CellContext`d, $CellContext`\
\[Alpha], $CellContext`\[Delta], $CellContext`limits] = 
        NIntegrate[$CellContext`CoupledProbability[$CellContext`distP, \
(-$CellContext`\[Alpha]) ($CellContext`\[Kappa]/(
             1 + $CellContext`d $CellContext`\[Kappa])), $CellContext`x] \
$CellContext`CoupledLogarithm[
            PDF[$CellContext`distQ, $CellContext`x]^(-$CellContext`\[Alpha]), \
$CellContext`\[Kappa], $CellContext`d]^(
            1/$CellContext`\[Delta]), {$CellContext`x, 
           Part[$CellContext`limits, 1], 
           Part[$CellContext`limits, 2]}, Method -> "AdaptiveMonteCarlo"])}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`CoupledCrossEntropy"|>, False]]], "Output",
 CellChangeTimes->{3.825689316013125*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"b7b59771-676b-4d3a-b281-8bab5cb9b7b1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"CoupledEntropy", "[", 
  RowBox[{
  "coupledDistTest", ",", "\[Kappa]", ",", "1", ",", "2", ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",ExpressionUUID->"89f40402-c856-4e25-8d17-da0734c967b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"coupledDistTest", "/.", 
  RowBox[{"\[Kappa]", "\[Rule]", "2"}]}]], "Input",
 CellChangeTimes->{{3.825689916920718*^9, 3.825689943407353*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"4f401ed9-87ae-4daf-87d4-992140b0b0fc"],

Cell[BoxData[
 RowBox[{"ProbabilityDistribution", "[", 
  RowBox[{
   FractionBox["0.2696763005941897`", 
    SqrtBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2.`", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", "\[FormalX]"}], ")"}], 
          "2"]}]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.8256898984864473`*^9, 3.825689944529078*^9}},
 CellLabel->"Out[65]=",ExpressionUUID->"8e7108f3-437a-414a-9346-788827360f38"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CoupledCrossEntropy", "[", 
   RowBox[{
    RowBox[{"ProbabilityDistribution", "[", 
     RowBox[{
      FractionBox["0.3989422804014327`", 
       SqrtBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"1.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", "\[FormalX]"}], ")"}], 
           "2"]}]]]], ",", 
      RowBox[{"{", 
       RowBox[{"\[FormalX]", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    ",", 
    RowBox[{"ProbabilityDistribution", "[", 
     RowBox[{
      FractionBox["0.3989422804014327`", 
       SqrtBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"1.`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"0.`", "\[VeryThinSpace]", "+", "\[FormalX]"}], ")"}], 
           "2"]}]]]], ",", 
      RowBox[{"{", 
       RowBox[{"\[FormalX]", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    ",", "0", ",", "2", ",", "1", ",", "1", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], "//",
   "N"}]], "Input",
 CellChangeTimes->{{3.825690002421472*^9, 3.825690033599641*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"52ae8979-ed09-44b9-8951-a81d4796d1ca"],

Cell[BoxData[
 RowBox[{"CoupledCrossEntropy", "[", 
  RowBox[{
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     FractionBox["0.3989422804014327`", 
      SqrtBox[
       SuperscriptBox["2.718281828459045`", 
        RowBox[{"1.`", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", "\[FormalX]"}], ")"}], 
          "2"]}]]]], ",", 
     RowBox[{"{", 
      RowBox[{"\[FormalX]", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     FractionBox["0.3989422804014327`", 
      SqrtBox[
       SuperscriptBox["2.718281828459045`", 
        RowBox[{"1.`", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", "\[FormalX]"}], ")"}], 
          "2"]}]]]], ",", 
     RowBox[{"{", 
      RowBox[{"\[FormalX]", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
   ",", "0.`", ",", "2.`", ",", "1.`", ",", "1.`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.825690006018031*^9, 3.8256900345945187`*^9}},
 CellLabel->"Out[67]=",ExpressionUUID->"222419d2-3469-42de-8848-a7f8195b4b38"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"CoupledCrossEntropy", "["}]], "Input",
 CellChangeTimes->{{3.825690013070323*^9, 
  3.82569001766241*^9}},ExpressionUUID->"8935511f-29f8-4bdd-bc09-\
432819f9c0cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CoupledEntropy", "[", 
   RowBox[{
   "coupledDistTest", ",", "\[Kappa]", ",", "1", ",", "2", ",", "1", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], "/.", 
  RowBox[{"\[Kappa]", "\[Rule]", "1"}]}]], "Input",
 CellChangeTimes->{{3.825690185747397*^9, 3.82569018989554*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"fbb14f22-65d4-4744-b351-a478c8b31d81"],

Cell[BoxData[
 RowBox[{"CoupledCrossEntropy", "[", 
  RowBox[{
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     FractionBox["0.31830988618379075`", 
      SqrtBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"1.`", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"0.`", "\[VeryThinSpace]", "+", "\[FormalX]"}], ")"}], 
            "2"]}]}], ")"}], "2"]]], ",", 
     RowBox[{"{", 
      RowBox[{"\[FormalX]", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     FractionBox["0.31830988618379075`", 
      SqrtBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"1.`", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"0.`", "\[VeryThinSpace]", "+", "\[FormalX]"}], ")"}], 
            "2"]}]}], ")"}], "2"]]], ",", 
     RowBox[{"{", 
      RowBox[{"\[FormalX]", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
   ",", "1", ",", "2", ",", "1", ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.8256901911289186`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"2fbdd491-f6f6-423c-b674-f1b5c83bd3a5"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    SuperscriptBox["x", "2"], "y"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"2", ",", "y_"}], "]"}], ":=", 
   RowBox[{"4", "y"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.82569881772095*^9, 3.825698874458529*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"fec23006-3290-4a5f-ad31-c57580631694"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "f"}]], "Input",
 CellChangeTimes->{{3.825698878013242*^9, 3.82569887909872*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"56e662db-e2a8-4ad2-8d04-b9dd15ceb3aa"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"2", ",", "y_"}], "]"}], ":=", 
                    RowBox[{"4", " ", "y"}]}]},
                    {
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
                    RowBox[{
                    SuperscriptBox["x", "2"], " ", "y"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`f\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{13., {2., 11.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{13., {2., 11.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`f\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`f", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`f, {$CellContext`f[2, 
         Pattern[$CellContext`y, 
          Blank[]]] :> 4 $CellContext`y, $CellContext`f[
         Pattern[$CellContext`x, 
          Blank[]], 
         Pattern[$CellContext`y, 
          Blank[]]] :> $CellContext`x^2 $CellContext`y}], "SubValues" -> None,
     "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "Global`f"|>, 
   False]]], "Output",
 CellChangeTimes->{3.825698880237701*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"6c21cd8e-2293-464d-b33f-e3eb6eb8474f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"2", ",", "j"}], "]"}]], "Input",
 CellChangeTimes->{{3.825698897814898*^9, 3.825698903749175*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"3f4f23cf-1a95-4147-be8a-f8ae68053a54"],

Cell[BoxData[
 RowBox[{"4", " ", "j"}]], "Output",
 CellChangeTimes->{3.825698904938841*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"27157d6e-dfc4-462c-8718-06c79dbc0581"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CoupledEntropyTemp"}]], "Input",
 CellChangeTimes->{{3.8256995588023977`*^9, 3.825699560022338*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"b0831ccd-a1ca-4348-9856-d262fbef0b6b"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Global`CoupledEntropyTemp\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"CoupledEntropyTemp", "[", 
                    RowBox[{
                    RowBox[{"ProbabilityDistribution", "[", 
                    RowBox[{
                    FractionBox["0.39794618693590605`", 
                    SqrtBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"0.01`", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"0.`", "\[VeryThinSpace]", "+", "\[FormalX]"}], 
                    ")"}], "2"]}]}], ")"}], "101.`"]]], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[FormalX]", ",", 
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], 
                    "}"}]}], "]"}], ",", "0.01`", ",", "1", ",", "2", ",", 
                    "1", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], 
                    "}"}]}], "]"}], "=", "1.4083095946894282`"}]},
                    {
                    RowBox[{
                    RowBox[{"CoupledEntropyTemp", "[", 
                    RowBox[{
                    RowBox[{"ProbabilityDistribution", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"\[Kappa]_", ">", "0"}], ",", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"\[Kappa]_", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$x1", "-", "\[Mu]_"}], ",", 
                    RowBox[{"$x2", "-", "\[Mu]_"}]}], "}"}], ".", 
                    RowBox[{"Inverse", "[", "\[CapitalSigma]_", "]"}], ".", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$x1", "-", "\[Mu]_"}], ",", 
                    RowBox[{"$x2", "-", "\[Mu]_"}]}], "}"}]}], ")"}], 
                    FractionBox["\[Alpha]_", "2"]]}]}], ")"}], 
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[Kappa]_"}]}], "\[Kappa]_"]], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "\[LessEqual]", "\[Kappa]_", "<",
                     "0"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Simplify", "[", 
                    RowBox[{"1", "+", 
                    RowBox[{"\[Kappa]_", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$x1", "-", "\[Mu]_"}], ",", 
                    RowBox[{"$x2", "-", "\[Mu]_"}]}], "}"}], ".", 
                    RowBox[{"Inverse", "[", "\[CapitalSigma]_", "]"}], ".", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$x1", "-", "\[Mu]_"}], ",", 
                    RowBox[{"$x2", "-", "\[Mu]_"}]}], "}"}]}], ")"}], 
                    FractionBox["\[Alpha]_", "2"]]}]}], "]"}], 
                    "\[GreaterEqual]", "0"}], ",", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"\[Kappa]_", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$x1", "-", "\[Mu]_"}], ",", 
                    RowBox[{"$x2", "-", "\[Mu]_"}]}], "}"}], ".", 
                    RowBox[{"Inverse", "[", "\[CapitalSigma]_", "]"}], ".", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$x1", "-", "\[Mu]_"}], ",", 
                    RowBox[{"$x2", "-", "\[Mu]_"}]}], "}"}]}], ")"}], 
                    FractionBox["\[Alpha]_", "2"]]}]}], ")"}], 
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[Kappa]_"}]}], "\[Kappa]_"]], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[Kappa]_"}]}], "\[Kappa]_"], ">", 
                    "0"}], ",", "0", ",", "\[Infinity]"}], "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"\[Kappa]_", "\[Equal]", "0"}], ",", 
                    RowBox[{"Exp", "[", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$x1", "-", "\[Mu]_"}], ",", 
                    RowBox[{"$x2", "-", "\[Mu]_"}]}], "}"}], ".", 
                    RowBox[{"Inverse", "[", "\[CapitalSigma]_", "]"}], ".", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$x1", "-", "\[Mu]_"}], ",", 
                    RowBox[{"$x2", "-", "\[Mu]_"}]}], "}"}]}], ")"}], 
                    FractionBox["\[Alpha]_", "2"]], "]"}], ",", "True", ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"CoupledExponential", "::", "nnarg"}], 
                    "MessageName"], ",", "\[Kappa]_"}], "]"}]}], "]"}], 
                    RowBox[{"-", 
                    FractionBox["1", "\[Alpha]_"]}]], "/", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"\[Alpha]_", "\[Equal]", "1"}], ",", 
                    FractionBox[
                    SqrtBox[
                    RowBox[{"Det", "[", "\[CapitalSigma]_", "]"}]], 
                    RowBox[{"1", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "2"}], ")"}], " ", 
                    "\[Kappa]_"}]}]], ",", 
                    RowBox[{"\[Alpha]_", "\[Equal]", "2"}], ",", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"\[Kappa]_", ">", "0"}], ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[Pi]", 
                    RowBox[{"2", "/", "2"}]], " ", 
                    SqrtBox[
                    RowBox[{"Det", "[", "\[CapitalSigma]_", "]"}]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[Kappa]_"}]}], ")"}], " ", 
                    RowBox[{"Beta", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]_"}]], "+", "1"}], ",", 
                    FractionBox["2", "2"]}], "]"}]}], 
                    RowBox[{
                    SuperscriptBox["\[Kappa]_", 
                    RowBox[{"2", "/", "2"}]], " ", 
                    RowBox[{"Gamma", "[", 
                    FractionBox["2", "2"], "]"}]}]], ",", 
                    RowBox[{"\[Kappa]_", "\[Equal]", "0"}], ",", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"2", " ", "\[Pi]"}], ")"}], 
                    RowBox[{"2", "/", "2"}]], " ", 
                    SqrtBox[
                    RowBox[{"Det", "[", "\[CapitalSigma]_", "]"}]]}], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "2"]}], "<", "\[Kappa]_", "<", "0"}], 
                    ",", 
                    FractionBox[
                    RowBox[{
                    SuperscriptBox["\[Pi]", 
                    RowBox[{"2", "/", "2"}]], " ", 
                    SqrtBox[
                    RowBox[{"Det", "[", "\[CapitalSigma]_", "]"}]], " ", 
                    RowBox[{"Beta", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[Kappa]_"}]}], 
                    RowBox[{"2", " ", "\[Kappa]_"}]]}], "+", "1"}], ",", 
                    FractionBox["2", "2"]}], "]"}]}], 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"-", "\[Kappa]_"}], ")"}], 
                    RowBox[{"2", "/", "2"}]], " ", 
                    RowBox[{"Gamma", "[", 
                    FractionBox["2", "2"], "]"}]}]]}], "]"}]}], "]"}]}], ",", 
                    
                    RowBox[{"\[Alpha]_", "\[Equal]", "1"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"$x1", ",", "\[Mu]", ",", "\[Infinity]"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"$x2", ",", "_", ",", "\[Infinity]"}], "}"}]}], 
                    "}"}], ",", 
                    RowBox[{"\[Alpha]_", "\[Equal]", "2"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"$x1", ",", 
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"$x2", ",", 
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], 
                    "}"}]}], "}"}]}], "]"}], ",", "\[Kappa]_", ",", 
                    RowBox[{"d_", ":", "1"}], ",", 
                    RowBox[{"\[Alpha]_", ":", "2"}], ",", "1", ",", 
                    RowBox[{"limits_", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], 
                    "}"}]}]}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"CoupledEntropyTemp", "[", 
                    RowBox[{
                    RowBox[{"MultivariateCoupledDistribution", "[", 
                    RowBox[{
                    "\[Mu]", ",", "\[CapitalSigma]", ",", "\[Kappa]", ",", 
                    "2"}], "]"}], ",", "\[Kappa]", ",", "d", ",", "2", ",", 
                    "1", ",", "limits"}], "]"}], "=", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["\[Pi]", "\[Kappa]"], ")"}], "d"], " ", 
                    RowBox[{"Det", "[", "\[CapitalSigma]", "]"}]}], ")"}], 
                    FractionBox["\[Kappa]", 
                    RowBox[{"1", "+", 
                    RowBox[{"d", " ", "\[Kappa]"}]}]]], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"d", " ", "\[Kappa]"}]}], ")"}], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox[
                    RowBox[{"Gamma", "[", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]], "]"}], 
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"d", "+", 
                    FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}]], ")"}], 
                    FractionBox[
                    RowBox[{"2", " ", "\[Kappa]"}], 
                    RowBox[{"1", "+", 
                    RowBox[{"d", " ", "\[Kappa]"}]}]]]}]}], 
                    RowBox[{"2", " ", "\[Kappa]"}]]}]}]},
                    {
                    RowBox[{
                    RowBox[{"CoupledEntropyTemp", "[", 
                    RowBox[{"dist_", ",", "\[Kappa]_", ",", 
                    RowBox[{"d_", ":", "1"}], ",", 
                    RowBox[{"\[Alpha]_", ":", "2"}], ",", 
                    RowBox[{"\[Delta]_", ":", "1"}], ",", 
                    RowBox[{"limits_", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], 
                    "}"}]}]}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"CoupledEntropyTemp", "[", 
                    RowBox[{
                    "dist", ",", "\[Kappa]", ",", "d", ",", "\[Alpha]", ",", 
                    "\[Delta]", ",", "limits"}], "]"}], "=", 
                    RowBox[{"CoupledCrossEntropyTemp", "[", 
                    RowBox[{
                    "dist", ",", "dist", ",", "\[Kappa]", ",", "\[Alpha]", 
                    ",", "d", ",", "\[Delta]", ",", "limits"}], "]"}]}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`CoupledEntropyTemp\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{13., {2., 11.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{13., {2., 11.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Global`CoupledEntropyTemp\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`CoupledEntropyTemp", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`CoupledEntropyTemp, \
{$CellContext`CoupledEntropyTemp[
         ProbabilityDistribution[
         0.39794618693590605` ((1 + 0.01 (0. + \[FormalX])^2)^101.)^
           Rational[-1, 2], {\[FormalX], 
           DirectedInfinity[-1], 
           DirectedInfinity[1]}], 0.01, 1, 2, 1, {
          DirectedInfinity[-1], 
          DirectedInfinity[1]}] -> 
       1.4083095946894282`, $CellContext`CoupledEntropyTemp[
         ProbabilityDistribution[Which[Pattern[$CellContext`\[Alpha], 
               Blank[]] == 1, Det[
                Pattern[$CellContext`\[CapitalSigma], 
                 Blank[]]]^(1/2)/(
             1 + (-1 + 2) Pattern[$CellContext`\[Kappa], 
                Blank[]]), Pattern[$CellContext`\[Alpha], 
               Blank[]] == 2, 
             Which[Pattern[$CellContext`\[Kappa], 
                Blank[]] > 0, ((Pi^(2/2) Det[
                   Pattern[$CellContext`\[CapitalSigma], 
                    Blank[]]]^(1/2)) ((1 + 2 Pattern[$CellContext`\[Kappa], 
                    Blank[]])/Pattern[$CellContext`\[Kappa], 
                  Blank[]]^(2/2))) (Beta[1/(2 Pattern[$CellContext`\[Kappa], 
                    Blank[]]) + 1, 2/2]/Gamma[2/2]), 
              Pattern[$CellContext`\[Kappa], 
                Blank[]] == 0, (2 Pi)^(2/2) Det[
                 Pattern[$CellContext`\[CapitalSigma], 
                  Blank[]]]^(1/2), (-1)/2 < Pattern[$CellContext`\[Kappa], 
                Blank[]] < 0, ((Pi^(2/2) Det[
                   Pattern[$CellContext`\[CapitalSigma], 
                    Blank[]]]^(1/2)) (1/(-Pattern[$CellContext`\[Kappa], 
                   Blank[]])^(2/2))) (
               Beta[(1 + 2 Pattern[$CellContext`\[Kappa], 
                    Blank[]])/((-2) Pattern[$CellContext`\[Kappa], 
                    Blank[]]) + 1, 2/2]/Gamma[2/2])]]^(-1) 
          Which[Pattern[$CellContext`\[Kappa], 
               Blank[]] > 0, (1 + Pattern[$CellContext`\[Kappa], 
                 Blank[]] 
               Dot[{$CellContext`$x1 - Pattern[$CellContext`\[Mu], 
                    Blank[]], $CellContext`$x2 - Pattern[$CellContext`\[Mu], 
                    Blank[]]}, 
                  Inverse[
                   Pattern[$CellContext`\[CapitalSigma], 
                    Blank[]]], {$CellContext`$x1 - Pattern[$CellContext`\[Mu], 
                    Blank[]], $CellContext`$x2 - Pattern[$CellContext`\[Mu], 
                    Blank[]]}]^(Rational[1, 2] 
                 Pattern[$CellContext`\[Alpha], 
                   Blank[]]))^((1 + 2 Pattern[$CellContext`\[Kappa], 
                  Blank[]])/Pattern[$CellContext`\[Kappa], 
               Blank[]]), 
             Inequality[(-1)/2, LessEqual, 
              Pattern[$CellContext`\[Kappa], 
               Blank[]], Less, 0], 
             If[Simplify[1 + Pattern[$CellContext`\[Kappa], 
                   Blank[]] 
                 Dot[{$CellContext`$x1 - Pattern[$CellContext`\[Mu], 
                    Blank[]], $CellContext`$x2 - Pattern[$CellContext`\[Mu], 
                    Blank[]]}, 
                    Inverse[
                    Pattern[$CellContext`\[CapitalSigma], 
                    Blank[]]], {$CellContext`$x1 - Pattern[$CellContext`\[Mu], 
                    Blank[]], $CellContext`$x2 - Pattern[$CellContext`\[Mu], 
                    Blank[]]}]^(Rational[1, 2] 
                   Pattern[$CellContext`\[Alpha], 
                    Blank[]])] >= 0, (1 + Pattern[$CellContext`\[Kappa], 
                  Blank[]] Dot[{$CellContext`$x1 - Pattern[$CellContext`\[Mu], 
                    Blank[]], $CellContext`$x2 - Pattern[$CellContext`\[Mu], 
                    Blank[]]}, 
                   Inverse[
                    Pattern[$CellContext`\[CapitalSigma], 
                    Blank[]]], {$CellContext`$x1 - Pattern[$CellContext`\[Mu], 
                    Blank[]], $CellContext`$x2 - Pattern[$CellContext`\[Mu], 
                    Blank[]]}]^(Rational[1, 2] 
                  Pattern[$CellContext`\[Alpha], 
                    Blank[]]))^((1 + 2 Pattern[$CellContext`\[Kappa], 
                   Blank[]])/Pattern[$CellContext`\[Kappa], 
                Blank[]]), 
              If[(1 + 2 Pattern[$CellContext`\[Kappa], 
                    Blank[]])/Pattern[$CellContext`\[Kappa], 
                 Blank[]] > 0, 0, Infinity]], Pattern[$CellContext`\[Kappa], 
               Blank[]] == 0, 
             Exp[Dot[{$CellContext`$x1 - Pattern[$CellContext`\[Mu], 
                  Blank[]], $CellContext`$x2 - Pattern[$CellContext`\[Mu], 
                  Blank[]]}, 
                Inverse[
                 Pattern[$CellContext`\[CapitalSigma], 
                  Blank[]]], {$CellContext`$x1 - Pattern[$CellContext`\[Mu], 
                  Blank[]], $CellContext`$x2 - Pattern[$CellContext`\[Mu], 
                  Blank[]]}]^(Rational[1, 2] Pattern[$CellContext`\[Alpha], 
                 Blank[]])], True, 
             Message[
              MessageName[$CellContext`CoupledExponential, "nnarg"], 
              Pattern[$CellContext`\[Kappa], 
               Blank[]]]]^((-1)/Pattern[$CellContext`\[Alpha], 
             Blank[]]), Pattern[$CellContext`\[Alpha], 
            Blank[]] == 1, {{$CellContext`$x1, $CellContext`\[Mu], 
            DirectedInfinity[1]}, {$CellContext`$x2, 
            Blank[], 
            DirectedInfinity[1]}}, Pattern[$CellContext`\[Alpha], 
            Blank[]] == 2, {{$CellContext`$x1, 
            DirectedInfinity[-1], 
            DirectedInfinity[1]}, {$CellContext`$x2, 
            DirectedInfinity[-1], 
            DirectedInfinity[1]}}], 
         Pattern[$CellContext`\[Kappa], 
          Blank[]], 
         Optional[
          Pattern[$CellContext`d, 
           Blank[]], 1], 
         Optional[
          Pattern[$CellContext`\[Alpha], 
           Blank[]], 2], 1, 
         Optional[
          Pattern[$CellContext`limits, 
           Blank[]], {
           DirectedInfinity[-1], 
           DirectedInfinity[1]}]] :> ($CellContext`CoupledEntropyTemp[
          $CellContext`MultivariateCoupledDistribution[$CellContext`\[Mu], \
$CellContext`\[CapitalSigma], $CellContext`\[Kappa], 
           2], $CellContext`\[Kappa], $CellContext`d, 2, 
          1, $CellContext`limits] = (-1 + (((
                Pi/$CellContext`\[Kappa])^$CellContext`d 
              Det[$CellContext`\[CapitalSigma]])^($CellContext`\[Kappa]/(
              1 + $CellContext`d $CellContext`\[Kappa])) (
             1 + $CellContext`d $CellContext`\[Kappa])) (
             Gamma[1/(2 $CellContext`\[Kappa])]/
             Gamma[(1/2) ($CellContext`d + 1/$CellContext`\[Kappa])])^(
             2 ($CellContext`\[Kappa]/(
              1 + $CellContext`d $CellContext`\[Kappa]))))/(
         2 $CellContext`\[Kappa])), $CellContext`CoupledEntropyTemp[
         Pattern[$CellContext`dist, 
          Blank[]], 
         Pattern[$CellContext`\[Kappa], 
          Blank[]], 
         Optional[
          Pattern[$CellContext`d, 
           Blank[]], 1], 
         Optional[
          Pattern[$CellContext`\[Alpha], 
           Blank[]], 2], 
         Optional[
          Pattern[$CellContext`\[Delta], 
           Blank[]], 1], 
         Optional[
          Pattern[$CellContext`limits, 
           Blank[]], {
           DirectedInfinity[-1], 
           DirectedInfinity[
           1]}]] :> ($CellContext`CoupledEntropyTemp[$CellContext`dist, \
$CellContext`\[Kappa], $CellContext`d, $CellContext`\[Alpha], $CellContext`\
\[Delta], $CellContext`limits] = \
$CellContext`CoupledCrossEntropyTemp[$CellContext`dist, $CellContext`dist, \
$CellContext`\[Kappa], $CellContext`\[Alpha], $CellContext`d, $CellContext`\
\[Delta], $CellContext`limits])}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Global`CoupledEntropyTemp"|>, 
   False]]], "Output",
 CellChangeTimes->{3.825699561435726*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"b1347944-6880-4058-81b1-b2b0faf1f06e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"coupledDist", "=", 
   RowBox[{"CoupledNormalDistribution", "[", 
    RowBox[{"0", ",", "1", ",", "\[Kappa]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NCoupledEntropy", "[", 
    RowBox[{"coupledDist", ",", "\[Kappa]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0.2", ",", "0.4", ",", "0.6", ",", "0.8", ",", "1.0"}], 
      "}"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.825759194073288*^9, 3.825759208921913*^9}, {
  3.8257592438706703`*^9, 3.8257592611729307`*^9}, {3.825759301675509*^9, 
  3.8257593103057137`*^9}, {3.825759418687344*^9, 3.825759510507144*^9}, {
  3.82575954375811*^9, 3.8257595701344423`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"31769286-0c53-43d8-b932-bcc58de9db9d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.4320616310044243`", ",", "1.2548617783679263`", ",", 
   "1.172611714496856`", ",", "1.106465806278387`", ",", 
   "1.0867843412681406`", ",", "1.0662441974896697`"}], "}"}]], "Output",
 CellChangeTimes->{{3.825759305080072*^9, 3.825759311587412*^9}, 
   3.825759420049904*^9, 3.825759484568018*^9, 3.82575951917887*^9, 
   3.825759574919578*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"17d7019f-5ed3-4c02-8e46-5a0882ce312d"]
}, Open  ]],

Cell["Removed 1/alpha power from pdf in coupled log", "Text",
 CellChangeTimes->{{3.8257599838904037`*^9, 
  3.825760008813958*^9}},ExpressionUUID->"9d7718e5-1b48-49ae-b365-\
d8bedb4061f0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"coupledDist", "=", 
   RowBox[{"CoupledNormalDistribution", "[", 
    RowBox[{"0", ",", "1", ",", "\[Kappa]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NCoupledEntropy", "[", 
    RowBox[{"coupledDist", ",", "\[Kappa]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0.2", ",", "0.4", ",", "0.6", ",", "0.8", ",", "1.0"}], 
      "}"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[76]:=",ExpressionUUID->"06f0ad2f-5a9f-486a-859a-9b950e908833"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.42265986643488`", ",", "1.255849390062215`", ",", "1.1598381356618215`", 
   ",", "1.1051397841200254`", ",", "1.056964740774255`", ",", 
   "1.058775263825582`"}], "}"}]], "Output",
 CellChangeTimes->{3.8257600160030327`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"29b050ba-1c67-4d4f-8b5a-91acf830bbc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{"coupledDist", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0.5", ",", "1"}], "}"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.825760093361467*^9, 3.825760203754361*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"ea3ce0b5-4e7d-499c-8e06-826e66ca4b9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9999999999996262`", ",", "0.9999999999999498`", ",", 
   "0.9999999999999984`"}], "}"}]], "Output",
 CellChangeTimes->{3.825760204931522*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"f99af2c2-61bb-4aa2-9624-0d980a800cdb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CoupledProbability", "[", 
    RowBox[{"coupledDist", ",", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "\[Alpha]"}], " ", "\[Kappa]"}], 
      RowBox[{"1", "+", " ", "\[Kappa]"}]], ",", "x"}], "]"}], 
   RowBox[{"CoupledLogarithm", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"PDF", "[", 
       RowBox[{"coupledDist", ",", "x"}], "]"}], 
      RowBox[{"-", "\[Alpha]"}]], ",", "\[Kappa]", ",", "1"}], "]"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.825760293837652*^9, 3.825760312753324*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"1022c59d-4684-4b68-8f9e-84c5d5a65428"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"1", "+", "\[Kappa]", "+", 
       RowBox[{"\[Alpha]", " ", "\[Kappa]"}]}], 
      RowBox[{"2", " ", "\[Kappa]"}]]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Pi]", 
         RowBox[{"\[Alpha]", "/", "2"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{
               SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
            RowBox[{"1", "+", 
             FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"], ")"}], 
         RowBox[{"\[Alpha]", "/", "2"}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"Gamma", "[", 
            FractionBox["1", 
             RowBox[{"2", " ", "\[Kappa]"}]], "]"}], 
           RowBox[{"Gamma", "[", 
            FractionBox[
             RowBox[{"1", "+", "\[Kappa]"}], 
             RowBox[{"2", " ", "\[Kappa]"}]], "]"}]], ")"}], "\[Alpha]"]}], 
       ")"}], 
      FractionBox["\[Kappa]", 
       RowBox[{"1", "+", "\[Kappa]"}]]]}], ")"}], " ", 
   RowBox[{"Gamma", "[", 
    FractionBox[
     RowBox[{"1", "+", "\[Kappa]", "+", 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]}], 
     RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
  RowBox[{
   SqrtBox["\[Pi]"], " ", 
   SqrtBox["\[Kappa]"], " ", 
   RowBox[{"Gamma", "[", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]}], 
     RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]], "Output",
 CellChangeTimes->{3.825760369277295*^9, 3.825760537759828*^9, 
  3.825760590446842*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"a82b7215-895d-4ba8-b93e-b86970792410"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"1", "+", "\[Kappa]", "+", 
         RowBox[{"\[Alpha]", " ", "\[Kappa]"}]}], 
        RowBox[{"2", " ", "\[Kappa]"}]]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Pi]", 
           RowBox[{"\[Alpha]", "/", "2"}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{
                 SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
              RowBox[{"1", "+", 
               FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"], ")"}], 
           RowBox[{"\[Alpha]", "/", "2"}]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"Gamma", "[", 
              FractionBox["1", 
               RowBox[{"2", " ", "\[Kappa]"}]], "]"}], 
             RowBox[{"Gamma", "[", 
              FractionBox[
               RowBox[{"1", "+", "\[Kappa]"}], 
               RowBox[{"2", " ", "\[Kappa]"}]], "]"}]], ")"}], "\[Alpha]"]}], 
         ")"}], 
        FractionBox["\[Kappa]", 
         RowBox[{"1", "+", "\[Kappa]"}]]]}], ")"}], " ", 
     RowBox[{"Gamma", "[", 
      FractionBox[
       RowBox[{"1", "+", "\[Kappa]", "+", 
        RowBox[{"\[Alpha]", " ", "\[Kappa]"}]}], 
       RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
    RowBox[{
     SqrtBox["\[Pi]"], " ", 
     SqrtBox["\[Kappa]"], " ", 
     RowBox[{"Gamma", "[", 
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"\[Alpha]", " ", "\[Kappa]"}]}], 
       RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]], "/.", 
   RowBox[{"\[Alpha]", "\[Rule]", "2"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.825760700094326*^9, 3.825760711085485*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"a3daa6a9-3593-4aac-a361-71fcee456b86"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"1", "+", 
       RowBox[{"3", " ", "\[Kappa]"}]}], 
      RowBox[{"2", " ", "\[Kappa]"}]]}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"3", "+", 
       FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{
      SuperscriptBox["\[Pi]", 
       FractionBox["\[Kappa]", 
        RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
           RowBox[{"1", "+", 
            FractionBox["1", "\[Kappa]"]}]], " ", 
          SuperscriptBox[
           RowBox[{"Gamma", "[", 
            FractionBox["1", 
             RowBox[{"2", " ", "\[Kappa]"}]], "]"}], "2"]}], 
         RowBox[{"\[Kappa]", " ", 
          SuperscriptBox[
           RowBox[{"Gamma", "[", 
            FractionBox[
             RowBox[{"1", "+", "\[Kappa]"}], 
             RowBox[{"2", " ", "\[Kappa]"}]], "]"}], "2"]}]], ")"}], 
       FractionBox["\[Kappa]", 
        RowBox[{"1", "+", "\[Kappa]"}]]]}]}], ")"}]}], 
  RowBox[{
   SqrtBox["\[Pi]"], " ", 
   SqrtBox["\[Kappa]"], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "+", 
     FractionBox["1", 
      RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]]], "Output",
 CellChangeTimes->{3.825760712786603*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"e16c0a16-b8e9-48e0-a524-ee5b148951b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"1", "+", 
           RowBox[{"3", " ", "\[Kappa]"}]}], 
          RowBox[{"2", " ", "\[Kappa]"}]]}]], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{
          SuperscriptBox["\[Pi]", 
           FractionBox["\[Kappa]", 
            RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{
                  SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
               RowBox[{"1", "+", 
                FractionBox["1", "\[Kappa]"]}]], " ", 
              SuperscriptBox[
               RowBox[{"Gamma", "[", 
                FractionBox["1", 
                 RowBox[{"2", " ", "\[Kappa]"}]], "]"}], "2"]}], 
             RowBox[{"\[Kappa]", " ", 
              SuperscriptBox[
               RowBox[{"Gamma", "[", 
                FractionBox[
                 RowBox[{"1", "+", "\[Kappa]"}], 
                 RowBox[{"2", " ", "\[Kappa]"}]], "]"}], "2"]}]], ")"}], 
           FractionBox["\[Kappa]", 
            RowBox[{"1", "+", "\[Kappa]"}]]]}]}], ")"}]}], 
      RowBox[{
       SqrtBox["\[Pi]"], " ", 
       SqrtBox["\[Kappa]"], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{"1", "+", 
         FractionBox["1", 
          RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]], ",", "0.2", ",", "0.4", ",", "0.6", ",", "0.8", 
       ",", "1.0"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",\

 CellChangeTimes->{{3.8257607536573133`*^9, 3.825760830508099*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"442d100c-fef6-4f20-b9ed-0b01eaf1dae8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.8378792553476395`", ",", "3.286541275143689`", ",", "3.756994004051344`",
    ",", "4.247875095276179`", ",", "4.757238969026038`", ",", 
   "5.2831853071795765`"}], "}"}]], "Output",
 CellChangeTimes->{{3.825760756260127*^9, 3.825760784151477*^9}, 
   3.825760840418728*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"e058b198-15ed-4b19-b408-7c5964cf1b97"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"1", "+", 
            RowBox[{"3", " ", "\[Kappa]"}]}], 
           RowBox[{"2", " ", "\[Kappa]"}]]}]], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           SuperscriptBox["\[Pi]", 
            FractionBox["\[Kappa]", 
             RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{
                   SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
                RowBox[{"1", "+", 
                 FractionBox["1", "\[Kappa]"]}]], " ", 
               SuperscriptBox[
                RowBox[{"Gamma", "[", 
                 FractionBox["1", 
                  RowBox[{"2", " ", "\[Kappa]"}]], "]"}], "2"]}], 
              RowBox[{"\[Kappa]", " ", 
               SuperscriptBox[
                RowBox[{"Gamma", "[", 
                 FractionBox[
                  RowBox[{"1", "+", "\[Kappa]"}], 
                  RowBox[{"2", " ", "\[Kappa]"}]], "]"}], "2"]}]], ")"}], 
            FractionBox["\[Kappa]", 
             RowBox[{"1", "+", "\[Kappa]"}]]]}]}], ")"}]}], 
       RowBox[{
        SqrtBox["\[Pi]"], " ", 
        SqrtBox["\[Kappa]"], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{"1", "+", 
          FractionBox["1", 
           RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]], ",", "0.2", ",", "0.4", ",", "0.6", ",", "0.8", 
       ",", "1.0"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",\

 CellChangeTimes->{{3.8257608824581842`*^9, 3.82576088456533*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"2ab1c406-7fdc-4e1b-b5c9-916f70b04c98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.4189396276738198`", ",", "1.6432706375718444`", ",", 
   "1.878497002025672`", ",", "2.1239375476380893`", ",", 
   "2.378619484513019`", ",", "2.6415926535897882`"}], "}"}]], "Output",
 CellChangeTimes->{3.8257608941315727`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"29c1c67b-ddd3-4928-bd81-ce820977c613"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"1", "+", 
            RowBox[{"3", " ", "\[Kappa]"}]}], 
           RowBox[{"2", " ", "\[Kappa]"}]]}]], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           SuperscriptBox["\[Pi]", 
            FractionBox["\[Kappa]", 
             RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{
                   SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
                RowBox[{"1", "+", 
                 FractionBox["1", "\[Kappa]"]}]], " ", 
               SuperscriptBox[
                RowBox[{"Gamma", "[", 
                 FractionBox["1", 
                  RowBox[{"2", " ", "\[Kappa]"}]], "]"}], "2"]}], 
              RowBox[{"\[Kappa]", " ", 
               SuperscriptBox[
                RowBox[{"Gamma", "[", 
                 FractionBox[
                  RowBox[{"1", "+", "\[Kappa]"}], 
                  RowBox[{"2", " ", "\[Kappa]"}]], "]"}], "2"]}]], ")"}], 
            FractionBox["\[Kappa]", 
             RowBox[{"1", "+", "\[Kappa]"}]]]}]}], ")"}]}], 
       RowBox[{
        SqrtBox["\[Pi]"], " ", 
        SqrtBox["\[Kappa]"], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{"1", "+", 
          FractionBox["1", 
           RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]], ",", "0.2", ",", "0.4", ",", "0.6", ",", "0.8", 
       ",", "1.0"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",\

 CellChangeTimes->{3.825761488423334*^9},
 CellLabel->"In[91]:=",ExpressionUUID->"3eafae2c-1f37-4e45-adf8-4220dffed379"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.82576190673318*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"5c2742ee-441f-43e9-9b62-087ab02da900"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"1", "+", 
            RowBox[{"3", " ", "\[Kappa]"}]}], 
           RowBox[{"2", " ", "\[Kappa]"}]]}]], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           SuperscriptBox["\[Pi]", 
            FractionBox["\[Kappa]", 
             RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{
                   SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
                RowBox[{"1", "+", 
                 FractionBox["1", "\[Kappa]"]}]], " ", 
               SuperscriptBox[
                RowBox[{"Gamma", "[", 
                 FractionBox["1", 
                  RowBox[{"2", " ", "\[Kappa]"}]], "]"}], "2"]}], 
              RowBox[{"\[Kappa]", " ", 
               SuperscriptBox[
                RowBox[{"Gamma", "[", 
                 FractionBox[
                  RowBox[{"1", "+", "\[Kappa]"}], 
                  RowBox[{"2", " ", "\[Kappa]"}]], "]"}], "2"]}]], ")"}], 
            FractionBox["\[Kappa]", 
             RowBox[{"1", "+", "\[Kappa]"}]]]}]}], ")"}]}], 
       RowBox[{
        SqrtBox["\[Pi]"], " ", 
        SqrtBox["\[Kappa]"], " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{"1", "+", 
          FractionBox["1", 
           RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "\[Rule]", "\"\<AdaptiveMonteCarlo\>\""}]}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", 
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]], ",", "0.2", ",", "0.4", ",", "0.6", ",", "0.8", 
       ",", "1.0"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",\

 CellChangeTimes->{{3.82576151834396*^9, 3.8257615501383743`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"cc45709a-a410-424e-98b6-5ed0bb2ae046"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.4209035389350855`", ",", "1.6435832970101907`", ",", 
   "1.9188192232400034`", ",", "2.116137975883448`", ",", 
   "2.3822189290056937`", ",", "2.6549652629765594`"}], "}"}]], "Output",
 CellChangeTimes->{3.825761920420541*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"6b936d38-2b0e-4bc3-b82a-405ba72d5e15"]
}, Open  ]],

Cell["Using NCoupledProbability in the NCoupledEntropy Function", "Text",
 CellChangeTimes->{{3.825762569104486*^9, 
  3.82576258338689*^9}},ExpressionUUID->"4efc5b07-c473-479c-8c0b-\
3b348942935c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"coupledDist", "=", 
   RowBox[{"CoupledNormalDistribution", "[", 
    RowBox[{"0", ",", "1", ",", "\[Kappa]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NCoupledEntropy", "[", 
    RowBox[{"coupledDist", ",", "\[Kappa]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0.2", ",", "0.4", ",", "0.6", ",", "0.8", ",", "1.0"}], 
      "}"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->
  "In[101]:=",ExpressionUUID->"c6939326-8514-4466-b7d6-f0b9f303332d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.4300016352521099`", ",", "1.252719615046478`", ",", 
   "1.1751936798648484`", ",", "1.107438171456295`", ",", 
   "1.098509796835819`", ",", "1.0572766537919196`"}], "}"}]], "Output",
 CellChangeTimes->{3.82576223798525*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"eba0c951-d09c-4b6a-a758-ab62e54b71e4"]
}, Open  ]],

Cell["Using FullSimplify in the NCoupledEntropy Function", "Text",
 CellChangeTimes->{{3.825762589108111*^9, 
  3.825762595467002*^9}},ExpressionUUID->"962493cd-08d1-4cc6-b691-\
9060b6894879"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"coupledDist", "=", 
   RowBox[{"CoupledNormalDistribution", "[", 
    RowBox[{"0", ",", "1", ",", "\[Kappa]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NCoupledEntropy", "[", 
    RowBox[{"coupledDist", ",", "\[Kappa]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0.2", ",", "0.4", ",", "0.6", ",", "0.8", ",", "1.0"}], 
      "}"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->
  "In[105]:=",ExpressionUUID->"63deb404-a6ee-4b1d-a94a-f32c2d067b25"],

Cell[BoxData[
 TemplateBox[{
  "FullSimplify", "fas", 
   "\"Warning: one or more assumptions evaluated to False.\"", 2, 106, 40, 
   31292418989070087465, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.825762607520958*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"20474903-aa67-46fc-a69e-4da02d72eadd"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"10\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"x\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.9982414026747168`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"107358.34848175429`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"91910.02042611004`\\\"}]\\) for the integral and error \
estimates.\"", 2, 106, 41, 31292418989070087465, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.825762607549241*^9},
 CellLabel->
  "During evaluation of \
In[105]:=",ExpressionUUID->"f1133b1d-4f73-4d0c-9539-aec85b4e9aeb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "107358.34848175429`", ",", "1.2555214068770277`", ",", 
   "1.160547019764924`", ",", "1.1228895945867998`", ",", 
   "1.0766453136096648`", ",", "1.045004317033345`"}], "}"}]], "Output",
 CellChangeTimes->{3.825762615395883*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"9dff5f99-9f6f-4795-819f-01690aa18fb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"coupledDist", "=", 
   RowBox[{"CoupledNormalDistribution", "[", 
    RowBox[{"0", ",", "1", ",", "\[Kappa]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NCoupledEntropy", "[", 
    RowBox[{"coupledDist", ",", "\[Kappa]"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0.2", ",", "0.4", ",", "0.6", ",", "0.8", ",", "1.0"}], 
      "}"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->
  "In[109]:=",ExpressionUUID->"f2cfe42d-7bfb-4158-a33b-b2bf04cf9066"],

Cell[BoxData[
 TemplateBox[{
  "FullSimplify", "fas", 
   "\"Warning: one or more assumptions evaluated to False.\"", 2, 110, 42, 
   31292418989070087465, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.825762714874963*^9},
 CellLabel->
  "During evaluation of \
In[109]:=",ExpressionUUID->"7252871c-bf98-4d1b-9c2b-a51d2da6a660"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "ncvb", 
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"10\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"x\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"0.9984582770748297`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"22378.27163280976`\\\
\"}]\\) and \\!\\(\\*RowBox[{\\\"6913.144028865121`\\\"}]\\) for the integral \
and error estimates.\"", 2, 110, 43, 31292418989070087465, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.825762714902667*^9},
 CellLabel->
  "During evaluation of \
In[109]:=",ExpressionUUID->"99783b6a-dfbb-4337-a127-2bbdcce7c8b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "22378.27163280976`", ",", "1.6613472144671733`", ",", 
   "1.8818448263677277`", ",", "2.1422679068529744`", ",", 
   "2.414401473652928`", ",", "2.654154285708458`"}], "}"}]], "Output",
 CellChangeTimes->{3.825762723987534*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"68625bd8-a6e5-49f5-abc7-c2c9ffbdb5fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"CoupledEntropy", "[", 
   RowBox[{
    RowBox[{"CoupledNormalDistribution", "[", 
     RowBox[{"0", ",", "1", ",", "\[Kappa]"}], "]"}], ",", "0"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8257639983869143`*^9, 3.825764068512072*^9}, {
  3.825764148166636*^9, 3.8257641733423557`*^9}, {3.8257645001131983`*^9, 
  3.8257645736640997`*^9}, {3.825764614701531*^9, 3.825764637341399*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"c7e74368-29e8-4223-bbb2-423ec7d30ff8"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Gamma", "[", 
      FractionBox[
       RowBox[{"1", "+", "\[Kappa]"}], 
       RowBox[{"2", " ", "\[Kappa]"}]], "]"}], " ", 
     RowBox[{"Log", "[", 
      FractionBox[
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
         RowBox[{"1", "+", 
          FractionBox["1", "\[Kappa]"]}]], " ", 
        SuperscriptBox[
         RowBox[{"Gamma", "[", 
          FractionBox["1", 
           RowBox[{"2", " ", "\[Kappa]"}]], "]"}], "2"]}], 
       RowBox[{"\[Kappa]", " ", 
        SuperscriptBox[
         RowBox[{"Gamma", "[", 
          FractionBox[
           RowBox[{"1", "+", "\[Kappa]"}], 
           RowBox[{"2", " ", "\[Kappa]"}]], "]"}], "2"]}]], "]"}]}], 
    RowBox[{"2", " ", 
     SqrtBox["\[Pi]"], " ", 
     SqrtBox[
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
        RowBox[{"1", "+", 
         FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"]], " ", 
     RowBox[{"Gamma", "[", 
      FractionBox["1", 
       RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{
  3.8257640726973743`*^9, 3.8257641741539717`*^9, 3.82576421871681*^9, 
   3.8257645140339193`*^9, {3.825764554750983*^9, 3.825764557333991*^9}, 
   3.825764768785162*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"31354e10-1549-4715-8274-745e910bdd20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"Gamma", "[", 
     FractionBox[
      RowBox[{"1", "+", "\[Kappa]"}], 
      RowBox[{"2", " ", "\[Kappa]"}]], "]"}], " ", 
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
        RowBox[{"1", "+", 
         FractionBox["1", "\[Kappa]"]}]], " ", 
       SuperscriptBox[
        RowBox[{"Gamma", "[", 
         FractionBox["1", 
          RowBox[{"2", " ", "\[Kappa]"}]], "]"}], "2"]}], 
      RowBox[{"\[Kappa]", " ", 
       SuperscriptBox[
        RowBox[{"Gamma", "[", 
         FractionBox[
          RowBox[{"1", "+", "\[Kappa]"}], 
          RowBox[{"2", " ", "\[Kappa]"}]], "]"}], "2"]}]], "]"}]}], 
   RowBox[{"2", " ", 
    SqrtBox["\[Pi]"], " ", 
    SqrtBox[
     FractionBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
       RowBox[{"1", "+", 
        FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"]], " ", 
    RowBox[{"Gamma", "[", 
     FractionBox["1", 
      RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.825764784275713*^9, 3.825764785697379*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"4bc04756-7b66-4c4e-850e-d7d430991f81"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"Gamma", "[", 
    FractionBox[
     RowBox[{"1", "+", "\[Kappa]"}], 
     RowBox[{"2", " ", "\[Kappa]"}]], "]"}], " ", 
   RowBox[{"Log", "[", 
    FractionBox[
     RowBox[{"\[Pi]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
       RowBox[{"1", "+", 
        FractionBox["1", "\[Kappa]"]}]], " ", 
      SuperscriptBox[
       RowBox[{"Gamma", "[", 
        FractionBox["1", 
         RowBox[{"2", " ", "\[Kappa]"}]], "]"}], "2"]}], 
     RowBox[{"\[Kappa]", " ", 
      SuperscriptBox[
       RowBox[{"Gamma", "[", 
        FractionBox[
         RowBox[{"1", "+", "\[Kappa]"}], 
         RowBox[{"2", " ", "\[Kappa]"}]], "]"}], "2"]}]], "]"}]}], 
  RowBox[{"2", " ", 
   SqrtBox["\[Pi]"], " ", 
   SqrtBox[
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}], ")"}], 
      RowBox[{"1", "+", 
       FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"]], " ", 
   RowBox[{"Gamma", "[", 
    FractionBox["1", 
     RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]], "Output",
 CellChangeTimes->{3.825764786455657*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"cc46e960-0a8d-4bbe-92fa-d0e4fd76fee9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CoupledEntropy", "[", 
  RowBox[{
   RowBox[{"CoupledNormalDistribution", "[", 
    RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", "\[Kappa]"}], 
  "]"}]], "Input",
 CellLabel->"In[79]:=",ExpressionUUID->"b0cc0a0c-3ef0-49b7-9452-dd17d254c0d3"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
       RowBox[{"1", "+", 
         RowBox[{"Log", "[", "2", "]"}], "+", 
         RowBox[{"Log", "[", "\[Pi]", "]"}]}], ")"}]}], 
   RowBox[{"\[Kappa]", "\[Equal]", "0"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.825764133957116*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"40509be0-7a9c-420f-abf3-9538f124ee40"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", " ", "\[Pi]"}], ")"}], 
       FractionBox["\[Kappa]", 
        RowBox[{"2", "+", 
         RowBox[{"4", " ", "\[Kappa]"}]}]]], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"1", "+", 
         RowBox[{"3", " ", "\[Kappa]"}]}], 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Kappa]"}]}]]]}]}], "\[Kappa]"], ",", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.825764457419989*^9, 3.8257644674823*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"13b95085-224a-41dd-9350-3535649e88d6"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVi3k41HkAh4e0apVM7HomphrrPipnjtqP0pYjRFo5pmQl6UDZVGvL9JhW
auIpT2wiomPyRNaodUWTR0+S5K40+M4YYww/UwzajW3/eJ/3ef94WZFxgfvV
aTSa71f+t/d+2ZuGkV0/Pn0X2zNToYKGx4r4foYDsMulO6xcBfubOTcqGFtw
Mqb5QH2pCj6vev7KYwTBU5i7NY2vQnDUdN0VRhQ0i8jY6psqfFj7hwePkYjF
wSerj6SrUPCd//l0Ririumy1EvepwFlUYXaBkYUNXYENFnQVdocUlk0oi2Gu
GxcZFDsFrXlO+LaVZfBoHbqo7J6EScC47NlFAeqv2LRX+04iqdUFOZNViHJO
qk1o+AR9AV2kplaPU7yQJBuPT3hEPFpebxACmd4G+sKPEMbmGYQoGuFu7qEs
8PqIKdONyx4ceQ5D+9m00yIl1GdLdAxMmlFDmzuYE6eE03zEo52lLaDKrzjW
LVGiJdWhtcnyNQp9rrbLyyawKnN0lj/eht3VGvop/hMYne4Xda1rh9Sr+Vzx
RwrF8ppm7csdYK+eScoABW3mXUoi6UTJUu7TldnjuHSwMrrAuBtitjDYmTYO
lXuJJOZsD9YYhenJI8eQaNco+P5ZL2r3r/65ukuB/tLGi29Y7xDhXe+XvlmB
f2I7cy1Ov4d7bMg3Vx+PwmqT5lx0TR/ihf66ea6j2HaLdaBcX4TCUF+e6rEc
Scy9RoPh/fDy0u303CyHtWKXVo/vAP49Y3mpvn0EussmFjV+HgCPKzTtYI9A
oz637Icbg3j7+KV/6KQMhxxq3i72IbiQ7GXWxpWhxCuy4ImKgJZdHqIwlGFq
dIWO9JoYLSmGVTZPhlG5c9uCrC0S2J0erC8OHcZZT+5NgVQCI/aFpFzaMFgf
vHuLuENoPfJJOnpfCtf1qVkMOylMu++bCXZIEb7y9axahxQ7os9+VpsfwlQz
j8RzhqGqYO7T5A8hR2NPYqCxDBpF44n0sCHoiipvqTfKsKZqwqNKZwgLf+cE
uSSMoNtA+DJQKAGNv6eMLJeDadsrsPpNgmPXy3jLhXK0Op54Zb1OgjqrtEX0
o6Noil7mmiMTg+59zPqctgKmIxQr664YfTZtHadqFRhUS2cpIsV4mA9jyZ4x
GOsRcbKxGOwyJzpzbgwBH2reP5cRpHALOX33x7Gkzv1MPp/ggYyZq72dwvFw
c4VxPEFaHjdC5EeBbjJ+0CyOICpwzKQ0gILIul3d8iiBYW3tQ99gCtfvirlr
DxOkZ4Q1XYqkkO9W0eYWQxDj9Kfy21MU7I/i15AIAqNUPU/NOxRMrXX67u0g
mHNOXtpzj8IXpk9lqT/B2zFx+50SCrwTBnyBH0FmcAV7azkFefKhgYbtBPOW
gce5tRS8ZgJ57zwJ+t5k5C/ooGDMvtq3fBPB3+enf+noouCXYM1e4U6Q5bbX
oqiXglOP/gwLBD631wg2iyg0KTuTbTcSVJ989YIzQoGzMPFpgAvBNRvHjAAF
hcU/WemFOhMkkBtBLOprF+hyItcTmG8/3N8w+fVnHuAfdyTQUOsszpymEP7l
RVSyA8FApVtsxGcKhsd8Xbn2BLWxRWvXfaGQFz5mcdmOIHuV1tT8PAX//Nv2
2bYE/wFmTHII
       "]]},
     Annotation[#, "Charting`Private`Tag$10120#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5685535439233237},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0.5685535439233237, 1.4189384855978207`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.825764468432691*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"c03af078-579d-4881-8706-bd7ac95dc668"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[Kappa]", "-", 
      RowBox[{
       SuperscriptBox["\[Pi]", 
        FractionBox["\[Kappa]", 
         RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
       SuperscriptBox["\[Kappa]", 
        FractionBox["1", 
         RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{" ", 
           RowBox[{"Gamma", "[", 
            FractionBox["1", 
             RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
          RowBox[{"Gamma", "[", 
           FractionBox[
            RowBox[{"1", "+", "\[Kappa]"}], 
            RowBox[{"2", " ", "\[Kappa]"}]], "]"}]], ")"}], 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]]}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Kappa]", "2"]}]]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", "0", ",", "1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Coupled Entropy Symbolic\>\"", "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.825764963140415*^9, 3.8257649890558863`*^9}, {
  3.825765100454933*^9, 3.825765101068242*^9}, {3.82576513502775*^9, 
  3.825765137152342*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"d1387008-7754-48a6-8fee-9eec71673eac"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwdjnk41HkAh+f6oSVH2iR36BBqS3Soz7fLtalIYbckFTWpXTbr6BCLJKVD
JULJllK0MZYaaZFSpEIlmjRJxPjJkzkMMyvv83yez/P+95oF/Oa5g8VgMPxH
9/3ddnS9eNC9YWnHL20iaZEYKsY2nki2g1rrq1J/nhgD2lzTduZSrH41eZtK
iRjzstMuFumvRI5Qq6t01P1KjnD317lg4M/sg5v/FUMjPjKqdrwXfnpFV4WV
iaE5rs+pT7wVN1p8ljwrF8N7u6T8tP52ZG6dGyu7L8a72UdWHNffB9We2zXy
WjHiPjFrF3kfgipXd459sxhB1jenL8uKxV7V1NyHbWJc+nFtQpJ+HOoPKbyp
djEerD77xtz1NKwdDLbacSSIUSuaflQ/FaKcDwXWGhL41hy6mzCQDpdj4/O2
WElwPajIv+zaZTS6REUsWyuBj+/lwv6vueA66Oo5BUugrozZ5GxciJzOvHVh
NRJYevR1VR0rhpp5VYC7iRQyrw2j8KDSHxoWaCPFRu3N+16s+hcLVaexTddJ
cf7Cd8rQ0T8c+TRSivBnC5H2rQxWImf+jMNS+NeEGD4K4WNkoOXjwE0p9Ip1
BExmBYaUvCfMVikGlN+pgDJz8AQlkqJEuKKuwbESom2JMweXyJBk4XrawrUS
87XuxPIgQyU308C3txp/z/rmnpEtg3is7yF0fW6sPF8gw+C0JVq39jzC0/YD
CyzkMoSPBdZipDcspd1tCCxZvraB5RPsv/VXt9BvCPZK/5L1BXUYJ3/3OYw/
hLo4u2c1Vg0wS73TkDVZDvOxvgZ4GHqE5TrIYXKyR3a97zlsVVa9nXRQjh7J
e0HznJdQCUh2c26VI/fLvSeaJxph3ZNp07psGJpG1+iOjiYEVgS7/HBtGI/H
epuxpv7Oj/6Ph5G8ixd4yeIVxFZTNJqpEYhJfsfO6NdwInnTDPaMYN/c6uJJ
VW9QoTjbKaofwfuC6mMvzN4iv+Yoe62DAnJuU8bMqFZsq0vXcsxWYNYyVUXg
vTaYuKf4XWAo4ZxjFvSPngBMXU3vDK4S4UZbpn7Y9B5Bio0tinolGGO0o8y+
eZwKg0Gsezeov3Zvh6Utgrv0GERXq1+teqgd1Q/vLLR1ZxBORUah+cUPyPQ9
E6UXzSC77e61jPtZiJhH84wDeQyS7xpw6b5YiIaGiHDRFwYZ7Jmi3XnuI+Ly
PVTUjZiEt96ZnbqyA3k3Bjhp65kk2iU+u7izA4+EPduLE5jE7J3bmyvxn1AU
cfi5vJRJFjnEperP7YS54+LpfJpJNhk3yJiNnSja6JilnMoig0+OC3+P+Yyg
+Vvqq35hkTSO3z5Piy6UHytK46SwiK6Al8Oq7oIvX+vjrkoWoQ7GeC0M6cbk
uGlCnyEWYVz3KxRO+AKN6NCXpbZsEppeeHxC5Rek7jkluB7EJuWzEtV09vbA
9OvX8w+y2UTHLdQ6VrMXnSM77jo2sUmbzfPGSH4v7he+vuY5nkNuZ8Giw0+E
Q9VO2o+Xc8jmQnsdI4UIerVNzt7hHHI4/nJM240+XJ7XGpt4m0NudRllaK6m
cWpOW7pmJ4ckZsb7C9bQ+DQc0j8y6ts9RZYFHjS8khmuos8cYsjn33b3pmG2
Q5Vd180hSSm/1iQH0MjXLU0/KuKQnfYXvv4QSUM+McGHGuSQqXETXVSv0pBl
vdVQsimiWHBg/Os8GgeSVvzXx6FIi+jjy6v5NDIqL0UIKIqc9C7a7PQPjeAk
h/5yVYoorTz/iOfTsD77knVQnSJtL1Ky2I00EuOyefIJFClNkGxrbKahdsbx
Qo8uRVIXb5l55Q0Ny5Kn0a0TKfLz37bFywU00m5WbLg3iSJ3I+prY7ppPIsa
stg/hSLnbOanePTSaF1jYbrbgCIhwoteZjSNTYYw/tWQIjNWB79/8I2G5yRn
88XGFOEwm3JPSmhMGJ5nNcuEIu28xVz/IRof3HXsDEwpwudemT1nhEZol4Co
m1HkvIn6oFI56nkX18lH/X9jxOzV
          "]]}, 
        Annotation[#, "Charting`Private`Tag$312348#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 1.4189385692058574`}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 1.4189385692058574`}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {1.4189385692058574`, 2.6415926263626313`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Coupled Entropy Symbolic\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.825764951773528*^9, 3.82576499040728*^9}, 
   3.825765102079535*^9, 3.825765138042889*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"c694797a-8ce3-4d64-9d8f-bfabe6ea4642"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "CoupledCrossEntropy", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoupledCrossEntropy", "[", 
   RowBox[{"distP_", ",", "distQ_", ",", "\[Kappa]_", ",", 
    RowBox[{"d_", ":", "1"}], ",", 
    RowBox[{"\[Alpha]_", ":", "2"}], ",", " ", 
    RowBox[{"\[Delta]_", ":", "1"}], ",", 
    RowBox[{"limits_", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"CoupledCrossEntropy", "[", 
    RowBox[{
    "distP", ",", "distQ", ",", "\[Kappa]", ",", "d", ",", "\[Alpha]", ",", 
     "\[Delta]", ",", "limits"}], "]"}], "=", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"FullSimplify", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"CoupledProbability", "[", 
        RowBox[{"distP", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "\[Alpha]"}], " ", "\[Kappa]"}], 
          RowBox[{"1", "+", 
           RowBox[{"d", " ", "\[Kappa]"}]}]], ",", "x"}], "]"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "\[Alpha]"], 
          RowBox[{"CoupledLogarithm", "[", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"PDF", "[", 
              RowBox[{"distQ", ",", "x"}], "]"}], 
             RowBox[{"-", "\[Alpha]"}]], ",", "\[Kappa]", ",", "d"}], "]"}]}],
          ")"}], 
        FractionBox["1", "\[Delta]"]]}], "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
       "limits", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       
       RowBox[{
       "limits", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      "}"}]}], "\[IndentingNewLine]", "]"}]}]}]}], "Input",ExpressionUUID->\
"902083d3-83f4-40e6-bc9c-6f2498f8f534"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "CoupledEntropy", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CoupledEntropy", "[", 
    RowBox[{"dist_", ",", "\[Kappa]_", ",", 
     RowBox[{"d_", ":", "1"}], ",", 
     RowBox[{"\[Alpha]_", ":", "2"}], ",", 
     RowBox[{"\[Delta]_", ":", "1"}], ",", 
     RowBox[{"limits_", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}]}], "]"}], 
   ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CoupledEntropy", "[", 
     RowBox[{
     "dist", ",", "\[Kappa]", ",", "d", ",", "\[Alpha]", ",", "\[Delta]", ",",
       "limits"}], "]"}], "=", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Head", "[", 
          RowBox[{"Unevaluated", "[", "dist", "]"}], "]"}], "\[Equal]", 
         "CoupledNormalDistribution"}], " ", "&&", 
        RowBox[{
         RowBox[{
          RowBox[{"Level", "[", 
           RowBox[{
            RowBox[{"Unevaluated", "[", "dist", "]"}], ",", "1"}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "\[Equal]", 
         "\[Kappa]"}], "&&", 
        RowBox[{"d", "\[Equal]", "1"}], "&&", "\[Alpha]"}], "=", 
       RowBox[{"2", "&&", 
        RowBox[{"\[Delta]", "\[Equal]", "1"}], "&&", 
        RowBox[{"limits", "==", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}]}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[Kappa]", "-", 
         RowBox[{
          SuperscriptBox["\[Pi]", 
           FractionBox["\[Kappa]", 
            RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
          SuperscriptBox["\[Kappa]", 
           FractionBox["1", 
            RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{"\[Sigma]", " ", 
              RowBox[{"Gamma", "[", 
               FractionBox["1", 
                RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
             RowBox[{"Gamma", "[", 
              FractionBox[
               RowBox[{"1", "+", "\[Kappa]"}], 
               RowBox[{"2", " ", "\[Kappa]"}]], "]"}]], ")"}], 
           FractionBox[
            RowBox[{"2", " ", "\[Kappa]"}], 
            RowBox[{"1", "+", "\[Kappa]"}]]]}]}], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Kappa]", "2"]}]]}], ",", "\[IndentingNewLine]", 
      RowBox[{"CoupledCrossEntropy", "[", 
       RowBox[{
       "dist", ",", "dist", ",", "\[Kappa]", ",", "\[Alpha]", ",", "d", ",", 
        "\[Delta]", ",", "limits"}], "]"}]}], "\[IndentingNewLine]", 
     "]"}]}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.825925060299341*^9, 3.825925061444606*^9}, 
   3.825925269821321*^9, {3.825926092616028*^9, 3.825926096616942*^9}, 
   3.825927087538463*^9, 3.825929383905262*^9, {3.825929422575967*^9, 
   3.8259294411944447`*^9}, {3.825929475739152*^9, 3.825929481539484*^9}, {
   3.8259295362598457`*^9, 3.825929582530184*^9}, {3.8259297308421183`*^9, 
   3.8259298465549107`*^9}, {3.825930165355894*^9, 3.825930168803823*^9}, {
   3.825930250351418*^9, 3.825930308171337*^9}, {3.825930343758296*^9, 
   3.825930393374732*^9}, 3.825930446505398*^9, {3.8259305067731857`*^9, 
   3.825930564700478*^9}, {3.82593061600987*^9, 3.8259306283973293`*^9}, 
   3.8259307411010857`*^9, {3.825930925602127*^9, 3.8259309409605103`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"8a3a21e1-2763-4f6c-9f06-f5a6c8dc590b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CoupledEntropy", "[", 
   RowBox[{
    RowBox[{"CoupledNormalDistribution", "[", 
     RowBox[{"\[Mu]", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
    "\[Kappa]_", ",", 
    RowBox[{"d_", ":", "1"}], ",", 
    RowBox[{"\[Alpha]_", ":", "2"}], ",", 
    RowBox[{"\[Delta]_", ":", "1"}], ",", 
    RowBox[{"limits_", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}]}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{"\[Kappa]", "-", 
     RowBox[{
      SuperscriptBox["\[Pi]", 
       FractionBox["\[Kappa]", 
        RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
      SuperscriptBox["\[Kappa]", 
       FractionBox["1", 
        RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[Sigma]", " ", 
          RowBox[{"Gamma", "[", 
           FractionBox["1", 
            RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
         RowBox[{"Gamma", "[", 
          FractionBox[
           RowBox[{"1", "+", "\[Kappa]"}], 
           RowBox[{"2", " ", "\[Kappa]"}]], "]"}]], ")"}], 
       FractionBox[
        RowBox[{"2", " ", "\[Kappa]"}], 
        RowBox[{"1", "+", "\[Kappa]"}]]]}]}], 
    RowBox[{"2", " ", 
     SuperscriptBox["\[Kappa]", "2"]}]]}]}]], "Input",ExpressionUUID->\
"fda1b91e-6748-43a5-b91a-c14c12be3ec0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CoupledEntropy", "[", 
  RowBox[{
   RowBox[{"CoupledNormalDistribution", "[", 
    RowBox[{"\[Mu]", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
   "\[Kappa]", ",", "1", ",", "2", ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.825927112401004*^9, 3.825927147276619*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"184b1b4f-e42d-4bdb-ae74-e502715d3923"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"Integrate", "[", 
     RowBox[{
       RowBox[{
         RowBox[{"If", "[", 
           RowBox[{
             RowBox[{
               FractionBox["1", 
                TagBox[
                 GridBox[{{"\[Piecewise]", 
                    GridBox[{{
                    FractionBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]]}]], 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]], 
                    RowBox[{"\[Kappa]", "\[Equal]", "0"}]}, {
                    FractionBox[
                    RowBox[{
                    SqrtBox["\[Kappa]"], " ", 
                    SuperscriptBox["\[Sigma]", 
                    FractionBox["1", "\[Kappa]"]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
                    SuperscriptBox["\[Sigma]", "2"]}], ")"}], 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"1", "+", "\[Kappa]"}], 
                    RowBox[{"2", " ", "\[Kappa]"}]]}]], " ", 
                    RowBox[{"Gamma", "[", 
                    FractionBox[
                    RowBox[{"1", "+", "\[Kappa]"}], 
                    RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
                    RowBox[{
                    SqrtBox["\[Pi]"], " ", 
                    RowBox[{"Gamma", "[", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]], 
                    TagBox["True", "PiecewiseDefault", AutoDelete -> True]}}, 
                    AllowedDimensions -> {2, Automatic}, Editable -> True, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}, 
                    GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}, Selectable -> True]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}, 
                  GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}], "Piecewise", DeleteWithContents -> True, 
                 Editable -> False, SelectWithContents -> True, Selectable -> 
                 False, StripWrapperBoxes -> True]], "\[GreaterEqual]", "0"}],
              ",", 
             RowBox[{"If", "[", 
               RowBox[{
                 RowBox[{"\[Kappa]", "\[NotEqual]", "0"}], ",", 
                 RowBox[{
                   FractionBox["1", "\[Kappa]"], 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "/", 
                    RowBox[{"PDF", "[", 
                    RowBox[{
                    RowBox[{"ProbabilityDistribution", "[", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{"\[Piecewise]", 
                    GridBox[{{
                    RowBox[{
                    SqrtBox[
                    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}], 
                    RowBox[{"\[Kappa]", "\[Equal]", "0"}]}, {
                    FractionBox[
                    RowBox[{
                    SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    FractionBox["1", "2"], "-", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}], 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"-", "\[Kappa]"}]], " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{"1", "-", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]], 
                    RowBox[{"\[Kappa]", "<", "0"}]}, {
                    FractionBox[
                    RowBox[{
                    SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
                    RowBox[{"Gamma", "[", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
                    RowBox[{
                    SqrtBox["\[Kappa]"], " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    FractionBox["1", "2"], "+", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]], 
                    TagBox["True", "PiecewiseDefault", AutoDelete -> True]}}, 
                    AllowedDimensions -> {2, Automatic}, Editable -> True, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Baseline}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}, 
                    GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}, Selectable -> True]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Baseline}}}, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}, 
                    GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}], "Piecewise", DeleteWithContents -> True, 
                    Editable -> False, SelectWithContents -> True, Selectable -> 
                    False, StripWrapperBoxes -> True], ")"}], " ", 
                    RowBox[{"\[Sqrt]", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"\[Kappa]", ">", "0"}], ",", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"]], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "1"]}], "\[LessEqual]", "\[Kappa]", "<", 
                    "0"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Simplify", "[", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], "]"}], 
                    "\[GreaterEqual]", "0"}], ",", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"]], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"], ">", "0"}],
                     ",", "0", ",", "\[Infinity]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"\[Kappa]", "\[Equal]", "0"}], ",", 
                    RowBox[{"Exp", "[", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"], 
                    SuperscriptBox["\[Sigma]", "2"]], "]"}], ",", "True", ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"CoupledExponential", "::", "nnarg"}], 
                    "MessageName"], ",", "\[Kappa]"}], "]"}]}], "]"}]}]}], 
                    ")"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"\[Kappa]", "\[GreaterEqual]", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x$2611", ",", 
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"x$2611", ",", 
                    RowBox[{"\[Mu]", "-", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox["\[Sigma]", "2"], "\[Kappa]"]}]]}], ",", 
                    RowBox[{"\[Mu]", "+", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox["\[Sigma]", "2"], "\[Kappa]"]}]]}]}], 
                    "}"}]}], "]"}]}], "]"}], ",", "x"}], "]"}]}], ")"}], 
                    FractionBox["\[Kappa]", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[Kappa]"}]}]]]}], ")"}]}], ",", 
                 RowBox[{"Log", "[", 
                   RowBox[{"1", "/", 
                    RowBox[{"PDF", "[", 
                    RowBox[{
                    RowBox[{"ProbabilityDistribution", "[", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{"\[Piecewise]", 
                    GridBox[{{
                    RowBox[{
                    SqrtBox[
                    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}], 
                    RowBox[{"\[Kappa]", "\[Equal]", "0"}]}, {
                    FractionBox[
                    RowBox[{
                    SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    FractionBox["1", "2"], "-", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}], 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"-", "\[Kappa]"}]], " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{"1", "-", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]], 
                    RowBox[{"\[Kappa]", "<", "0"}]}, {
                    FractionBox[
                    RowBox[{
                    SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
                    RowBox[{"Gamma", "[", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
                    RowBox[{
                    SqrtBox["\[Kappa]"], " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    FractionBox["1", "2"], "+", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]], 
                    TagBox["True", "PiecewiseDefault", AutoDelete -> True]}}, 
                    AllowedDimensions -> {2, Automatic}, Editable -> True, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Baseline}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{1.}}}, GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}, Selectable -> True]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{1.}}}, GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}], "Piecewise", DeleteWithContents -> True, 
                    Editable -> False, SelectWithContents -> True, Selectable -> 
                    False, StripWrapperBoxes -> True], ")"}], " ", 
                    RowBox[{"\[Sqrt]", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"\[Kappa]", ">", "0"}], ",", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"]], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "1"]}], "\[LessEqual]", "\[Kappa]", "<", 
                    "0"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Simplify", "[", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], "]"}], 
                    "\[GreaterEqual]", "0"}], ",", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"]], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"], ">", "0"}],
                     ",", "0", ",", "\[Infinity]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"\[Kappa]", "\[Equal]", "0"}], ",", 
                    RowBox[{"Exp", "[", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"], 
                    SuperscriptBox["\[Sigma]", "2"]], "]"}], ",", "True", ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"CoupledExponential", "::", "nnarg"}], 
                    "MessageName"], ",", "\[Kappa]"}], "]"}]}], "]"}]}]}], 
                    ")"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"\[Kappa]", "\[GreaterEqual]", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x$2611", ",", 
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"x$2611", ",", 
                    RowBox[{"\[Mu]", "-", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox["\[Sigma]", "2"], "\[Kappa]"]}]]}], ",", 
                    RowBox[{"\[Mu]", "+", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox["\[Sigma]", "2"], "\[Kappa]"]}]]}]}], 
                    "}"}]}], "]"}]}], "]"}], ",", "x"}], "]"}]}], "]"}]}], 
               "]"}], ",", "Undefined"}], "]"}], " ", 
         RowBox[{"PDF", "[", 
           RowBox[{
             RowBox[{"ProbabilityDistribution", "[", 
               RowBox[{
                 RowBox[{"1", "/", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    TagBox[
                    GridBox[{{"\[Piecewise]", 
                    GridBox[{{
                    RowBox[{
                    SqrtBox[
                    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}], 
                    RowBox[{"\[Kappa]", "\[Equal]", "0"}]}, {
                    FractionBox[
                    RowBox[{
                    SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    FractionBox["1", "2"], "-", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}], 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"-", "\[Kappa]"}]], " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{"1", "-", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]], 
                    RowBox[{"\[Kappa]", "<", "0"}]}, {
                    FractionBox[
                    RowBox[{
                    SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
                    RowBox[{"Gamma", "[", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
                    RowBox[{
                    SqrtBox["\[Kappa]"], " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    FractionBox["1", "2"], "+", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]], 
                    TagBox["True", "PiecewiseDefault", AutoDelete -> True]}}, 
                    AllowedDimensions -> {2, Automatic}, Editable -> True, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}, 
                    GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}, Selectable -> True]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{1.}}}, 
                    GridBoxSpacings -> {"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}}], "Piecewise", DeleteWithContents -> True, 
                    Editable -> False, SelectWithContents -> True, Selectable -> 
                    False, StripWrapperBoxes -> True], ")"}], " ", 
                    RowBox[{"\[Sqrt]", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"\[Kappa]", ">", "0"}], ",", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"]], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "1"]}], "\[LessEqual]", "\[Kappa]", "<", 
                    "0"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Simplify", "[", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], "]"}], 
                    "\[GreaterEqual]", "0"}], ",", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"]], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"], ">", "0"}],
                     ",", "0", ",", "\[Infinity]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"\[Kappa]", "\[Equal]", "0"}], ",", 
                    RowBox[{"Exp", "[", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"], 
                    SuperscriptBox["\[Sigma]", "2"]], "]"}], ",", "True", ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"CoupledExponential", "::", "nnarg"}], 
                    "MessageName"], ",", "\[Kappa]"}], "]"}]}], "]"}]}]}], 
                    ")"}]}], ",", 
                 RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"\[Kappa]", "\[GreaterEqual]", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x$2611", ",", 
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"x$2611", ",", 
                    RowBox[{"\[Mu]", "-", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox["\[Sigma]", "2"], "\[Kappa]"]}]]}], ",", 
                    RowBox[{"\[Mu]", "+", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox["\[Sigma]", "2"], "\[Kappa]"]}]]}]}], 
                    "}"}]}], "]"}]}], "]"}], ",", "x"}], "]"}]}], ",", 
       RowBox[{"{", 
         RowBox[{"x", ",", 
           RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"Assumptions", "\[Rule]", 
         RowBox[{"\[Kappa]", "\[Equal]", "0"}]}], ",", 
       RowBox[{"GenerateConditions", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PrincipalValue", "\[Rule]", "False"}]}], "]"}], 
   RowBox[{"\[Kappa]", "\[Equal]", "0"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.8259273382151003`*^9, 3.825927595801322*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"44450b3f-c3fe-41dd-bff7-7440559711d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CoupledEntropy"}]], "Input",
 CellChangeTimes->{{3.825927908886895*^9, 3.825927913038239*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"adca31b9-c4cd-41ca-b00b-3235cc4ede0f"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`CoupledEntropy\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"CoupledEntropy", "[", 
                    RowBox[{
                    RowBox[{"ProbabilityDistribution", "[", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    SqrtBox[
                    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}], ",", 
                    RowBox[{"\[Kappa]", "\[Equal]", "0"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
                    RowBox[{"Gamma", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Kappa]"}], 
                    RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"-", "\[Kappa]"}]], " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{"1", "-", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]], ",", 
                    RowBox[{"\[Kappa]", "<", "0"}]}], "}"}]}], "}"}], ",", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
                    RowBox[{"Gamma", "[", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
                    RowBox[{
                    SqrtBox["\[Kappa]"], " ", 
                    RowBox[{"Gamma", "[", 
                    FractionBox[
                    RowBox[{"1", "+", "\[Kappa]"}], 
                    RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]}], "]"}], " ", 
                    RowBox[{"\[Sqrt]", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"\[Kappa]", ">", "0"}], ",", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"]], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "1"]}], "\[LessEqual]", "\[Kappa]", "<", 
                    "0"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Simplify", "[", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], "]"}], 
                    "\[GreaterEqual]", "0"}], ",", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"]], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"], ">", "0"}],
                     ",", "0", ",", "\[Infinity]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"\[Kappa]", "\[Equal]", "0"}], ",", 
                    RowBox[{"Exp", "[", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"], 
                    SuperscriptBox["\[Sigma]", "2"]], "]"}], ",", "True", ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"CoupledExponential", "::", "nnarg"}], 
                    "MessageName"], ",", "\[Kappa]"}], "]"}]}], "]"}]}]}], 
                    ")"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"\[Kappa]", "\[GreaterEqual]", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x$2611", ",", 
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"x$2611", ",", 
                    RowBox[{"\[Mu]", "-", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox["\[Sigma]", "2"], "\[Kappa]"]}]]}], ",", 
                    RowBox[{"\[Mu]", "+", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox["\[Sigma]", "2"], "\[Kappa]"]}]]}]}], 
                    "}"}]}], "]"}]}], "]"}], ",", "\[Kappa]", ",", "1", ",", 
                    "2", ",", "1", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], 
                    "}"}]}], "]"}], "=", 
                    RowBox[{"ConditionalExpression", "[", 
                    RowBox[{
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]]}]], 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]], ",", 
                    RowBox[{"\[Kappa]", "\[Equal]", "0"}]}], "}"}], "}"}], 
                    ",", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["\[Kappa]"], " ", 
                    SuperscriptBox["\[Sigma]", 
                    FractionBox["1", "\[Kappa]"]], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
                    SuperscriptBox["\[Sigma]", "2"]}], ")"}], 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"1", "+", "\[Kappa]"}], 
                    RowBox[{"2", " ", "\[Kappa]"}]]}]], " ", 
                    RowBox[{"Gamma", "[", 
                    FractionBox[
                    RowBox[{"1", "+", "\[Kappa]"}], 
                    RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
                    RowBox[{
                    SqrtBox["\[Pi]"], " ", 
                    RowBox[{"Gamma", "[", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]}], "]"}]], 
                    "\[GreaterEqual]", "0"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"\[Kappa]", "\[NotEqual]", "0"}], ",", 
                    RowBox[{
                    FractionBox["1", "\[Kappa]"], 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "/", 
                    RowBox[{"PDF", "[", 
                    RowBox[{
                    RowBox[{"ProbabilityDistribution", "[", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    SqrtBox[
                    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}], ",", 
                    RowBox[{"\[Kappa]", "\[Equal]", "0"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    FractionBox["1", "2"], "-", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}], 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"-", "\[Kappa]"}]], " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{"1", "-", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]], ",", 
                    RowBox[{"\[Kappa]", "<", "0"}]}], "}"}]}], "}"}], ",", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
                    RowBox[{"Gamma", "[", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
                    RowBox[{
                    SqrtBox["\[Kappa]"], " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    FractionBox["1", "2"], "+", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]]}], "]"}], " ", 
                    RowBox[{"\[Sqrt]", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"\[Kappa]", ">", "0"}], ",", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"]], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "1"]}], "\[LessEqual]", "\[Kappa]", "<", 
                    "0"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Simplify", "[", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], "]"}], 
                    "\[GreaterEqual]", "0"}], ",", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"]], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"], ">", "0"}],
                     ",", "0", ",", "\[Infinity]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"\[Kappa]", "\[Equal]", "0"}], ",", 
                    RowBox[{"Exp", "[", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"], 
                    SuperscriptBox["\[Sigma]", "2"]], "]"}], ",", "True", ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"CoupledExponential", "::", "nnarg"}], 
                    "MessageName"], ",", "\[Kappa]"}], "]"}]}], "]"}]}]}], 
                    ")"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"\[Kappa]", "\[GreaterEqual]", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x$2611", ",", 
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"x$2611", ",", 
                    RowBox[{"\[Mu]", "-", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox["\[Sigma]", "2"], "\[Kappa]"]}]]}], ",", 
                    RowBox[{"\[Mu]", "+", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox["\[Sigma]", "2"], "\[Kappa]"]}]]}]}], 
                    "}"}]}], "]"}]}], "]"}], ",", "x"}], "]"}]}], ")"}], 
                    FractionBox["\[Kappa]", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "\[Kappa]"}]}]]]}], ")"}]}], ",", 
                    RowBox[{"Log", "[", 
                    RowBox[{"1", "/", 
                    RowBox[{"PDF", "[", 
                    RowBox[{
                    RowBox[{"ProbabilityDistribution", "[", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    SqrtBox[
                    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}], ",", 
                    RowBox[{"\[Kappa]", "\[Equal]", "0"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    FractionBox["1", "2"], "-", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}], 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"-", "\[Kappa]"}]], " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{"1", "-", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]], ",", 
                    RowBox[{"\[Kappa]", "<", "0"}]}], "}"}]}], "}"}], ",", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
                    RowBox[{"Gamma", "[", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
                    RowBox[{
                    SqrtBox["\[Kappa]"], " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    FractionBox["1", "2"], "+", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]]}], "]"}], " ", 
                    RowBox[{"\[Sqrt]", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"\[Kappa]", ">", "0"}], ",", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"]], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "1"]}], "\[LessEqual]", "\[Kappa]", "<", 
                    "0"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Simplify", "[", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], "]"}], 
                    "\[GreaterEqual]", "0"}], ",", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"]], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"], ">", "0"}],
                     ",", "0", ",", "\[Infinity]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"\[Kappa]", "\[Equal]", "0"}], ",", 
                    RowBox[{"Exp", "[", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"], 
                    SuperscriptBox["\[Sigma]", "2"]], "]"}], ",", "True", ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"CoupledExponential", "::", "nnarg"}], 
                    "MessageName"], ",", "\[Kappa]"}], "]"}]}], "]"}]}]}], 
                    ")"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"\[Kappa]", "\[GreaterEqual]", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x$2611", ",", 
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"x$2611", ",", 
                    RowBox[{"\[Mu]", "-", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox["\[Sigma]", "2"], "\[Kappa]"]}]]}], ",", 
                    RowBox[{"\[Mu]", "+", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox["\[Sigma]", "2"], "\[Kappa]"]}]]}]}], 
                    "}"}]}], "]"}]}], "]"}], ",", "x"}], "]"}]}], "]"}]}], 
                    "]"}], ",", "Undefined"}], "]"}], " ", 
                    RowBox[{"PDF", "[", 
                    RowBox[{
                    RowBox[{"ProbabilityDistribution", "[", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    SqrtBox[
                    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}], ",", 
                    RowBox[{"\[Kappa]", "\[Equal]", "0"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    FractionBox["1", "2"], "-", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}], 
                    RowBox[{
                    SqrtBox[
                    RowBox[{"-", "\[Kappa]"}]], " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{"1", "-", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]], ",", 
                    RowBox[{"\[Kappa]", "<", "0"}]}], "}"}]}], "}"}], ",", 
                    FractionBox[
                    RowBox[{
                    SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
                    RowBox[{"Gamma", "[", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
                    RowBox[{
                    SqrtBox["\[Kappa]"], " ", 
                    RowBox[{"Gamma", "[", 
                    RowBox[{
                    FractionBox["1", "2"], "+", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]]}], "]"}], " ", 
                    RowBox[{"\[Sqrt]", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"\[Kappa]", ">", "0"}], ",", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"]], ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "1"]}], "\[LessEqual]", "\[Kappa]", "<", 
                    "0"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Simplify", "[", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], "]"}], 
                    "\[GreaterEqual]", "0"}], ",", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                    SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"]], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"], ">", "0"}],
                     ",", "0", ",", "\[Infinity]"}], "]"}]}], "]"}], ",", 
                    RowBox[{"\[Kappa]", "\[Equal]", "0"}], ",", 
                    RowBox[{"Exp", "[", 
                    FractionBox[
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"], 
                    SuperscriptBox["\[Sigma]", "2"]], "]"}], ",", "True", ",", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    StyleBox[
                    RowBox[{"CoupledExponential", "::", "nnarg"}], 
                    "MessageName"], ",", "\[Kappa]"}], "]"}]}], "]"}]}]}], 
                    ")"}]}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"\[Kappa]", "\[GreaterEqual]", "0"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x$2611", ",", 
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}],
                     ",", 
                    RowBox[{"{", 
                    RowBox[{"x$2611", ",", 
                    RowBox[{"\[Mu]", "-", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox["\[Sigma]", "2"], "\[Kappa]"]}]]}], ",", 
                    RowBox[{"\[Mu]", "+", 
                    SqrtBox[
                    RowBox[{"-", 
                    FractionBox[
                    SuperscriptBox["\[Sigma]", "2"], "\[Kappa]"]}]]}]}], 
                    "}"}]}], "]"}]}], "]"}], ",", "x"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}],
                     ",", 
                    RowBox[{"Assumptions", "\[Rule]", 
                    RowBox[{"\[Kappa]", "\[Equal]", "0"}]}], ",", 
                    RowBox[{"GenerateConditions", "\[Rule]", "Automatic"}], 
                    ",", 
                    RowBox[{"PrincipalValue", "\[Rule]", "False"}]}], "]"}], 
                    ",", 
                    RowBox[{"\[Kappa]", "\[Equal]", "0"}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"CoupledEntropy", "[", 
                    RowBox[{"dist_", ",", "\[Kappa]_", ",", 
                    RowBox[{"d_", ":", "1"}], ",", 
                    RowBox[{"\[Alpha]_", ":", "2"}], ",", 
                    RowBox[{"\[Delta]_", ":", "1"}], ",", 
                    RowBox[{"limits_", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], 
                    "}"}]}]}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"CoupledEntropy", "[", 
                    RowBox[{
                    "dist", ",", "\[Kappa]", ",", "d", ",", "\[Alpha]", ",", 
                    "\[Delta]", ",", "limits"}], "]"}], "=", 
                    RowBox[{"CoupledCrossEntropy", "[", 
                    RowBox[{
                    "dist", ",", "dist", ",", "\[Kappa]", ",", "\[Alpha]", 
                    ",", "d", ",", "\[Delta]", ",", "limits"}], "]"}]}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`CoupledEntropy\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{13., {2., 11.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{13., {2., 11.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`CoupledEntropy\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`CoupledEntropy", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`CoupledEntropy, {$CellContext`CoupledEntropy[
         ProbabilityDistribution[
         Piecewise[{{(2 Pi)^
                Rational[1, 2] $CellContext`\[Sigma], $CellContext`\[Kappa] == 
               0}, {(((
                  Pi^Rational[1, 2] (-$CellContext`\[Kappa])^
                   Rational[-1, 2]) $CellContext`\[Sigma])/Gamma[
                1 + Rational[-1, 2]/$CellContext`\[Kappa]]) 
               Gamma[
                Rational[
                  1, 2] ((-1 + \
$CellContext`\[Kappa])/$CellContext`\[Kappa])], $CellContext`\[Kappa] < 
               0}}, ((Pi^Rational[1, 2] $CellContext`\[Kappa]^
                Rational[-1, 2]) $CellContext`\[Sigma]) (
              Gamma[Rational[1, 2]/$CellContext`\[Kappa]]/
              Gamma[(Rational[1, 2]/$CellContext`\[Kappa]) (
                1 + $CellContext`\[Kappa])])]^(-1) 
          Which[$CellContext`\[Kappa] > 
             0, (1 + $CellContext`\[Kappa] (($CellContext`x$2611 - \
$CellContext`\[Mu])^2 $CellContext`\[Sigma]^(-2)))^((1 + 
               1 $CellContext`\[Kappa])/$CellContext`\[Kappa]), 
             Inequality[(-1)/1, LessEqual, $CellContext`\[Kappa], Less, 0], 
             If[
             Simplify[
               1 + $CellContext`\[Kappa] (($CellContext`x$2611 - \
$CellContext`\[Mu])^2 $CellContext`\[Sigma]^(-2))] >= 
              0, (1 + $CellContext`\[Kappa] (($CellContext`x$2611 - \
$CellContext`\[Mu])^2 $CellContext`\[Sigma]^(-2)))^((1 + 
                1 $CellContext`\[Kappa])/$CellContext`\[Kappa]), 
              
              If[(1 + 1 $CellContext`\[Kappa])/$CellContext`\[Kappa] > 0, 0, 
               Infinity]], $CellContext`\[Kappa] == 0, 
             
             Exp[($CellContext`x$2611 - $CellContext`\[Mu])^2 $CellContext`\
\[Sigma]^(-2)], True, 
             Message[
              
              MessageName[$CellContext`CoupledExponential, 
               "nnarg"], $CellContext`\[Kappa]]]^Rational[-1, 2], 
          
          If[$CellContext`\[Kappa] >= 
           0, {$CellContext`x$2611, -Infinity, 
            Infinity}, {$CellContext`x$2611, $CellContext`\[Mu] - 
            Sqrt[-($CellContext`\[Sigma]^2/$CellContext`\[Kappa])], \
$CellContext`\[Mu] + 
            Sqrt[-($CellContext`\[Sigma]^2/$CellContext`\[Kappa])]}]], \
$CellContext`\[Kappa], 1, 2, 1, {
          DirectedInfinity[-1], 
          DirectedInfinity[1]}] -> ConditionalExpression[
         Integrate[
         If[Piecewise[{{
                E^((Rational[-1, 
                    2] ($CellContext`x - $CellContext`\[Mu])^2) $CellContext`\
\[Sigma]^(-2)) ((2 Pi)^
                   Rational[-1, 
                    2]/$CellContext`\[Sigma]), $CellContext`\[Kappa] == 
                 0}}, ((((
                   Pi^Rational[-1, 2] $CellContext`\[Kappa]^
                    Rational[
                    1, 
                    2]) $CellContext`\[Sigma]^($CellContext`\[Kappa]^(-1))) \
($CellContext`\[Kappa] ($CellContext`x - $CellContext`\[Mu])^2 + \
$CellContext`\[Sigma]^2)^((Rational[-1, 2]/$CellContext`\[Kappa]) (
                    1 + $CellContext`\[Kappa])))/Gamma[
                Rational[1, 2]/$CellContext`\[Kappa]]) 
               Gamma[(Rational[1, 2]/$CellContext`\[Kappa]) (
                  1 + $CellContext`\[Kappa])]]^(-1) >= 0, 
            
            If[$CellContext`\[Kappa] != 
             0, $CellContext`\[Kappa]^(-1) (-1 + (PDF[
                  ProbabilityDistribution[
                  Piecewise[{{(2 Pi)^
                    Rational[
                    1, 2] $CellContext`\[Sigma], $CellContext`\[Kappa] == 
                    0}, {((Pi^Rational[1, 2] (-$CellContext`\[Kappa])^
                    Rational[-1, 2]) $CellContext`\[Sigma]) (
                    Gamma[Rational[1, 2] + 
                    Rational[-1, 2]/$CellContext`\[Kappa]]/Gamma[
                    1 + Rational[-1, 
                    2]/$CellContext`\[Kappa]]), $CellContext`\[Kappa] < 
                    0}}, (((
                    Pi^Rational[1, 2] $CellContext`\[Kappa]^
                    Rational[-1, 2]) $CellContext`\[Sigma])/Gamma[
                    Rational[1, 2] + Rational[1, 2]/$CellContext`\[Kappa]]) 
                    Gamma[Rational[1, 2]/$CellContext`\[Kappa]]]^(-1) 
                   Which[$CellContext`\[Kappa] > 
                    0, (1 + $CellContext`\[Kappa] (($CellContext`x$2611 - \
$CellContext`\[Mu])^2 $CellContext`\[Sigma]^(-2)))^((1 + 
                    1 $CellContext`\[Kappa])/$CellContext`\[Kappa]), 
                    
                    Inequality[(-1)/1, LessEqual, $CellContext`\[Kappa], Less,
                     0], 
                    If[
                    Simplify[
                    1 + $CellContext`\[Kappa] (($CellContext`x$2611 - \
$CellContext`\[Mu])^2 $CellContext`\[Sigma]^(-2))] >= 
                    0, (1 + $CellContext`\[Kappa] (($CellContext`x$2611 - \
$CellContext`\[Mu])^2 $CellContext`\[Sigma]^(-2)))^((1 + 
                    1 $CellContext`\[Kappa])/$CellContext`\[Kappa]), 
                    
                    If[(1 + 1 $CellContext`\[Kappa])/$CellContext`\[Kappa] > 
                    0, 0, Infinity]], $CellContext`\[Kappa] == 0, 
                    
                    Exp[($CellContext`x$2611 - $CellContext`\[Mu])^2 \
$CellContext`\[Sigma]^(-2)], True, 
                    Message[
                    
                    MessageName[$CellContext`CoupledExponential, 
                    "nnarg"], $CellContext`\[Kappa]]]^Rational[-1, 2], 
                   
                   If[$CellContext`\[Kappa] >= 
                    0, {$CellContext`x$2611, -Infinity, 
                    Infinity}, {$CellContext`x$2611, $CellContext`\[Mu] - 
                    Sqrt[-($CellContext`\[Sigma]^2/$CellContext`\[Kappa])], \
$CellContext`\[Mu] + 
                    Sqrt[-($CellContext`\[Sigma]^2/$CellContext`\[Kappa])]}]],\
 $CellContext`x]^(-1))^($CellContext`\[Kappa]/(1 + 2 $CellContext`\[Kappa]))), 
             Log[PDF[
                ProbabilityDistribution[
                Piecewise[{{(2 Pi)^
                    Rational[
                    1, 2] $CellContext`\[Sigma], $CellContext`\[Kappa] == 
                    0}, {((Pi^Rational[1, 2] (-$CellContext`\[Kappa])^
                    Rational[-1, 2]) $CellContext`\[Sigma]) (
                    Gamma[Rational[1, 2] + 
                    Rational[-1, 2]/$CellContext`\[Kappa]]/Gamma[
                    1 + Rational[-1, 
                    2]/$CellContext`\[Kappa]]), $CellContext`\[Kappa] < 
                    0}}, (((
                    Pi^Rational[1, 2] $CellContext`\[Kappa]^
                    Rational[-1, 2]) $CellContext`\[Sigma])/Gamma[
                    Rational[1, 2] + Rational[1, 2]/$CellContext`\[Kappa]]) 
                    Gamma[Rational[1, 2]/$CellContext`\[Kappa]]]^(-1) 
                 Which[$CellContext`\[Kappa] > 
                    0, (1 + $CellContext`\[Kappa] (($CellContext`x$2611 - \
$CellContext`\[Mu])^2 $CellContext`\[Sigma]^(-2)))^((1 + 
                    1 $CellContext`\[Kappa])/$CellContext`\[Kappa]), 
                    
                    Inequality[(-1)/1, LessEqual, $CellContext`\[Kappa], Less,
                     0], 
                    If[
                    Simplify[
                    1 + $CellContext`\[Kappa] (($CellContext`x$2611 - \
$CellContext`\[Mu])^2 $CellContext`\[Sigma]^(-2))] >= 
                    0, (1 + $CellContext`\[Kappa] (($CellContext`x$2611 - \
$CellContext`\[Mu])^2 $CellContext`\[Sigma]^(-2)))^((1 + 
                    1 $CellContext`\[Kappa])/$CellContext`\[Kappa]), 
                    
                    If[(1 + 1 $CellContext`\[Kappa])/$CellContext`\[Kappa] > 
                    0, 0, Infinity]], $CellContext`\[Kappa] == 0, 
                    
                    Exp[($CellContext`x$2611 - $CellContext`\[Mu])^2 \
$CellContext`\[Sigma]^(-2)], True, 
                    Message[
                    
                    MessageName[$CellContext`CoupledExponential, 
                    "nnarg"], $CellContext`\[Kappa]]]^Rational[-1, 2], 
                 
                 If[$CellContext`\[Kappa] >= 
                  0, {$CellContext`x$2611, -Infinity, 
                   Infinity}, {$CellContext`x$2611, $CellContext`\[Mu] - 
                   Sqrt[-($CellContext`\[Sigma]^2/$CellContext`\[Kappa])], \
$CellContext`\[Mu] + 
                   Sqrt[-($CellContext`\[Sigma]^2/$CellContext`\[Kappa])]}]], \
$CellContext`x]^(-1)]], Undefined] PDF[
            ProbabilityDistribution[
            Piecewise[{{(2 Pi)^
                   Rational[
                    1, 2] $CellContext`\[Sigma], $CellContext`\[Kappa] == 
                  0}, {((Pi^Rational[1, 2] (-$CellContext`\[Kappa])^
                    Rational[-1, 2]) $CellContext`\[Sigma]) (
                   Gamma[Rational[1, 2] + 
                    Rational[-1, 2]/$CellContext`\[Kappa]]/Gamma[
                   1 + Rational[-1, 
                    2]/$CellContext`\[Kappa]]), $CellContext`\[Kappa] < 
                  0}}, (((
                   Pi^Rational[1, 2] $CellContext`\[Kappa]^
                    Rational[-1, 2]) $CellContext`\[Sigma])/Gamma[
                 Rational[1, 2] + Rational[1, 2]/$CellContext`\[Kappa]]) 
                Gamma[Rational[1, 2]/$CellContext`\[Kappa]]]^(-1) 
             Which[$CellContext`\[Kappa] > 
                0, (1 + $CellContext`\[Kappa] (($CellContext`x$2611 - \
$CellContext`\[Mu])^2 $CellContext`\[Sigma]^(-2)))^((1 + 
                  1 $CellContext`\[Kappa])/$CellContext`\[Kappa]), 
                Inequality[(-1)/1, LessEqual, $CellContext`\[Kappa], Less, 0], 
                If[
                Simplify[
                  1 + $CellContext`\[Kappa] (($CellContext`x$2611 - \
$CellContext`\[Mu])^2 $CellContext`\[Sigma]^(-2))] >= 
                 0, (1 + $CellContext`\[Kappa] (($CellContext`x$2611 - \
$CellContext`\[Mu])^2 $CellContext`\[Sigma]^(-2)))^((1 + 
                   1 $CellContext`\[Kappa])/$CellContext`\[Kappa]), 
                 
                 If[(1 + 1 $CellContext`\[Kappa])/$CellContext`\[Kappa] > 0, 
                  0, Infinity]], $CellContext`\[Kappa] == 0, 
                
                Exp[($CellContext`x$2611 - $CellContext`\[Mu])^2 \
$CellContext`\[Sigma]^(-2)], True, 
                Message[
                 
                 MessageName[$CellContext`CoupledExponential, 
                  "nnarg"], $CellContext`\[Kappa]]]^Rational[-1, 2], 
             If[$CellContext`\[Kappa] >= 
              0, {$CellContext`x$2611, -Infinity, 
               Infinity}, {$CellContext`x$2611, $CellContext`\[Mu] - 
               Sqrt[-($CellContext`\[Sigma]^2/$CellContext`\[Kappa])], \
$CellContext`\[Mu] + 
               Sqrt[-($CellContext`\[Sigma]^2/$CellContext`\[Kappa])]}]], \
$CellContext`x], {$CellContext`x, 
           DirectedInfinity[-1], 
           DirectedInfinity[1]}, Assumptions -> $CellContext`\[Kappa] == 0, 
          GenerateConditions -> Automatic, PrincipalValue -> 
          False], $CellContext`\[Kappa] == 0], $CellContext`CoupledEntropy[
         Pattern[$CellContext`dist, 
          Blank[]], 
         Pattern[$CellContext`\[Kappa], 
          Blank[]], 
         Optional[
          Pattern[$CellContext`d, 
           Blank[]], 1], 
         Optional[
          Pattern[$CellContext`\[Alpha], 
           Blank[]], 2], 
         Optional[
          Pattern[$CellContext`\[Delta], 
           Blank[]], 1], 
         Optional[
          Pattern[$CellContext`limits, 
           Blank[]], {
           DirectedInfinity[-1], 
           DirectedInfinity[
           1]}]] :> ($CellContext`CoupledEntropy[$CellContext`dist, \
$CellContext`\[Kappa], $CellContext`d, $CellContext`\[Alpha], $CellContext`\
\[Delta], $CellContext`limits] = \
$CellContext`CoupledCrossEntropy[$CellContext`dist, $CellContext`dist, \
$CellContext`\[Kappa], $CellContext`\[Alpha], $CellContext`d, $CellContext`\
\[Delta], $CellContext`limits])}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Global`CoupledEntropy"|>, 
   False]]], "Output",
 CellChangeTimes->{3.8259279142719717`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"405d1d52-7dd9-4def-b0ea-62b439f79e44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Head", "[", 
   RowBox[{"f", "[", "x", "]"}], "]"}], "==", "f"}]], "Input",
 CellChangeTimes->{{3.8259291530207644`*^9, 3.825929157084078*^9}, {
  3.8259294899058104`*^9, 3.825929520580867*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"8fae915c-e096-4981-96b0-da2d4cb4146f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.825929158013895*^9, {3.825929499759718*^9, 3.825929521433408*^9}},
 CellLabel->"Out[69]=",ExpressionUUID->"e4e9ac71-5ba6-41fc-9f6f-ced49707f8c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Which", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Level", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"t", ",", "y"}], "]"}], ",", "1"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "x"}], ",", "\"\<x\>\"", ",",
    "True", ",", 
   RowBox[{"Level", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", "1"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.825929199229501*^9, 3.8259292195110407`*^9}, {
  3.8259293239633093`*^9, 3.825929333579493*^9}, {3.82592961608646*^9, 
  3.825929620860917*^9}, {3.825929999068548*^9, 3.8259300954619913`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"a5408c28-f659-4c52-a5dd-f51a0e828e8b"],

Cell[BoxData[
 RowBox[{"Which", "[", 
  RowBox[{
   RowBox[{"t", "\[Equal]", "x"}], ",", "\<\"x\"\>", ",", "True", ",", 
   RowBox[{"Level", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", "1"}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.8259292082422247`*^9, 3.8259292200535183`*^9}, {
   3.825929325292107*^9, 3.825929334299437*^9}, 3.8259296227751017`*^9, {
   3.8259300650361357`*^9, 3.8259300963966827`*^9}},
 CellLabel->"Out[73]=",ExpressionUUID->"f18e7f76-f1a0-4868-a7c4-a9912036a093"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CoupledEntropy", "[", 
  RowBox[{
   RowBox[{"CoupledNormalDistribution", "[", 
    RowBox[{"\[Mu]", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
   "\[Kappa]", ",", "1", ",", "2", ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.825930660793663*^9, 3.825930663007132*^9}, 
   3.825931047439567*^9},
 CellLabel->"In[97]:=",ExpressionUUID->"5340b63e-326d-400b-80fe-29217f5665c1"],

Cell[BoxData["ProbabilityDistribution"], "Output",
 CellChangeTimes->{{3.82593102810312*^9, 3.825931072438539*^9}, {
  3.8259311476747713`*^9, 3.8259311594913397`*^9}},
 CellLabel->"Out[97]=",ExpressionUUID->"a2eaf7e0-c063-41ea-8438-90b5a0cda823"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "CoupledEntropy", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoupledEntropy", "[", 
   RowBox[{
    RowBox[{"Hold", "[", "dist_", "]"}], ",", "\[Kappa]_", ",", 
    RowBox[{"d_", ":", "1"}], ",", 
    RowBox[{"\[Alpha]_", ":", "2"}], ",", 
    RowBox[{"\[Delta]_", ":", "1"}], ",", 
    RowBox[{"limits_", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}]}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"CoupledEntropy", "[", 
    RowBox[{
     RowBox[{"Hold", "[", "dist", "]"}], ",", "\[Kappa]", ",", "d", ",", 
     "\[Alpha]", ",", "\[Delta]", ",", "limits"}], "]"}], "=", 
   "\[IndentingNewLine]", 
   RowBox[{"CoupledCrossEntropy", "[", 
    RowBox[{
    "dist", ",", "dist", ",", "\[Kappa]", ",", "\[Alpha]", ",", "d", ",", 
     "\[Delta]", ",", "limits"}], "]"}]}]}], "\[IndentingNewLine]"}], "Input",\

 CellChangeTimes->{{3.8259310110523167`*^9, 3.8259310180807858`*^9}, {
  3.8259310657878847`*^9, 3.8259310694052353`*^9}, {3.825931100369668*^9, 
  3.825931156348258*^9}, {3.8260299404513083`*^9, 3.826029987392517*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"e2aa1d22-ca0f-401b-a32d-739e0e8d4b6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CoupledEntropy", "[", 
  RowBox[{
   RowBox[{"CoupledNormalDistribution", "[", 
    RowBox[{"\[Mu]", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
   "\[Kappa]", ",", "1", ",", "2", ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->
  "In[103]:=",ExpressionUUID->"1de836b9-7218-4f82-8aca-e425fab0e78f"],

Cell[BoxData[
 RowBox[{"CoupledEntropy", "[", 
  RowBox[{
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         TagBox[GridBox[{
            {"\[Piecewise]", GridBox[{
               {
                RowBox[{
                 SqrtBox[
                  RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}], 
                RowBox[{"\[Kappa]", "\[Equal]", "0"}]},
               {
                FractionBox[
                 RowBox[{
                  SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
                  RowBox[{"Gamma", "[", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Kappa]"}], 
                    RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
                 RowBox[{
                  SqrtBox[
                   RowBox[{"-", "\[Kappa]"}]], " ", 
                  RowBox[{"Gamma", "[", 
                   RowBox[{"1", "-", 
                    FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]], 
                RowBox[{"\[Kappa]", "<", "0"}]},
               {
                FractionBox[
                 RowBox[{
                  SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
                  RowBox[{"Gamma", "[", 
                   FractionBox["1", 
                    RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
                 RowBox[{
                  SqrtBox["\[Kappa]"], " ", 
                  RowBox[{"Gamma", "[", 
                   FractionBox[
                    RowBox[{"1", "+", "\[Kappa]"}], 
                    RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]], 
                TagBox["True",
                 "PiecewiseDefault",
                 AutoDelete->True]}
              },
              AllowedDimensions->{2, Automatic},
              Editable->True,
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
              
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.84]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}},
              Selectable->True]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.35]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}],
          "Piecewise",
          DeleteWithContents->True,
          Editable->False,
          SelectWithContents->True,
          Selectable->False,
          StripWrapperBoxes->True], ")"}], " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"\[Kappa]", ">", "0"}], ",", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"\[Kappa]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
               SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
            FractionBox[
             RowBox[{"1", "+", 
              RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"]], ",", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "1"]}], "\[LessEqual]", "\[Kappa]", "<", "0"}], 
           ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Simplify", "[", 
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"\[Kappa]", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                 SuperscriptBox["\[Sigma]", "2"]]}], "]"}], "\[GreaterEqual]",
               "0"}], ",", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"\[Kappa]", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"]}], 
                 SuperscriptBox["\[Sigma]", "2"]]}], ")"}], 
              FractionBox[
               RowBox[{"1", "+", 
                RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"]], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{"1", "+", 
                  RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"], ">", "0"}], 
               ",", "0", ",", "\[Infinity]"}], "]"}]}], "]"}], ",", 
           RowBox[{"\[Kappa]", "\[Equal]", "0"}], ",", 
           RowBox[{"Exp", "[", 
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"x$2611", "-", "\[Mu]"}], ")"}], "2"], 
             SuperscriptBox["\[Sigma]", "2"]], "]"}], ",", "True", ",", 
           RowBox[{"Message", "[", 
            RowBox[{
             StyleBox[
              RowBox[{"CoupledExponential", "::", "nnarg"}], "MessageName"], 
             ",", "\[Kappa]"}], "]"}]}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[Kappa]", "\[GreaterEqual]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"x$2611", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x$2611", ",", 
         RowBox[{"\[Mu]", "-", 
          SqrtBox[
           RowBox[{"-", 
            FractionBox[
             SuperscriptBox["\[Sigma]", "2"], "\[Kappa]"]}]]}], ",", 
         RowBox[{"\[Mu]", "+", 
          SqrtBox[
           RowBox[{"-", 
            FractionBox[
             SuperscriptBox["\[Sigma]", "2"], "\[Kappa]"]}]]}]}], "}"}]}], 
      "]"}]}], "]"}], ",", "\[Kappa]", ",", "1", ",", "2", ",", "1", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.826030013641473*^9, 3.826030044676659*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"69eda950-9d1d-4d7a-a16c-f7dee72dca3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CoupledEntropy"}]], "Input",
 CellChangeTimes->{{3.826030054529974*^9, 3.826030059780655*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"e891c443-55bb-458a-9216-09cdd2d1a7db"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`CoupledEntropy\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"CoupledEntropy", "[", 
                    RowBox[{
                    RowBox[{"Hold", "[", "dist_", "]"}], ",", "\[Kappa]_", 
                    ",", 
                    RowBox[{"d_", ":", "1"}], ",", 
                    RowBox[{"\[Alpha]_", ":", "2"}], ",", 
                    RowBox[{"\[Delta]_", ":", "1"}], ",", 
                    RowBox[{"limits_", ":", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], 
                    "}"}]}]}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"CoupledEntropy", "[", 
                    RowBox[{
                    RowBox[{"Hold", "[", "dist", "]"}], ",", "\[Kappa]", ",", 
                    "d", ",", "\[Alpha]", ",", "\[Delta]", ",", "limits"}], 
                    "]"}], "=", 
                    RowBox[{"CoupledCrossEntropy", "[", 
                    RowBox[{
                    "dist", ",", "dist", ",", "\[Kappa]", ",", "\[Alpha]", 
                    ",", "d", ",", "\[Delta]", ",", "limits"}], "]"}]}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`CoupledEntropy\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{13., {2., 11.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{13., {2., 11.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`CoupledEntropy\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`CoupledEntropy", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`CoupledEntropy, {$CellContext`CoupledEntropy[
         Hold[
          Pattern[$CellContext`dist, 
           Blank[]]], 
         Pattern[$CellContext`\[Kappa], 
          Blank[]], 
         Optional[
          Pattern[$CellContext`d, 
           Blank[]], 1], 
         Optional[
          Pattern[$CellContext`\[Alpha], 
           Blank[]], 2], 
         Optional[
          Pattern[$CellContext`\[Delta], 
           Blank[]], 1], 
         Optional[
          Pattern[$CellContext`limits, 
           Blank[]], {
           DirectedInfinity[-1], 
           DirectedInfinity[1]}]] :> ($CellContext`CoupledEntropy[
          
          Hold[$CellContext`dist], $CellContext`\[Kappa], $CellContext`d, \
$CellContext`\[Alpha], $CellContext`\[Delta], $CellContext`limits] = \
$CellContext`CoupledCrossEntropy[$CellContext`dist, $CellContext`dist, \
$CellContext`\[Kappa], $CellContext`\[Alpha], $CellContext`d, $CellContext`\
\[Delta], $CellContext`limits])}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Global`CoupledEntropy"|>, 
   False]]], "Output",
 CellChangeTimes->{3.826030060636634*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"0a36ba6c-273c-4c95-ac03-f9881cfe3d9c"]
}, Open  ]],

Cell["Relative Risk Aversion", "Text",
 CellChangeTimes->{{3.899056641538714*^9, 
  3.899056687445312*^9}},ExpressionUUID->"d8076656-0c10-4e27-a4d9-\
adf673dbdeaf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"qln", "[", 
    RowBox[{"x_", ",", "q_"}], "]"}], ":=", 
   FractionBox[
    SuperscriptBox["x", 
     RowBox[{"1", "-", "q"}]], 
    RowBox[{"1", "-", "q"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "[", 
   RowBox[{"x_", ",", "q_"}], "]"}], "=", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "x"}], " ", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"qln", "[", 
       RowBox[{"x", ",", "q"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"qln", "[", 
      RowBox[{"x", ",", "q"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1"}], "}"}]}], "]"}]]}]}], "Input",
 CellChangeTimes->{{3.8990566906066217`*^9, 3.899056691267597*^9}, {
  3.899056727259686*^9, 3.8990568302543364`*^9}, {3.899056904572214*^9, 
  3.899056956614348*^9}, {3.899057002953044*^9, 3.899057005019718*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"d409792f-2790-4757-8116-f648c02d46e6"],

Cell[BoxData["q"], "Output",
 CellChangeTimes->{3.899056957927249*^9, 3.899057008522073*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"13ad87e0-0ceb-4091-8c27-0a21d45f8b0a"]
}, Open  ]],

Cell["\<\
but our risk measurement seems to indicate q = 1 + r; with r being the \
measure of risk; r = q - 1\
\>", "Text",
 CellChangeTimes->{{3.8990570461516027`*^9, 3.899057080243541*^9}, {
  3.8990571121122913`*^9, 3.899057122229681*^9}, {3.8990571578150682`*^9, 
  3.899057165277817*^9}},ExpressionUUID->"5688ec3e-b570-4369-b5ea-\
c77ed8ebf29c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "x"}], " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"qln", "[", 
        RowBox[{"x", ",", "q"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"qln", "[", 
       RowBox[{"x", ",", "q"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1"}], "}"}]}], "]"}]], "-", "1"}], " ", "=", " ", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "x"}], " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"qln", "[", 
        RowBox[{"x", ",", "q"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], "-", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"qln", "[", 
       RowBox[{"x", ",", "q"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1"}], "}"}]}], "]"}]}], 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"qln", "[", 
      RowBox[{"x", ",", "q"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1"}], "}"}]}], "]"}]]}]], "Input",
 CellChangeTimes->{{3.8990572085963097`*^9, 
  3.899057238532277*^9}},ExpressionUUID->"a7ca4743-4ec9-4829-9a19-\
199df30ca52e"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"qln", "[", 
     RowBox[{"x", ",", "q"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "2"}], "}"}]}], "]"}], 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"qln", "[", 
     RowBox[{"x", ",", "q"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1"}], "}"}]}], "]"}]]], "Input",
 CellChangeTimes->{{3.899057321056279*^9, 3.899057321792533*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"7da5075a-58f8-4db9-ae2d-dda168e062c2"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["q", "x"]}]], "Output",
 CellChangeTimes->{3.899057322881806*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"b28cf09a-0006-4e07-bf76-662ad28a9d7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "x"}], " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"qln", "[", 
        RowBox[{"x", ",", "q"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], "-", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"qln", "[", 
       RowBox[{"x", ",", "q"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1"}], "}"}]}], "]"}]}], 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"qln", "[", 
      RowBox[{"x", ",", "q"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1"}], "}"}]}], "]"}]], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8990573605103073`*^9, 3.89905736324411*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"36054542-7234-4252-910d-d2d4f23dba68"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", "q"}]], "Output",
 CellChangeTimes->{{3.899057355156114*^9, 3.899057364024914*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"c25ec80a-dd83-4989-9668-9addb2a7925f"]
}, Open  ]],

Cell["\<\
Justified use of -r for relative risk aversion due to -ln x being the neutral \
information measure rather than x.  And therefore r is the relative risk \
tolerance. The equation than also makes sense.  Rather than the second \
derivative, its the deviation of the second derivative from the slope of the \
generalized logarithm.  Could it be defined in terms of the second derivative \
of the natural logarithm?

\
\>", "Text",
 CellChangeTimes->{{3.89905758398135*^9, 3.899057680242592*^9}, {
  3.899057810081499*^9, 
  3.8990579162342176`*^9}},ExpressionUUID->"1c09390c-2346-483c-888f-\
c76e897fea14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "x"}], " ", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Log", "[", "x", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "/", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Log", "[", "x", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.89905793454573*^9, 3.899057949650407*^9}, {
  3.8990579954545507`*^9, 3.899058009233976*^9}, {3.899058366617231*^9, 
  3.899058378859049*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"87d26da4-646d-4af8-ba46-c48ddba41378"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.8990579364313383`*^9, 3.899057951770081*^9}, 
   3.899058010528617*^9, 3.899058382670865*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"907f95da-ed77-4aa2-b24c-050fb70e1459"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"x", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"qln", "[", 
        RowBox[{
         SuperscriptBox["x", 
          RowBox[{"-", "1"}]], ",", "q"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], "-", 
    FractionBox["1", 
     SuperscriptBox["x", "2"]]}], 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"qln", "[", 
      RowBox[{
       SuperscriptBox["x", 
        RowBox[{"-", "1"}]], ",", "q"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1"}], "}"}]}], "]"}]], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.89905802258228*^9, 3.899058077680356*^9}, {
  3.89905810824872*^9, 3.8990581286452017`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"d8d1b427-2bec-4493-8b68-52d5a84f5523"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], "+", "q", "+", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox["1", "x"], ")"}], "q"]}]], "Output",
 CellChangeTimes->{{3.899058070637645*^9, 3.899058078392963*^9}, {
  3.899058110154421*^9, 3.8990581316675034`*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"13f64843-62f8-44f6-9029-64cec546c99b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"qln", "[", 
    RowBox[{
     SuperscriptBox["x", 
      RowBox[{"-", "1"}]], ",", "q"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"4392c42a-fe73-4b96-b174-39fd1346e1cd"],

Cell[BoxData[
 RowBox[{"-", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox["1", "x"], ")"}], 
   RowBox[{"2", "-", "q"}]]}]], "Output",
 CellChangeTimes->{3.899058167384633*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"7ffb63d6-c528-4c19-a8bb-b6fb269a6931"]
}, Open  ]],

Cell[TextData[{
 "Relative Risk Aversion for Information using ln ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{"-", "1"}]], " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6552ddb5-2648-4d0e-ac48-6aabbd5550d5"],
 "as the foundation."
}], "Text",
 CellChangeTimes->{{3.899058543093933*^9, 
  3.899058571234248*^9}},ExpressionUUID->"8ea68f43-ff33-4d04-ad09-\
cbed79290a0c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", "x"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"qln", "[", 
         RowBox[{
          SuperscriptBox["x", 
           RowBox[{"-", "1"}]], ",", "q"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"qln", "[", 
        RowBox[{
         SuperscriptBox["x", 
          RowBox[{"-", "1"}]], ",", "q"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "1"}], "}"}]}], "]"}]], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "x"}], " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"Log", "[", 
         SuperscriptBox["x", 
          RowBox[{"-", "1"}]], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"Log", "[", 
        SuperscriptBox["x", 
         RowBox[{"-", "1"}]], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "1"}], "}"}]}], "]"}]]}], ")"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8990588001632843`*^9, 3.899058907107154*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"ece7a311-3d67-4bf3-9f87-569289594c44"],

Cell[BoxData[
 RowBox[{"1", "-", "q"}]], "Output",
 CellChangeTimes->{{3.899058841538344*^9, 3.8990588732021017`*^9}, 
   3.899058908357704*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"b080d9c1-2a64-4bb9-89da-bbe14f938df3"]
}, Open  ]],

Cell["\<\
So if r is referred to as the relative risk tolerance and -r is the relative \
risk aversion, then
- r = 1 - q and r = q - 1; however, this is not what I\[CloseCurlyQuote]m \
looking for.  This is right, since q = 1 + r.

However, there is one advantage to using a definition of r = 1 - q.  This \
would correspond to original definition of the coupling.  Thus we could say \
that r is the informational relative risk aversion. You might also refer to R \
= -r as the relative risk tolerance.  or r

I think its better to make the change.\
\>", "Text",
 CellChangeTimes->{{3.899059026534769*^9, 3.899059150180091*^9}, {
  3.8990592527862597`*^9, 3.899059330577569*^9}, {3.8990593907863626`*^9, 
  3.899059426122752*^9}, {3.8990595536535177`*^9, 3.899059572697205*^9}, {
  3.899059616911524*^9, 
  3.899059624449491*^9}},ExpressionUUID->"9f2c8335-8051-4912-84bf-\
1e7e96cb1819"],

Cell[BoxData[
 RowBox[{"Clear", "[", "qln", "]"}]], "Input",
 CellChangeTimes->{{3.8991034072514887`*^9, 3.899103410096797*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"8270c29d-f423-4761-9feb-02e24590aecf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", "\[Alpha]"], 
     RowBox[{"CoupledLogarithm", "[", 
      RowBox[{
       SuperscriptBox["p", 
        FractionBox[
         RowBox[{"-", "\[Alpha]"}], 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", "\[Kappa]"}]}]]], ",", "\[Kappa]", ",", "d"}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "2"}], "}"}]}], "]"}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.899104383831944*^9, 3.8991043874009743`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"3d7bc8cc-34e1-404c-a472-765675cf70d3"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox["1", 
         SuperscriptBox["p", "2"]], 
        RowBox[{
         RowBox[{
          SuperscriptBox["p", 
           RowBox[{"-", "\[Alpha]"}]], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{"\[Kappa]", "\[Equal]", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            SuperscriptBox["p", 
             RowBox[{"-", 
              FractionBox["\[Alpha]", 
               RowBox[{"1", "+", 
                RowBox[{"d", " ", "\[Kappa]"}]}]]}]], ")"}], 
           FractionBox["\[Kappa]", 
            RowBox[{"1", "+", 
             RowBox[{"d", " ", "\[Kappa]"}]}]]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"\[Kappa]", " ", 
             RowBox[{"(", 
              RowBox[{"\[Alpha]", "+", 
               RowBox[{"d", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{"d", " ", "\[Kappa]"}]}], ")"}]}]}], ")"}]}]}], 
           ")"}]}], 
         RowBox[{
          SuperscriptBox["p", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"d", " ", "\[Kappa]"}]}], ")"}], "4"]}]], 
        RowBox[{
         RowBox[{
          SuperscriptBox["p", 
           RowBox[{"-", 
            FractionBox["\[Alpha]", 
             RowBox[{"1", "+", 
              RowBox[{"d", " ", "\[Kappa]"}]}]]}]], "\[GreaterEqual]", "0"}], 
         "&&", 
         RowBox[{"\[Kappa]", "\[NotEqual]", "0"}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{{3.8991043802527523`*^9, 3.8991043884701967`*^9}},
 CellLabel->
  "Out[109]=",ExpressionUUID->"13e76a97-f990-4cda-aa94-d8e858984636"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", "\[Alpha]"], 
     RowBox[{"CoupledLogarithm", "[", 
      RowBox[{
       SuperscriptBox["p", 
        FractionBox[
         RowBox[{"-", "\[Alpha]"}], 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", "\[Kappa]"}]}]]], ",", "\[Kappa]", ",", "d"}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "1"}], "}"}]}], "]"}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.899104409106077*^9, 3.899104409149871*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"309d2158-d8a7-486f-bcff-d7619f17e884"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            SuperscriptBox["p", 
             RowBox[{"-", 
              FractionBox["\[Alpha]", 
               RowBox[{"1", "+", 
                RowBox[{"d", " ", "\[Kappa]"}]}]]}]], ")"}], 
           FractionBox["\[Kappa]", 
            RowBox[{"1", "+", 
             RowBox[{"d", " ", "\[Kappa]"}]}]]], 
          RowBox[{"p", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"d", " ", "\[Kappa]"}]}], ")"}], "2"]}]]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox["p", 
           RowBox[{"-", 
            FractionBox["\[Alpha]", 
             RowBox[{"1", "+", 
              RowBox[{"d", " ", "\[Kappa]"}]}]]}]], "\[GreaterEqual]", "0"}], 
         "&&", 
         RowBox[{"\[Kappa]", "\[NotEqual]", "0"}]}]},
       {
        RowBox[{"-", 
         FractionBox["1", "p"]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox["p", 
           RowBox[{"-", "\[Alpha]"}]], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{"\[Kappa]", "\[Equal]", "0"}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.89910441062838*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"d7d0d7eb-88e7-43a9-b019-b79af2c13a70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox["p", 
       RowBox[{"-", 
        FractionBox["\[Alpha]", 
         RowBox[{"1", "+", 
          RowBox[{"d", " ", "\[Kappa]"}]}]]}]], ")"}], 
     FractionBox["\[Kappa]", 
      RowBox[{"1", "+", 
       RowBox[{"d", " ", "\[Kappa]"}]}]]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"\[Kappa]", " ", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "+", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"d", " ", "\[Kappa]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox["p", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"d", " ", "\[Kappa]"}]}], ")"}], "4"]}]], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.899104427730825*^9, 3.899104429421158*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"845a3ec5-bbe9-4c4b-bc5f-7bbd110858dd"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["p", 
      RowBox[{"-", 
       FractionBox["\[Alpha]", 
        RowBox[{"1", "+", 
         RowBox[{"d", " ", "\[Kappa]"}]}]]}]], ")"}], 
    FractionBox["\[Kappa]", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", "\[Kappa]"}]}]]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"\[Kappa]", " ", 
      RowBox[{"(", 
       RowBox[{"\[Alpha]", "+", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"d", " ", "\[Kappa]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
  RowBox[{
   SuperscriptBox["p", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"d", " ", "\[Kappa]"}]}], ")"}], "4"]}]]], "Output",
 CellChangeTimes->{3.899104430125701*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"9af0ff5a-3541-4a44-9801-0c6e72c9bc25"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"couplingToq", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0.5"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.899445532529272*^9, 3.899445545179631*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"a75ce33f-f4ba-402b-866f-229ce59a6cc2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1.6666666666666665`"}], "}"}]], "Output",
 CellChangeTimes->{3.899445548559568*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"f3c30cad-1fe6-452d-957c-ef26a95cb71e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"qln", "[", 
     RowBox[{"c_", ",", "q_"}], "]"}], "&"}], "/@", 
   RowBox[{"couplingToq", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0.25", ",", ".5", ",", "0.75"}], "}"}], ",", 
     "\[Alpha]", ",", "d"}], "]"}]}], "//.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]", "->", "2"}], ",", 
    RowBox[{"d", "->", "1"}]}], "}"}]}]], "Input",
 CellLabel->"In[80]:=",ExpressionUUID->"54ab9694-43dc-4136-bbe9-9e127fd725a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["c_", 
      RowBox[{"1", "-", "q_"}]]}], 
    RowBox[{"1", "-", "q_"}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["c_", 
      RowBox[{"1", "-", "q_"}]]}], 
    RowBox[{"1", "-", "q_"}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["c_", 
      RowBox[{"1", "-", "q_"}]]}], 
    RowBox[{"1", "-", "q_"}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["c_", 
      RowBox[{"1", "-", "q_"}]]}], 
    RowBox[{"1", "-", "q_"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.899445695759595*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"2bf163a2-a4e7-4627-a42e-33d4426490fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"couplingToq", "[", 
  RowBox[{"\[Kappa]", ",", "\[Alpha]", ",", "d"}], "]"}]], "Input",
 CellLabel->
  "In[100]:=",ExpressionUUID->"0ffcaa5a-b285-40ed-96a5-9314f18094fc"],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"\[Alpha]", " ", "\[Kappa]"}], 
   RowBox[{"1", "+", 
    RowBox[{"d", " ", "\[Kappa]"}]}]]}]], "Output",
 CellChangeTimes->{3.8994476968594427`*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"4ec30981-07e7-490c-92ed-441dd6440ea2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "\[Alpha]"], 
      RowBox[{"CoupledLogarithm", "[", 
       RowBox[{
        SuperscriptBox["p", 
         RowBox[{"-", "\[Alpha]"}]], ",", "\[Kappa]", ",", "d"}], "]"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "2"}], "}"}]}], "]"}], 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "\[Alpha]"], 
      RowBox[{"CoupledLogarithm", "[", 
       RowBox[{
        SuperscriptBox["p", 
         RowBox[{"-", "\[Alpha]"}]], ",", "\[Kappa]", ",", "d"}], "]"}]}], 
     ",", "p"}], "]"}]], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8994486557972393`*^9, 3.899448657337813*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"2376a477-9066-4efa-adad-bb9d8eddfbfd"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", "p"]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox["p", 
           RowBox[{"-", "\[Alpha]"}]], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{"\[Kappa]", "\[Equal]", "0"}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"d", "+", "\[Alpha]"}], ")"}], " ", "\[Kappa]"}]}], 
          RowBox[{"p", "+", 
           RowBox[{"d", " ", "p", " ", "\[Kappa]"}]}]]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox["p", 
           RowBox[{"-", "\[Alpha]"}]], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{"\[Kappa]", "\[NotEqual]", "0"}]}]},
       {"Indeterminate", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{{3.899448647573482*^9, 3.8994486583025723`*^9}},
 CellLabel->
  "Out[105]=",ExpressionUUID->"e27f8d1f-876e-43d3-a794-cfce3f7896ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], "\[Alpha]"], 
      RowBox[{"CoupledLogarithm", "[", 
       RowBox[{
        SuperscriptBox["p", 
         RowBox[{"-", "\[Alpha]"}]], ",", "\[Kappa]", ",", "d"}], "]"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "2"}], "}"}]}], "]"}], 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], "\[Alpha]"], 
      RowBox[{"CoupledLogarithm", "[", 
       RowBox[{
        SuperscriptBox["p", 
         RowBox[{"-", "\[Alpha]"}]], ",", "\[Kappa]", ",", "d"}], "]"}]}], 
     ",", "p"}], "]"}]], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8994486829460363`*^9, 3.899448690433544*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"f5e19671-0a96-4635-9685-02b6c8a92165"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"-", 
         FractionBox["1", "p"]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox["p", 
           RowBox[{"-", "\[Alpha]"}]], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{"\[Kappa]", "\[Equal]", "0"}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"d", "+", "\[Alpha]"}], ")"}], " ", "\[Kappa]"}]}], 
          RowBox[{"p", "+", 
           RowBox[{"d", " ", "p", " ", "\[Kappa]"}]}]]}], 
        RowBox[{
         RowBox[{
          SuperscriptBox["p", 
           RowBox[{"-", "\[Alpha]"}]], "\[GreaterEqual]", "0"}], "&&", 
         RowBox[{"\[Kappa]", "\[NotEqual]", "0"}]}]},
       {"Indeterminate", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.8994486922013807`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"bfd09329-0b00-4585-b2d7-fd62f277aac3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"couplingToRisk", "[", 
   RowBox[{"\[Kappa]", ",", "\[Alpha]", ",", "d"}], "]"}]}]], "Input",
 CellLabel->
  "In[109]:=",ExpressionUUID->"f4987f8e-5807-42d0-831f-2a167fcc7dbf"],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"\[Alpha]", " ", "\[Kappa]"}], 
   RowBox[{"1", "+", 
    RowBox[{"d", " ", "\[Kappa]"}]}]]}]], "Output",
 CellChangeTimes->{3.899456793202319*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"e683ee4c-a30d-4bb5-89dd-26d6af107a3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   FractionBox[
    RowBox[{"qToCoupling", "[", 
     RowBox[{"q", ",", "\[Alpha]"}], "]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"q", "-", "1"}], ")"}], "beta"}]], ")"}], 
  FractionBox["1", "\[Alpha]"]]], "Input",
 CellLabel->
  "In[110]:=",ExpressionUUID->"c82252fc-2523-4a0a-be36-d7c95581ec59"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "-", "q"}], 
     RowBox[{"beta", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "q", "+", "\[Alpha]"}], ")"}]}]]}], ")"}], 
  FractionBox["1", "\[Alpha]"]]], "Output",
 CellChangeTimes->{3.899456895755302*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"5cc99ccd-07d9-4643-8dd6-39449796c5cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["\[Kappa]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"couplingToq", "[", 
      RowBox[{"\[Kappa]", ",", "\[Alpha]"}], "]"}], "-", "1"}], ")"}], 
   SuperscriptBox["\[Sigma]", "\[Alpha]"]}]]], "Input",
 CellLabel->
  "In[111]:=",ExpressionUUID->"3394d068-030b-4851-812f-fda18df01874"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
   SuperscriptBox["\[Sigma]", 
    RowBox[{"-", "\[Alpha]"}]]}], "\[Alpha]"]], "Output",
 CellChangeTimes->{3.899457020444206*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"bdfed8dc-63d4-425b-bf49-4c2eaf388017"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"i", "=", "1"}], "N"], 
  FractionBox["1", 
   RowBox[{"\[Alpha]", " ", "N"}]], 
  RowBox[{"CoupledLogarithm", "[", 
   RowBox[{
    SuperscriptBox["p", 
     RowBox[{"-", "\[Alpha]"}]], ",", "\[Kappa]", ",", "d"}], 
   "]"}]}]], "Input",
 EmphasizeSyntaxErrors->True,
 CellLabel->
  "In[120]:=",ExpressionUUID->"82352115-c1e5-4f28-b5b0-9bd7c1c33d60"],

Cell[BoxData[
 TemplateBox[{
  "Syntax", "sntxi", 
   "\"Incomplete expression; more input is needed \\!\\(\\*RowBox[{\\\"\\\\\\\
\"\\\\\\\"\\\"}]\\).\"", 2, 120, 19, 31774377331651416585, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.899473285831658*^9},
 CellLabel->
  "During evaluation of \
In[120]:=",ExpressionUUID->"328ec849-4477-493f-9f75-ec5559ce3ec9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"i", "=", "1"}], "N"], 
  RowBox[{
   FractionBox["1", 
    RowBox[{"\[Alpha]", " ", "N"}]], 
   RowBox[{"CoupledLogarithm", "[", 
    RowBox[{
     SuperscriptBox["p", 
      RowBox[{"-", "\[Alpha]"}]], ",", "\[Kappa]", ",", "d"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.899473315339999*^9, 3.899473326854959*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"f27e4516-fe53-41f7-8a86-6ea2b4538775"],

Cell[BoxData[
 FractionBox[
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["p", 
      RowBox[{"-", "\[Alpha]"}]], "\[GreaterEqual]", "0"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"\[Kappa]", "\[NotEqual]", "0"}], ",", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["p", 
           RowBox[{"-", "\[Alpha]"}]], ")"}], 
         FractionBox["\[Kappa]", 
          RowBox[{"1", "+", 
           RowBox[{"d", " ", "\[Kappa]"}]}]]], "-", "1"}], "\[Kappa]"], ",", 
      RowBox[{"Log", "[", 
       SuperscriptBox["p", 
        RowBox[{"-", "\[Alpha]"}]], "]"}]}], "]"}], ",", "Undefined"}], "]"}],
   "\[Alpha]"]], "Output",
 CellChangeTimes->{3.899473328413327*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"13de0012-758c-44a3-b1e9-1d5d41a164e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"m", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", "1"}], ";", 
  RowBox[{
   RowBox[{"m", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", "2"}], ";"}]], "Input",
 CellChangeTimes->{{3.899474282364492*^9, 3.899474305897575*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"96b13264-55c3-4b65-9a63-9429377857cb"],

Cell[BoxData[
 TemplateBox[{
  "Set", "noval", 
   "\"Symbol \\!\\(\\*RowBox[{\\\"m\\\"}]\\) in part assignment does not have \
an immediate value.\"", 2, 126, 22, 31774377331651416585, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.899474308499934*^9},
 CellLabel->
  "During evaluation of \
In[126]:=",ExpressionUUID->"a8a184a5-e8fb-46ad-84a5-a8479ce46fc2"],

Cell[BoxData[
 TemplateBox[{
  "Set", "noval", 
   "\"Symbol \\!\\(\\*RowBox[{\\\"m\\\"}]\\) in part assignment does not have \
an immediate value.\"", 2, 126, 23, 31774377331651416585, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.899474308526408*^9},
 CellLabel->
  "During evaluation of \
In[126]:=",ExpressionUUID->"a357428e-c153-437d-8d66-c7eb7698d63d"]
}, Open  ]],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"m", "[", 
   RowBox[{"[", "i", "]"}], "]"}], 
  RowBox[{"-", "\[Alpha]"}]]], "Input",
 CellChangeTimes->{{3.899474272941017*^9, 
  3.899474276519412*^9}},ExpressionUUID->"9255097c-00f7-4114-909b-\
7944d0b9021c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"B", "\[Element]", 
  RowBox[{"Vectors", "[", 
   RowBox[{"N", ",", "Reals"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8994748800239143`*^9, 3.899474936761191*^9}, {
  3.899475114908842*^9, 3.899475115426547*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"fdbb1b36-c95d-4130-9d4c-7077dbc7521d"],

Cell[BoxData[
 RowBox[{"B", "\[Element]", 
  RowBox[{"Vectors", "[", 
   RowBox[{"N", ",", 
    TemplateBox[{},
     "Reals"]}], "]"}]}]], "Output",
 CellChangeTimes->{3.899474926594499*^9, 3.899475116174079*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"29e7e1bc-ea83-4470-a1a4-5acedc20ec5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"CoupledExponentialDistribution", "[", 
      RowBox[{"0", ",", "1", ",", 
       RowBox[{"-", "0.5"}]}], "]"}], ",", "x"}], "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.8998767846628103`*^9, 3.899876856368154*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"608905dd-baa3-4c57-88a0-828a109fc46d"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{3.899876861929781*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"0d6dd292-9097-4c66-8feb-428ed5e6af44"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         SqrtBox[
          RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}], 
        RowBox[{"\[Kappa]", "\[Equal]", "0"}]},
       {
        FractionBox[
         RowBox[{
          SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
          RowBox[{"Gamma", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Kappa]"}], 
            RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
         RowBox[{
          SqrtBox[
           RowBox[{"-", "\[Kappa]"}]], " ", 
          RowBox[{"Gamma", "[", 
           RowBox[{"1", "-", 
            FractionBox["1", 
             RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]], 
        RowBox[{"\[Kappa]", "<", "0"}]},
       {
        FractionBox[
         RowBox[{
          SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
          RowBox[{"Gamma", "[", 
           FractionBox["1", 
            RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
         RowBox[{
          SqrtBox["\[Kappa]"], " ", 
          RowBox[{"Gamma", "[", 
           FractionBox[
            RowBox[{"1", "+", "\[Kappa]"}], 
            RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Input",ExpressionUUID->"5c9a8287-4962-42fc-a0e0-\
c31495697623"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"\[Sigma]", " ", 
      RowBox[{"Beta", "[", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"2", "\[Kappa]"}]], ",", 
        FractionBox["1", "2"]}], "]"}]}], 
     SqrtBox["\[Kappa]"]], "===", 
    FractionBox[
     RowBox[{
      SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
      RowBox[{"Gamma", "[", 
       FractionBox["1", 
        RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
     RowBox[{
      SqrtBox["\[Kappa]"], " ", 
      RowBox[{"Gamma", "[", 
       FractionBox[
        RowBox[{"1", "+", "\[Kappa]"}], 
        RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899877176687089*^9, 3.899877246128687*^9}, 
   3.8998773004547777`*^9, {3.899878123559339*^9, 3.8998781889220133`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"b67738ce-3ebc-40e2-b1d5-612b8a55258e"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.899877259404339*^9, 3.899877302550449*^9, 
  3.8998781353379908`*^9, 3.899878189968874*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"e45fec5f-efec-44a4-9146-576677feb029"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SqrtBox["\[Kappa]"], 
    RowBox[{"Gamma", "[", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "\[Kappa]"}]], "+", 
      FractionBox["1", "2"]}], "]"}]}], 
   RowBox[{"\[Sigma]", " ", 
    RowBox[{"Gamma", "[", 
     FractionBox["1", 
      RowBox[{"2", "\[Kappa]"}]], "]"}], 
    RowBox[{"Gamma", "[", 
     FractionBox["1", "2"], "]"}]}]], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.899877316089435*^9, 3.899877317635334*^9}, {
  3.899877369626293*^9, 3.899877425363*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"6785a9a9-e275-4a21-98eb-b6d09644f6c7"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox["\[Kappa]"], " ", 
   RowBox[{"Gamma", "[", 
    FractionBox[
     RowBox[{"1", "+", "\[Kappa]"}], 
     RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
  RowBox[{
   SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
   RowBox[{"Gamma", "[", 
    FractionBox["1", 
     RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]], "Output",
 CellChangeTimes->{3.8998773183708687`*^9, 3.899877428058894*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"d51456fe-8c0a-4158-a0b1-ea8f5184c146"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
    RowBox[{"Gamma", "[", 
     FractionBox["1", 
      RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
   RowBox[{
    SqrtBox["\[Kappa]"], " ", 
    RowBox[{"Gamma", "[", 
     FractionBox[
      RowBox[{"1", "+", "\[Kappa]"}], 
      RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.899877332203957*^9, 3.899877333660705*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"2c0a6467-14e0-4c3d-a2cf-3cfa2915d3b4"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
   RowBox[{"Gamma", "[", 
    FractionBox["1", 
     RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
  RowBox[{
   SqrtBox["\[Kappa]"], " ", 
   RowBox[{"Gamma", "[", 
    FractionBox[
     RowBox[{"1", "+", "\[Kappa]"}], 
     RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]], "Output",
 CellChangeTimes->{3.899877334347395*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"7e037cb7-87a4-488a-bcda-ecd204b9b155"]
}, Open  ]],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
   RowBox[{"Gamma", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Kappa]"}], 
     RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
  RowBox[{
   SqrtBox[
    RowBox[{"-", "\[Kappa]"}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "-", 
     FractionBox["1", 
      RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]]], "Input",ExpressionUUID->\
"9b695e89-e28e-4a99-972f-5d178509463a"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
   RowBox[{"Gamma", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Kappa]"}], 
     RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
  RowBox[{
   SqrtBox[
    RowBox[{"-", "\[Kappa]"}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "-", 
     FractionBox["1", 
      RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]]], "Input",ExpressionUUID->\
"6262114f-54c6-4841-b1e9-bf659c71acc8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     FractionBox[
      SqrtBox["0.5"], 
      RowBox[{"2", " ", 
       RowBox[{"Beta", "[", 
        RowBox[{
         FractionBox["1", "1"], ",", 
         FractionBox["1", "2"]}], "]"}]}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"CoupledExponential", "[", 
        RowBox[{
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "-", "1"}], ")"}], "2"], 
          SuperscriptBox["2", "2"]], ",", 
         RowBox[{"-", "0.5"}]}], "]"}], ")"}], 
      FractionBox[
       RowBox[{"-", "1"}], "2"]]}], "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.899878402889345*^9, 3.899878459118969*^9}, {
  3.8998785086769333`*^9, 3.899878668913307*^9}, {3.899878804750113*^9, 
  3.899878850525667*^9}, {3.899880357167388*^9, 3.899880378660542*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"1718b858-7997-4483-8c9f-5324d2694f79"],

Cell[BoxData[
 RowBox[{"0.7853981633974484`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.899878563486003*^9, 3.8998786024585257`*^9}, {
   3.8998786490828733`*^9, 3.899878674735321*^9}, 3.8998788141010847`*^9, 
   3.8998788523610783`*^9, 3.899880384813414*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"2347f57a-82c1-486f-8611-843a1ffd7092"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "1.8284271247461"}], "3.8284271247461"], 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      FractionBox[
       SqrtBox["0.5"], 
       RowBox[{"2", " ", 
        RowBox[{"Beta", "[", 
         RowBox[{
          FractionBox["1", "1"], ",", 
          FractionBox["1", "2"]}], "]"}]}]], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"CoupledExponential", "[", 
         RowBox[{
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"x", "-", "1"}], ")"}], "2"], 
           SuperscriptBox["2", "2"]], ",", 
          RowBox[{"-", "0.5"}]}], "]"}], ")"}], 
       FractionBox[
        RowBox[{"-", "1"}], "2"]]}], ",", 
     RowBox[{
      RowBox[{"-", "1.8284271247461903"}], "<", "x", "<", 
      "3.8284271247461903"}]}], "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.899878895351544*^9, 3.899878921606266*^9}, 
   3.8998790025013742`*^9, {3.899879047050058*^9, 3.8998790791193457`*^9}, {
   3.8998791209407578`*^9, 3.89987923800642*^9}, {3.89988033379639*^9, 
   3.8998803383714037`*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"1fee98dd-93e2-4531-90a8-8ed9687b560f"],

Cell[BoxData["0.7853981633974482`"], "Output",
 CellChangeTimes->{
  3.899879005051458*^9, {3.899879058752884*^9, 3.899879086175454*^9}, {
   3.8998792307506313`*^9, 3.899879239923246*^9}, 3.899880344148315*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"47e35f0e-49e7-4101-899c-5ade70315ffb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"0.1767766952966369`", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"0.125`", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"]}]}], ")"}], 
     "0.5`"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1.8284271247461903"}], ",", "3.8284271247461903"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899879292297276*^9, 3.899879333542843*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"da6ed9ce-be8d-4755-a699-52bb69d54002"],

Cell[BoxData["0.7853981633974674`"], "Output",
 CellChangeTimes->{3.8998793352905416`*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"d4ccd8c0-4110-4928-8780-1bb19f3ece74"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQm8FfP7xwk/UlFCKirShiJLRaEobUgSaUElS1EpoVJUIkILKillTVEo
LVRIFC32UqlQ2dIiW/b59/7+X881nWbmzMyZOefce5/36zVy72zfc849z3y/
z/J5ju7Q7eJrCuy11149D9j1n4vb31qvR4/2vVsU3fVDy649r7+2a6erG3e9
udO1nXrU6rDPrl+23rXdtvdee+27619LURQlAP/++681c+ZMq379+hYmhO2J
J57wff7OnTutJk2amH8VRVGU9LFixQpr9OjRrvsfeOABq0uXLtaYMWOsGjVq
BLbvv/zyizmHf+OmR48e1l9//RX7fRRFUbKdDRs2WOedd57122+/+Tq+e/fu
WW3fX3/9dat9+/ZmzaEoipJf2bJli3XSSSdZH374oe9z0mHf33//feu6666z
1q9fv9vvP/jgA6t///7WypUrPc+/7bbbrJtvvtn3+BRFUfISf/zxh1WzZk3r
wQcfDHReOux77969rf3222+344cMGWI1aNDAKlOmjLV48WLP8//880/rtNNO
s4YPH+57jIqiKHmFoUOHWnXr1g3sx0iHfT/99NPNJuD/x68ehDVr1lgHHXSQ
9eWXXwY6T1EUJTfz3XffGds3e/bswOfGbd85Zt999zU+FuA+V1xxRSh/eqtW
rayWLVsGPk9RFCW30qFDB6t8+fKhbKaXfWfOvffeeztunOO2zz5Xf/XVV82x
EyZMsAYOHGg1a9YsdD7MwoULzbXefPPNUOcriqKkA2zc33//nfJ1li5damzq
/fffH+p8L/tOvPbbb7/dY1u3bp05Z+3atY77OU/A9878/YQTTjDn3H333aFf
K1SrVs068cQTI3nvFEVRouaff/6xypUrZ2wVPnO/2xtvvLHHtZo3b24VLFjQ
2rZtW6ixxO2fYS5/xhlnWBs3bjR2Puw6QyBnn3u/9NJLoa+hKIoSF1OnTrWO
O+44Y6+DbJs3b97tOr/++qux7RdccEHosXTt2tXYy4kTJ/o+x699F997nz59
zM+XX365OY+c9rBs3brVXAMfvqIoSrZRq1atQPbUDZ4T2LoBAwaEvgYxS65x
7733+j7Hr30X3/trr71mfl6yZIn5mbXIjh07rLlz55p/g3LMMcdYxYoVc/Xj
f/bZZ1bnzp2tr7/+OvC1FUVRwkKMsHTp0ianO1XatGlj7OUrr7wS6vxBgwZZ
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
5s0z9av0U6fGyd43MVXS+Tn/H9Oy55E=
    "], {{0, 45.}, {188., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{188., 45.},
  PlotRange->{{0, 188.}, {0, 45.}}]], "Input",ExpressionUUID->"424ed220-e85f-\
4211-bd40-d8c29fb5ce09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "1.8284271247461"}], "3.8284271247461"], 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{
          SqrtBox["0.5"], 
          RowBox[{
           RowBox[{"(", 
            FractionBox[
             RowBox[{"1", "+", "0.5"}], "1"], ")"}], "!"}]}], 
         RowBox[{
          SqrtBox["\[Pi]"], "2", 
          RowBox[{"(", 
           RowBox[{"1", "+", "0.5"}], ")"}], 
          RowBox[{
           RowBox[{"(", "1", ")"}], "!"}]}]], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"CoupledExponential", "[", 
           RowBox[{
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"x", "-", "1"}], ")"}], "2"], 
             SuperscriptBox["2", "2"]], ",", 
            RowBox[{"-", "0.5"}]}], "]"}], ")"}], 
         FractionBox[
          RowBox[{"-", "1"}], "2"]]}], ",", "x"}], "]"}], ",", 
     RowBox[{
      RowBox[{"-", "1.8284271247461903"}], "<", "x", "<", 
      "3.8284271247461903"}]}], "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.899879517130381*^9, 3.8998795216392803`*^9}, {
  3.8998795645602818`*^9, 3.899879618071805*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"22f1a2b3-360b-48b4-be31-5df723cecc68"],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "1.8284271247461`"}], "3.8284271247461`"], 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"0.1767766952966369`", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"0.125`", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"]}]}], ")"}], 
       "0.5`"]}], ",", "x"}], "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{3.899879620870701*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"ae512aec-aac1-4dca-8fed-2f3e6461744b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"CoupledExponential", "[", 
          RowBox[{
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", "x", ")"}], "2"], 
            SuperscriptBox["\[Sigma]", "2"]], ",", "\[Kappa]"}], "]"}], ")"}], 
        FractionBox[
         RowBox[{"-", "1"}], "2"]], ",", 
       RowBox[{
        RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
        RowBox[{
         RowBox[{"-", "1"}], "<", "\[Kappa]", "<", "0"}]}]}], "]"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], ",", 
   RowBox[{
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{
     RowBox[{"-", "1"}], "<", "\[Kappa]", "<", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899879681675503*^9, 3.8998797013734426`*^9}, {
  3.899879735168542*^9, 3.899879763365571*^9}, {3.8998798240142803`*^9, 
  3.899879825349517*^9}, {3.899879877180668*^9, 3.899879878075753*^9}, {
  3.899879927540818*^9, 3.899880004667004*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"2e11e8e4-a6c8-49f1-be9b-e86f478b3906"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
   RowBox[{"Gamma", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Kappa]"}], 
     RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
  RowBox[{
   SqrtBox[
    RowBox[{"-", "\[Kappa]"}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "-", 
     FractionBox["1", 
      RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]]], "Output",
 CellChangeTimes->{3.899879980300159*^9, 3.899880024912866*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"1a503c79-7adb-43a9-bc4b-3766513a7d0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", "\[Kappa]"}], 
   RowBox[{"2", "\[Kappa]"}]]}]], "Input",
 CellChangeTimes->{{3.899880164499309*^9, 3.899880226136702*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"1071b82b-ca14-4aae-b888-cc483f927556"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", "\[Kappa]"}], 
   RowBox[{"2", " ", "\[Kappa]"}]]}]], "Output",
 CellChangeTimes->{3.899880189479006*^9, 3.899880227406352*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"461704cd-361a-44fa-8d9f-e12f0a8369ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "1.8284271247461`"}], "3.8284271247461`"], 
  RowBox[{"0.1767766952966369`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"0.125`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", "x"}], ")"}], "2"]}]}], ")"}], "0.5`"], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.899880282189019*^9, 3.899880289702633*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"c2a9d9df-4642-4355-a3cf-5e68bc56958e"],

Cell[BoxData["0.7853981633974482`"], "Output",
 CellChangeTimes->{3.899880292511503*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"bc76789d-44ad-4812-acf0-f35c43890693"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox["0.5"], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{"1", "+", 
         FractionBox["1", "1"]}], "]"}]}], 
      RowBox[{"2", " ", 
       SqrtBox["\[Pi]"], "  ", 
       RowBox[{"Gamma", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "1"}], "-", "0.5"}], 
         RowBox[{"-", "1"}]], "]"}]}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"CoupledExponential", "[", 
        RowBox[{
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"x", "-", "1"}], ")"}], "2"], 
          SuperscriptBox["2", "2"]], ",", 
         RowBox[{"-", "0.5"}]}], "]"}], ")"}], 
      FractionBox[
       RowBox[{"-", "1"}], "2"]]}], "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.899880519422413*^9, 3.899880581914163*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"ef33ab40-9ae8-4eb2-bb8f-2d126b0047c3"],

Cell[BoxData[
 RowBox[{"1.`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.899880591452383*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"6b0090aa-5d9a-4137-bb48-8929002d6c94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{" ", 
       RowBox[{"Beta", "[", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"2", "\[Kappa]"}]], ",", 
         FractionBox["1", "2"]}], "]"}]}], 
      SqrtBox["\[Kappa]"]], ",", 
     FractionBox[
      RowBox[{
       SqrtBox["\[Pi]"], " ", 
       RowBox[{"Gamma", "[", 
        FractionBox["1", 
         RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
      RowBox[{
       SqrtBox["\[Kappa]"], " ", 
       RowBox[{"Gamma", "[", 
        FractionBox[
         RowBox[{"1", "+", "\[Kappa]"}], 
         RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]}], "}"}], "/.", 
   RowBox[{"\[Kappa]", "->", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2"}], "}"}]}]}], "//", 
  "N"}]], "Input",
 CellChangeTimes->{{3.89988079415419*^9, 3.899880878472135*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"04a99da5-0078-4c18-8587-3f99ed632138"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "2.569978034930492`", ",", "2.82842712474619`", ",", "3.141592653589793`",
      ",", "3.7081493546027438`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2.569978034930492`", ",", "2.82842712474619`", ",", "3.141592653589793`",
      ",", "3.7081493546027438`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8998808338768597`*^9, 3.899880879364869*^9}},
 CellLabel->
  "Out[172]=",ExpressionUUID->"7b23c4b8-c459-4c37-b488-df7849d2494f"]
}, Open  ]],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
   RowBox[{"Gamma", "[", 
    FractionBox[
     RowBox[{"1", "+", "\[Kappa]"}], 
     RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
  RowBox[{
   SqrtBox["\[Kappa]"], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "+", 
     FractionBox["1", 
      RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]]], "Input",
 CellChangeTimes->{{3.89988096793749*^9, 3.899880979985166*^9}, {
  3.899881040828971*^9, 
  3.8998810521952267`*^9}},ExpressionUUID->"cab787b3-b30f-4f81-be90-\
23d40a86285b"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox["\[Pi]"], " ", "\[Sigma]", " ", 
   RowBox[{"Gamma", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Kappa]"}], 
     RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
  RowBox[{
   SqrtBox[
    RowBox[{"-", "\[Kappa]"}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "-", 
     FractionBox["1", 
      RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]]], "Input",
 CellChangeTimes->{
  3.8998811155024967`*^9},ExpressionUUID->"91ffc0f6-43c6-42a8-bc33-\
9597c73823a5"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"Gamma", "[", 
    FractionBox["1", "2"], "]"}], " ", "\[Sigma]", " ", 
   RowBox[{"Gamma", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Kappa]"}], 
     RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}], 
  RowBox[{
   SqrtBox[
    RowBox[{"-", "\[Kappa]"}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "-", 
     FractionBox["1", 
      RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}]]], "Input",
 CellChangeTimes->{{3.8998811251168327`*^9, 
  3.899881136045474*^9}},ExpressionUUID->"7be4b41e-5ee5-4bc2-bf76-\
a6a0c37f19ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Kappa]"}], 
    RowBox[{"2", " ", "\[Kappa]"}]]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.899881153200725*^9, 3.899881169485846*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"9704fde1-a16d-4c58-8466-56a74480c48b"],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox["1", 
   RowBox[{"2", " ", "\[Kappa]"}]]}]], "Output",
 CellChangeTimes->{{3.899881164970091*^9, 3.899881170078396*^9}},
 CellLabel->
  "Out[175]=",ExpressionUUID->"5adb0c5b-78b5-483b-ad45-9e86355a3765"]
}, Open  ]],

Cell[BoxData[
 FractionBox[
  RowBox[{" ", 
   RowBox[{"\[Sigma]", " ", 
    RowBox[{"Beta", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Kappa]"}], 
       RowBox[{"2", " ", "\[Kappa]"}]], ",", 
      FractionBox["1", "2"]}], "]"}]}]}], 
  SqrtBox[
   RowBox[{"-", "\[Kappa]"}]]]], "Input",
 CellChangeTimes->{{3.8998812006906147`*^9, 
  3.8998812280017147`*^9}},ExpressionUUID->"65470693-3657-4494-9ba2-\
79da4987949a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["CDF of Coupled Distributions", "Subsection",
 CellChangeTimes->{{3.899960874237413*^9, 
  3.8999608855752296`*^9}},ExpressionUUID->"c2c2f260-dcae-4da4-9aaa-\
5001378fd582"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CDF", "[", 
   RowBox[{
    RowBox[{"CoupledNormalDistribution", "[", 
     RowBox[{"\[Mu]", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", "x"}], 
   "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8999609348544807`*^9, 3.8999609593607483`*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"48a8177c-2c16-426e-92a1-c113077cd9ad"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.899961957155332*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"43f12175-de06-4f52-bf66-c9ed205b0b52"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"StudentTDistribution", "[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]", ",", 
       RowBox[{"1", "/", "\[Kappa]"}]}], "]"}], ",", "x"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"u", "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900694325408918*^9, 3.900694366942824*^9}, {
  3.900694430550591*^9, 3.900694475770262*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"3052091d-697e-492d-b79e-8b291ba7943b"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"BetaRegularized", "[", 
          RowBox[{
           FractionBox[
            SuperscriptBox["\[Sigma]", "2"], 
            RowBox[{
             RowBox[{"\[Kappa]", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
             SuperscriptBox["\[Sigma]", "2"]}]], ",", 
           FractionBox["1", 
            RowBox[{"2", " ", "\[Kappa]"}]], ",", 
           FractionBox["1", "2"]}], "]"}]}], 
        RowBox[{"x", "\[LessEqual]", "\[Mu]"}]},
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"BetaRegularized", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Kappa]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], 
              RowBox[{
               RowBox[{"\[Kappa]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
               SuperscriptBox["\[Sigma]", "2"]}]], ",", 
             FractionBox["1", "2"], ",", 
             FractionBox["1", 
              RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.9006943689798183`*^9, 3.9006944803025312`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"9efcf3bc-8a10-4294-abb2-afa9c12122ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"StudentTDistribution", "[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]", ",", 
       RowBox[{"1", "/", "\[Kappa]"}]}], "]"}], ",", "x"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "<", "\[Kappa]", "<", "0"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"u", "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9006945761226463`*^9, 3.900694580389017*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"23ce5b18-b53f-4cc4-941c-88891c74e484"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"BetaRegularized", "[", 
          RowBox[{
           FractionBox[
            SuperscriptBox["\[Sigma]", "2"], 
            RowBox[{
             RowBox[{"\[Kappa]", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
             SuperscriptBox["\[Sigma]", "2"]}]], ",", 
           FractionBox["1", 
            RowBox[{"2", " ", "\[Kappa]"}]], ",", 
           FractionBox["1", "2"]}], "]"}]}], 
        RowBox[{"x", "\[LessEqual]", "\[Mu]"}]},
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"BetaRegularized", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Kappa]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], 
              RowBox[{
               RowBox[{"\[Kappa]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
               SuperscriptBox["\[Sigma]", "2"]}]], ",", 
             FractionBox["1", "2"], ",", 
             FractionBox["1", 
              RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.9006945839598618`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"aeb58b2d-0314-46f0-8f8d-c3a49ac0ddba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "x"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Kappa]", "==", "0"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"u", "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9006946273571987`*^9, 3.900694664144236*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"8a2ff80c-7139-489c-830e-7c5d5d2a431a"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"Erfc", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "x"}], "+", "\[Mu]"}], 
    RowBox[{
     SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}]], "Output",
 CellChangeTimes->{3.900694630008079*^9, 3.900694666076282*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"46884b2f-e6bc-4211-9d23-cd1ef8c6b02b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"StudentTDistribution", "[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]", ",", 
       RowBox[{"1", "/", "\[Kappa]"}]}], "]"}], ",", "x"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"u", "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900694325408918*^9, 3.900694366942824*^9}, {
  3.900694430550591*^9, 3.900694475770262*^9}, {3.900695836332883*^9, 
  3.900695837121291*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"b4b84bab-f723-4dbd-bd56-758ccdd90078"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox["\[Kappa]"], " ", 
   SuperscriptBox["\[Sigma]", 
    FractionBox["1", "\[Kappa]"]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"\[Kappa]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
       SuperscriptBox["\[Sigma]", "2"]}]], ")"}], 
    FractionBox[
     RowBox[{"1", "+", "\[Kappa]"}], 
     RowBox[{"2", " ", "\[Kappa]"}]]]}], 
  RowBox[{"Beta", "[", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", "\[Kappa]"}]], ",", 
    FractionBox["1", "2"]}], "]"}]]], "Output",
 CellChangeTimes->{3.9006943689798183`*^9, 3.9006944803025312`*^9, 
  3.9006958388031607`*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"91ea3310-f5a9-4fb1-a81b-4570a8680d27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "<", "\[Kappa]", "<", "0"}], ",", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"StudentTDistribution", "[", 
        RowBox[{"\[Mu]", ",", "\[Sigma]", ",", 
         RowBox[{"1", "/", "\[Kappa]"}]}], "]"}], ",", "x"}], "]"}]}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "<", "\[Kappa]", "<", "0"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"u", "\[Element]", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9006945761226463`*^9, 3.900694580389017*^9}, {
  3.9006958201309757`*^9, 3.9006958210706873`*^9}, {3.900695924126742*^9, 
  3.900695942949635*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"ba2e1ab1-bbeb-4a38-b74f-e7ae00f4e800"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     SuperscriptBox["\[Sigma]", "2"], 
     RowBox[{
      RowBox[{"\[Kappa]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "+", 
      SuperscriptBox["\[Sigma]", "2"]}]], ")"}], 
   FractionBox[
    RowBox[{"1", "+", "\[Kappa]"}], 
    RowBox[{"2", " ", "\[Kappa]"}]]], 
  RowBox[{
   SqrtBox[
    FractionBox["1", "\[Kappa]"]], " ", "\[Sigma]", " ", 
   RowBox[{"Beta", "[", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "\[Kappa]"}]], ",", 
     FractionBox["1", "2"]}], "]"}]}]]], "Output",
 CellChangeTimes->{3.9006945839598618`*^9, 3.900695823026371*^9, 
  3.900695947891511*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"4ddb95c3-f099-4dd4-892b-121a1dad31e0"]
}, Open  ]],

Cell["CDF of Student\[CloseCurlyQuote]s t", "Text",
 CellChangeTimes->{{3.8999619606499166`*^9, 
  3.899961970828418*^9}},ExpressionUUID->"d740445e-55e8-4904-bbcd-\
e5e6d35617c9"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"BetaRegularized", "[", 
          RowBox[{
           FractionBox["\[Nu]", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Abs", "[", 
               FractionBox[
                RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], "2"], "+", 
             "\[Nu]"}]], ",", 
           FractionBox["\[Nu]", "2"], ",", 
           FractionBox["1", "2"]}], "]"}]}], 
        RowBox[{
         RowBox[{"Abs", "[", 
          FractionBox[
           RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], "\[LessEqual]", 
         "0"}]},
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"BetaRegularized", "[", 
            RowBox[{
             FractionBox[
              SuperscriptBox["x", "2"], 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 FractionBox[
                  RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], "2"], "+", 
               "\[Nu]"}]], ",", 
             FractionBox["1", "2"], ",", 
             FractionBox["\[Nu]", "2"]}], "]"}]}], ")"}]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Input",
 CellChangeTimes->{{3.89997279173741*^9, 
  3.899972800868339*^9}},ExpressionUUID->"0208b07d-24f3-4376-ba2b-\
32692f09dca8"],

Cell["CDF of Coupled Distribution ", "Text",
 CellChangeTimes->{{3.899966212351811*^9, 3.899966219757918*^9}, {
   3.8999664115729713`*^9, 3.8999664186924458`*^9}, {3.8999666599201117`*^9, 
   3.899966661156646*^9}, {3.899972096207407*^9, 3.899972109161272*^9}, 
   3.899972695568274*^9},ExpressionUUID->"26317a3d-1018-4b68-b7b9-\
4a59a5713eb9"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"BetaRegularized", "[", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"1", "+", 
             RowBox[{"\[Kappa]", " ", 
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                FractionBox[
                 RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
               "\[Alpha]"]}]}]], ",", 
           FractionBox["1", 
            RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
           FractionBox["1", "\[Alpha]"]}], "]"}]}], 
        RowBox[{
         RowBox[{"Abs", "[", 
          FractionBox[
           RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], "\[LessEqual]", 
         "0"}]},
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"BetaRegularized", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Kappa]", " ", 
               SuperscriptBox["x", "2"]}], 
              RowBox[{"1", "+", 
               RowBox[{"\[Kappa]", " ", 
                SuperscriptBox[
                 RowBox[{"Abs", "[", 
                  FractionBox[
                   RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                 "\[Alpha]"]}]}]], ",", 
             FractionBox["1", "\[Alpha]"], ",", 
             FractionBox["1", 
              RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Input",
 CellChangeTimes->{{3.899972719416938*^9, 3.899972768522933*^9}, {
  3.899972814539716*^9, 
  3.899972869842372*^9}},ExpressionUUID->"126ab094-f7c3-44be-a64e-\
e048b1b39882"],

Cell["Converted to Coupled Distribution and using absolute value", "Text",
 CellChangeTimes->{{3.899961980556624*^9, 3.899961989296883*^9}, {
  3.8999651249724207`*^9, 
  3.899965130209923*^9}},ExpressionUUID->"7a0005fb-e634-4838-910a-\
494712ec473d"],

Cell["", "Text",
 CellChangeTimes->{{3.89996395222328*^9, 3.8999639644589167`*^9}, {
   3.899964006665704*^9, 3.899964010076275*^9}, 
   3.8999640966399307`*^9},ExpressionUUID->"8d4b5a5d-0271-452a-a14c-\
c7c66db42573"],

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"BetaRegularized", "[", 
            RowBox[{
             FractionBox["1", 
              RowBox[{"1", "+", 
               RowBox[{"\[Kappa]", " ", 
                SuperscriptBox["x", "\[Alpha]"]}]}]], ",", 
             FractionBox["1", 
              RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
             FractionBox["1", "\[Alpha]"]}], "]"}]}], 
          RowBox[{"x", "\[LessEqual]", "0"}]},
         {
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"BetaRegularized", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"\[Kappa]", " ", 
                 SuperscriptBox["x", "\[Alpha]"]}], 
                RowBox[{"1", "+", " ", 
                 RowBox[{"\[Kappa]", " ", 
                  SuperscriptBox["x", "\[Alpha]"]}]}]], ",", 
               FractionBox["1", "\[Alpha]"], ",", 
               FractionBox["1", 
                RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.899963969687518*^9, 3.899963975499406*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"526dd0a7-9f18-41fa-92e2-bb97ba215016"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            SuperscriptBox["x", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Alpha]"}]], " ", "\[Alpha]", " ", 
            "\[Kappa]", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox["1", 
               RowBox[{"1", "+", 
                RowBox[{
                 SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]], ")"}], 
             RowBox[{"1", "+", 
              FractionBox["1", 
               RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox["1", 
                RowBox[{"1", "+", 
                 RowBox[{
                  SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]]}], 
              ")"}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              FractionBox["1", "\[Alpha]"]}]]}], 
           RowBox[{"2", " ", 
            RowBox[{"Beta", "[", 
             RowBox[{
              FractionBox["1", 
               RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
              FractionBox["1", "\[Alpha]"]}], "]"}]}]]}], 
         RowBox[{"x", "<", "0"}]},
        {
         FractionBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{
               SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], 
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]], ")"}], 
            
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             FractionBox["1", "\[Alpha]"]}]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], 
               RowBox[{"1", "+", 
                RowBox[{
                 SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]]}], 
             ")"}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             FractionBox["1", 
              RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                SuperscriptBox["x", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"2", " ", "\[Alpha]"}]}]], " ", "\[Alpha]", " ", 
                SuperscriptBox["\[Kappa]", "2"]}], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{
                   SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}], 
                 ")"}], "2"]]}], "+", 
             FractionBox[
              RowBox[{
               SuperscriptBox["x", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Alpha]"}]], " ", "\[Alpha]", " ",
                "\[Kappa]"}], 
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]]}], 
            ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"Beta", "[", 
            RowBox[{
             FractionBox["1", "\[Alpha]"], ",", 
             FractionBox["1", 
              RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}]], 
         RowBox[{"x", ">", "0"}]},
        {"Indeterminate", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}},
       Selectable->True]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False,
   StripWrapperBoxes->True], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.899964105767024*^9, 3.89996410790405*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"0d91d143-d4a2-4b63-970a-82a6df6748fd"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{"\[Alpha]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", 
             RowBox[{"1", "+", 
              RowBox[{
               SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]], ")"}], 
           FractionBox["1", 
            RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox[
             RowBox[{
              SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], 
             RowBox[{"1", "+", 
              RowBox[{
               SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]], ")"}], 
           FractionBox["1", "\[Alpha]"]]}], 
         RowBox[{"2", " ", "x", " ", 
          RowBox[{"Beta", "[", 
           RowBox[{
            FractionBox["1", "\[Alpha]"], ",", 
            FractionBox["1", 
             RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}]], 
        RowBox[{"x", ">", "0"}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[Alpha]", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["1", 
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]], ")"}], 
            
            FractionBox["1", 
             RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{
               SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], 
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]], ")"}], 
            
            FractionBox["1", "\[Alpha]"]]}], 
          RowBox[{"2", " ", "x", " ", 
           RowBox[{"Beta", "[", 
            RowBox[{
             FractionBox["1", 
              RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
             FractionBox["1", "\[Alpha]"]}], "]"}]}]]}], 
        RowBox[{"x", "<", "0"}]},
       {"Indeterminate", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.899964109580925*^9},
 CellLabel->
  "Out[189]=",ExpressionUUID->"d4c9dbea-d513-4877-8166-538c397912bd"]
}, Open  ]],

Cell[TextData[{
 "Substitute x -> ",
 Cell[BoxData[
  RowBox[{"Abs", "[", 
   FractionBox[
    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}]],
  CellChangeTimes->{{3.899965684349928*^9, 3.8999657142050037`*^9}, {
   3.899965750421459*^9, 3.899965766569949*^9}, {3.899965801970746*^9, 
   3.899965807925297*^9}},ExpressionUUID->
  "d3f0bfa5-20a9-4b28-8a4f-e3a49041574a"],
 "; see below for confirmation that no additional normalization is needed."
}], "Text",
 CellChangeTimes->{{3.899965896786387*^9, 3.899965920732954*^9}, {
  3.899965976979583*^9, 
  3.8999659837151213`*^9}},ExpressionUUID->"af396baa-ab25-42a2-852e-\
bbd2b1aea768"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Alpha]", " ", 
   SuperscriptBox["\[Kappa]", 
    FractionBox["1", "\[Alpha]"]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Abs", "[", 
         FractionBox[
          RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], "\[Alpha]"], " ", 
       "\[Kappa]"}]}], ")"}], 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"\[Alpha]", " "}]]}], 
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", "\[Kappa]"], "+", "1"}], ")"}]}]], " "}], 
  RowBox[{"2", "  ", 
   RowBox[{"Beta", "[", 
    RowBox[{
     FractionBox["1", "\[Alpha]"], ",", 
     FractionBox["1", 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}]]], "Input",
 CellChangeTimes->{{3.899964192358034*^9, 3.899964282650388*^9}, {
   3.899964341880495*^9, 3.899964354663583*^9}, 
   3.899966017920621*^9},ExpressionUUID->"32f118fa-f27f-4232-a171-\
6da028d74ddb"],

Cell["\<\
Confirmation of simplification to generalized Pareto and Student\
\[CloseCurlyQuote]s t\
\>", "Text",
 CellChangeTimes->{{3.89996605917922*^9, 
  3.8999660750952997`*^9}},ExpressionUUID->"f01cd0d8-d8c0-4df7-8d76-\
32d4b6e90beb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["x", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]"}]], " ", "\[Alpha]", " ", 
             "\[Kappa]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["1", 
                RowBox[{"1", "+", 
                 RowBox[{
                  SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]], 
               ")"}], 
              RowBox[{"1", "+", 
               FractionBox["1", 
                RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox["1", 
                 RowBox[{"1", "+", 
                  RowBox[{
                   SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]]}], 
               ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               FractionBox["1", "\[Alpha]"]}]]}], 
            RowBox[{"2", " ", 
             RowBox[{"Beta", "[", 
              RowBox[{
               FractionBox["1", 
                RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
               FractionBox["1", "\[Alpha]"]}], "]"}]}]]}], 
          RowBox[{"x", "<", "0"}]},
         {
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], 
               RowBox[{"1", "+", 
                RowBox[{
                 SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]], ")"}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              FractionBox["1", "\[Alpha]"]}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], 
                RowBox[{"1", "+", 
                 RowBox[{
                  SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]]}], 
              ")"}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              FractionBox["1", 
               RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["x", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", "\[Alpha]"}]}]], " ", "\[Alpha]", " ", 
                 SuperscriptBox["\[Kappa]", "2"]}], 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{
                    SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}], 
                  ")"}], "2"]]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["x", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Alpha]"}]], " ", "\[Alpha]", 
                " ", "\[Kappa]"}], 
               RowBox[{"1", "+", 
                RowBox[{
                 SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]]}], 
             ")"}]}], 
           RowBox[{"2", " ", 
            RowBox[{"Beta", "[", 
             RowBox[{
              FractionBox["1", "\[Alpha]"], ",", 
              FractionBox["1", 
               RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}]], 
          RowBox[{"x", ">", "0"}]},
         {"Indeterminate", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], "/.", 
   RowBox[{"\[Alpha]", "->", "1"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.89996402864544*^9, 3.899964037080327*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"373980b8-2ce6-43b2-848b-905c5c65500d"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["1", 
            RowBox[{"1", "+", 
             RowBox[{"x", " ", "\[Kappa]"}]}]], ")"}], 
          RowBox[{"1", "+", 
           FractionBox["1", "\[Kappa]"]}]]}], 
        RowBox[{"x", ">", "0"}]},
       {
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["1", 
            RowBox[{"1", "+", 
             RowBox[{"x", " ", "\[Kappa]"}]}]], ")"}], 
          RowBox[{"1", "+", 
           FractionBox["1", "\[Kappa]"]}]]}], 
        RowBox[{"x", "<", "0"}]},
       {"Indeterminate", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.899964038523603*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"c1d1abb0-34ca-4f48-8fd3-ee78130d35a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{"-", 
           FractionBox[
            RowBox[{
             SuperscriptBox["x", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Alpha]"}]], " ", "\[Alpha]", " ", 
             "\[Kappa]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["1", 
                RowBox[{"1", "+", 
                 RowBox[{
                  SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]], 
               ")"}], 
              RowBox[{"1", "+", 
               FractionBox["1", 
                RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox["1", 
                 RowBox[{"1", "+", 
                  RowBox[{
                   SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]]}], 
               ")"}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               FractionBox["1", "\[Alpha]"]}]]}], 
            RowBox[{"2", " ", 
             RowBox[{"Beta", "[", 
              RowBox[{
               FractionBox["1", 
                RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
               FractionBox["1", "\[Alpha]"]}], "]"}]}]]}], 
          RowBox[{"x", "<", "0"}]},
         {
          FractionBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], 
               RowBox[{"1", "+", 
                RowBox[{
                 SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]], ")"}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              FractionBox["1", "\[Alpha]"]}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], 
                RowBox[{"1", "+", 
                 RowBox[{
                  SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]]}], 
              ")"}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              FractionBox["1", 
               RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["x", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", "\[Alpha]"}]}]], " ", "\[Alpha]", " ", 
                 SuperscriptBox["\[Kappa]", "2"]}], 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   RowBox[{
                    SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}], 
                  ")"}], "2"]]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["x", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Alpha]"}]], " ", "\[Alpha]", 
                " ", "\[Kappa]"}], 
               RowBox[{"1", "+", 
                RowBox[{
                 SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]]}], 
             ")"}]}], 
           RowBox[{"2", " ", 
            RowBox[{"Beta", "[", 
             RowBox[{
              FractionBox["1", "\[Alpha]"], ",", 
              FractionBox["1", 
               RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}]], 
          RowBox[{"x", ">", "0"}]},
         {"Indeterminate", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], "/.", 
   RowBox[{"\[Alpha]", "->", "2"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.89996405637083*^9, 3.899964056468343*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"28e7f6e6-72fe-4486-8ddf-a5098444665e"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", 
             RowBox[{"1", "+", 
              RowBox[{
               SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}]], ")"}], 
           RowBox[{
            FractionBox["1", "2"], "/", "\[Kappa]"}]], " ", 
          SqrtBox[
           FractionBox["\[Kappa]", 
            RowBox[{"1", "+", 
             RowBox[{
              SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}]]]}], 
         RowBox[{"Beta", "[", 
          RowBox[{
           FractionBox["1", "2"], ",", 
           FractionBox["1", 
            RowBox[{"2", " ", "\[Kappa]"}]]}], "]"}]], 
        RowBox[{"x", ">", "0"}]},
       {
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", 
             RowBox[{"1", "+", 
              RowBox[{
               SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}]], ")"}], 
           RowBox[{
            FractionBox["1", "2"], "/", "\[Kappa]"}]], " ", 
          SqrtBox[
           FractionBox["\[Kappa]", 
            RowBox[{"1", "+", 
             RowBox[{
              SuperscriptBox["x", "2"], " ", "\[Kappa]"}]}]]]}], 
         RowBox[{"Beta", "[", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"2", " ", "\[Kappa]"}]], ",", 
           FractionBox["1", "2"]}], "]"}]], 
        RowBox[{"x", "<", "0"}]},
       {"Indeterminate", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.89996405846404*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"aa25b0a3-3dd7-465a-9aa1-0dfc28205630"]
}, Open  ]],

Cell[TextData[{
 "Confirmation that CDF still goes to 1 at infinity with substitution of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    FractionBox[
     RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "|"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "674867c2-a1ae-4fce-9f7b-144a497ac7d1"],
 " "
}], "Text",
 CellChangeTimes->{{3.899964486277706*^9, 3.899964491700871*^9}, {
  3.8999649938472357`*^9, 3.899965024923389*^9}, {3.8999660935775414`*^9, 
  3.899966166429303*^9}},ExpressionUUID->"76d82a0f-49b6-4ec4-9f00-\
60ef94a2d9ac"],

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"BetaRegularized", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"\[Kappa]", " ", 
          SuperscriptBox[
           FormBox[
            RowBox[{"|", 
             FractionBox[
              RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "|"}],
            TraditionalForm], "\[Alpha]"]}], 
         RowBox[{"1", "+", " ", 
          RowBox[{"\[Kappa]", " ", 
           SuperscriptBox[
            FormBox[
             RowBox[{"|", 
              FractionBox[
               RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "|"}],
             TraditionalForm], "\[Alpha]"]}]}]], ",", 
        FractionBox["1", "\[Alpha]"], ",", 
        FractionBox["1", 
         RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], ",", 
   RowBox[{"x", "->", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899964506981007*^9, 3.899964527103503*^9}, {
  3.899965032820421*^9, 3.8999650349490643`*^9}, {3.899965078129881*^9, 
  3.899965093665004*^9}},ExpressionUUID->"863a492e-7143-4627-9979-\
9193a02f9a61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"BetaRegularized", "[", 
      RowBox[{"1", ",", 
       FractionBox["1", "\[Alpha]"], ",", 
       FractionBox["1", 
        RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8999649307818613`*^9, 3.899964935688298*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"a08ccb23-5877-492e-9017-174501b5d469"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.899964916710355*^9, 3.8999649364179783`*^9}},
 CellLabel->
  "Out[191]=",ExpressionUUID->"67f23aea-d402-48e1-b90f-9a6a3acfa11f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Abs", "[", 
     FractionBox[
      RowBox[{"x", "+", "3"}], "2"], "]"}], "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899966472887691*^9, 3.89996659866884*^9}, {
  3.899966637436697*^9, 3.899966643946518*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"b99d5b32-3cb2-4193-8d12-0fa71369cba6"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
qZWkOfn/v4JoXqofXZYzJ/8D3ebWMg==
       "]]},
     Annotation[#, "Charting`Private`Tag$2545532#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {0., 42.24999734693882}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.899966506370228*^9, 3.899966599224875*^9}, {
  3.89996663831149*^9, 3.899966644602805*^9}},
 CellLabel->
  "Out[208]=",ExpressionUUID->"d4f9a08a-6ba2-4957-8063-794a1fd37167"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"BetaRegularized", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"\[Kappa]", " ", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              FractionBox[
               RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], "\[Alpha]"]}], 
           RowBox[{"1", "+", " ", 
            RowBox[{"\[Kappa]", " ", 
             SuperscriptBox[
              RowBox[{"Abs", "[", 
               FractionBox[
                RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
              "\[Alpha]"]}]}]], ",", 
          FractionBox["1", "\[Alpha]"], ",", 
          FractionBox["1", 
           RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], ",", 
     "x"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], "<", "\[Mu]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Alpha]", "<", "2"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899966995352022*^9, 3.899967067941987*^9}, {
  3.899971283508595*^9, 3.899971301174286*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"dc7654a6-cb5b-4e78-8e67-24723dbfa122"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Alpha]", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["\[Kappa]", 
      RowBox[{"\[Kappa]", "+", 
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Alpha]"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["1", 
           RowBox[{"Abs", "[", 
            RowBox[{"x", "-", "\[Mu]"}], "]"}]], ")"}], "\[Alpha]"]}]}]], 
     ")"}], 
    FractionBox["1", "\[Alpha]"]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{"1", "+", 
       RowBox[{"\[Kappa]", " ", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          FractionBox[
           RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], "\[Alpha]"]}]}]], 
     ")"}], 
    FractionBox["1", 
     RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]], " ", 
   RowBox[{
    SuperscriptBox["Abs", "\[Prime]",
     MultilineFunction->None], "[", 
    FractionBox[
     RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}]}], 
  RowBox[{"2", " ", 
   RowBox[{"Abs", "[", 
    RowBox[{"x", "-", "\[Mu]"}], "]"}], " ", 
   RowBox[{"Beta", "[", 
    RowBox[{
     FractionBox["1", "\[Alpha]"], ",", 
     FractionBox["1", 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}]]], "Output",
 CellChangeTimes->{3.899967071478525*^9, 3.899971306056028*^9},
 CellLabel->
  "Out[210]=",ExpressionUUID->"1b0b360f-e89f-4373-9441-24b68fe46370"]
}, Open  ]],

Cell["\<\
Can the form of the expression be further simplified by moving negative sign \
to a or b parameter of incomplete beta function?  t has form of 1/u\
\>", "Text",
 CellChangeTimes->{{3.899971806071659*^9, 
  3.899971877485155*^9}},ExpressionUUID->"8902d481-289c-41d0-be12-\
53cedbbacfe2"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QnY1NTd//9ev7+1i9paa2tbu1j7aFup2vZRq/aq+/pTq4K71lZwr+CG
WhVciorgBgLiBq2Iu4KCAoILboiIgmJRFhVFQUVAlIoimn8/+T0nz3fOnWSS
mczMfc/9fl1XxHsmyZwkJyfJ+eac89POJ3c89v986UtfOv2r//lPx6PO2vG0
0446u9Pa//njwG6nn3Bct2OO3rNb92OOO+a0rTv/f//58Kv/mbfjV770pdX+
8/8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMnn6
6cnBXXfdXfE0ZuzYcD3z5s0LbhwyJJxmzZ7d4K0qpbT9vVevaLqkd+9GJ6ld
GzfuwSivaHr55ZcbnaRC3X777cGwm2+OpiVLljY6SQ31zDPPBEOGDA3PvZNP
PiW44MILG52khrhp2LCSckhlL9BaTJz4WHhNHzlyZMnn06dPj673H3zwQYNS
l82nn34apbW9nV86NjcPHx6Wr389qWvw6KMTq17nihUrwrJb12nlj9ZkwYIF
0T3E7NlzGp2chpg06eng6qsHBKeednrQ/YwzGp2cmmnG87q1btPzzz8fnVfL
ly8vdN2frVoV3DdqVNCnT9+ga7duwfU33BB+vnTp0mhfvPTSvwr9zVpbuPCd
aH/NnTu30ckBAAAAANTQcccfH2zw0w0rnv57iy3D9Sie6j5THKk1efKpp1qk
G41z2GGHlxwLxZeKpDpV1QW5qd51/35ee/HFF+v6+6K6HbsP5s+fX/c0fP75
58FZZ/0tttxoNlny3AEHHFiyD1wdItAa2PxpnX/BBdHnM2a81KDU/a9Vq1YF
//73v8NJ9fLWe++9F6X1mGOPbVAK6+/NN98Mtt5m25LyRfX6WWTdn3oHpjV5
8skno7Tdceeddf/9tP1WD/369W+q62p7O69b6zbZfDXvjTcKW+9nn33W4t6/
y9HHhN+98MIL0WeXX3FFYb9ZD09NmhSl/Z57RjQ6OQAAAACAGiKOinqrdRx1
/46dStav99/rqTXEUa+48sqSNJx9zjl1T8NDDz2UWG40myx5jjgqWrO2Ekcd
M2ZMlJ7hw28p+a61xiZqTbEHW7Z0+NWmwZ133ZVp2az7kzhqqbT9Vmsffvhh
i2vqjjvtXNc0FK29ndetdZtqFUd9/PHHW5RRes9OiKMCAAAAANoC9amq59u4
yT7zqp4qbp4pU6aE6yGOiqyIo9Zea4ijqu9af1+o7myPPf9v3dNSa8RR0dYl
xVEVjzvhhBPDqRHt2n0PPPBAlE71Y2t99NFHUVqvu+76BqWw/rS9bp+MHTcu
17Jp+5M4arK0/VZrum93v733PvsEK1eurOvv10J7O69b6zbVKo6q+3y3Xt0b
Wm+88Wa0L0aNGl3Yb9YDcVQAAAAAgCjm4Z4Py9WftuY4qvrY1FhhblL8F41D
HLX2WkMc9cS/nlSSBtWRNaL/w3rIkuemTZtWUg61hpgU4CTFUVubRsavWqu/
HHVUtE/eeeedXMsSR61MI/Oh+o53v33e+RfU9bdrhfO6dahVHFWxYrdeHetm
QRwVAAAAACBFxFE//vjjsM3qSy/9K/c78++//34Ye1iwYEFF6Xc03pJiWW5S
Wvzf0fv9blqyZEn4+dtvvx1ui/qZGnTNNeGzv+Yt54svvgjmzZsXTJgwIRgw
cGBwVb9+YT3fpElPZ4ojLVmyNGxD+89/3hT2e6VpyJChYb3h4sWLE5d79dVX
S7ZD4xEpLZMnTw5uuummYMCAgWEaVqxYUbKcjtHU554Lx1O74cYbw3qBTz/9
NPY3tN5oX86YEY5pJarXG3bzzUH//leH/bNp+5NkjaNq3TNnzgxG3ntvcGmf
PuF+VF+xCxcujJ1ffd3p2Kl9hl2/0qXPly9fXvVvZJEUR1X99ujR9wdXXz0g
2kc6PuXomOvY69joPf5bbrk17Aftk08+aTGvjqW21W8Lqjpwfb506dIWyyif
vPLKK8G4cQ8GgwdfG/Tte1mYX8aPnxC2mcjLHYdDDj20JA1ar02D8pg9L21+
sjT2n53PjxOoLYPN9y5/ax8pb/Xp0zc8fx5+5JHEfG1pm5Wfde5rWe13lW9x
ZWCePPf666+XbEfauazfUj5UuXPKqacFF1x4YZgenac6xnGUl2bNmhXth1mz
Z4efa58qbqt6TB2DW2+9LXh26tSy+6EIeodF5e3EiY+FZbnK1LhjXKlFixYF
c+fOrXgM5CKuMVr2mWeeCWNOeei6pH2j46SxhPNS/tG1VeV+nLz7vlFx1Lzp
LCreovNT17qHH344PAYqB/NSGaxyRteQSpYvKm02jqoyKY9K4qg6PjpmKkfi
rqtpqs33TlIcVflHZb1+I+4amSZPeZAnH6rMVjmlNOuc1bU/b9osG0fVfUs9
VJrXtS/17qKuZ7ouJV2/2sN5nZeu6brf0XVfeVp5qMj06F5M9yX2uSRPHDXP
+WLjqLofqYbKH41Jr/1Sz/JHeVfXW5uHi4qj6jjrvNa5ovTp3iYLHTvdA+uZ
Ucu+9dZbVZWrAAAAAIDKVBNHVQzxiD8d2SKmpPq+tDpvxTl6X3ppOO6qXW7r
bbYN/nb2ObnrqqVcv76qh7LfKfZ57bXXtVjGTWl9cL377rvBkX/+S+Ky2o7b
77gjcXlbl5Q0jRw5MnZZf589++yzLfoS9WOXqpuJ+/6P++4X1kf6/PnmzJmT
uL2qd122bFmLdWSJo6r+JintmnbdbbewzsHabvvtU/eb2gxW+xtZ+OtR/vO3
2U2dO3dJPB9UF2L7QoublHdtnU6PHj3L5h87v+qS1M9u2vxnnnlWYt1nnHLH
QZPqvmzfhG6Ka0vlt2tV+WD5MUzVVfvL2PMvrQ5P51ZaupWnbVmYJ89l6ddX
dWL+WIf+pN9UzNkXN2aeYtAaNy9uPQcedHBYh1oLihMnjb2tY6DytdK+KLWP
9L6G1mPXq/2retW77ro7zNPKF3F1rJVeY1w+07nsjlPcOm677bbU9Ct9/jHR
tVbttadPnx67jCtjtV2q4+/V66Jo2e5nnFEyb6X7PimOqn2t7dSkumsnqUyL
m7TvfHnTmXSt0qT9I4oLaFmlNakNvs5/P++46eKLLwnr2X12rGe9i6SyK+7a
oXueLO9aJcmbtr+e1LVFHnTHqtz4qFn2px9H1fVCv2nvDTXpWqmYU5pK8n0a
P46qeyd/X2jq2q1b7PtDTt7yIMt+c3Q90zswcfNq2/W+k+4Zs1LMSun0978+
c+Oj6vrkPnfjT8ZxfShoWauovJ50PJT2gYMGRfcU7eG8jlNum3Qt8/u5cJPK
Tfe+Z14qU3XfaM9FHRON0ao4XLk4at7zRe/kxeUDfab5Re/xuXJL76052kY3
v94/1D5T+eOvS+WPzo001ZQ/Kl/0TGSX1f2T7s/t82UlcVSdJ/49rJt0/PXO
ZRw9H+h+NW7farrsssubtv8XAAAAAGiNKo2j+s+b/qTv4+Jreqc26XnSPqur
zVUeeeOoSc+ldorrl0rP4n79VtKkNmE+9c+WZVlXP+a/cxxXn5q2DtWPp32v
5f02E/485eJIOl5+fU+5OKqtHy03Pf305Gi5PDGtSn8ji6zrtfvQjx+q/sO2
MUqbNJ+rLzm3R4+y87v6RH8M5LRJbUuztp/JEkdVm89axVGznL9+/aDafSge
lWVfqC7OlV9FxlEVT1fdXNZj4vdlGRdHTYqhuklxuSxtdPNQe4gs5aDqQ/O2
TVU9atz7OXay+cGPn1RzjXH7Use8y9HHpK4jrm97nXennnZ62f0Sd21xeUdp
82OPNo5azb5PiqOef8H/XpdmzHgp+rzcdd7Ph1Yl6VR7+aT5lHaxcT/FBSxd
L9W+vNxv6vj6bXzt/Y1iHmnLq04/LW4Xp9K0pZUX6l8iTd79qd9OO2b6TvEQ
XzX5Po29hifFz9yka4La8vkqKQ+y7DdRvCrLOaJzI61vAkv3ImnrErV1dX+n
9cXs3p/ScbOqzes6X7Pcy57evXvm/dlWz+s0adukmHC57VGe1nuMeei+K+09
T/9c8u+TKjlf0p4zdB0Vtf11n+n9pLh9pHnT7reUj+PeL6um/NF9ofrwKJev
3P/njaPqfeNy6dIU965puXRp0vUh7v0BAAAAAEDxKo2jukn13erHVPVd6p/S
fqd+Ni3FgWy7ONUt6f1h9YGm9j1+H6F5+mHMG0fNMqmuwFLdUbn6BX+ydTr2
vfisk//cnyV+lHcaMaK0XqCSdag9hpUWR1WfrOXqRO2kPOraNZSLGbk6uWp+
I4tK9pE/xpniMHmWdzG5LPWX2hbl13L7y590Lmah+sZy61LdTq3iqFkmv52O
+jDOs7yLXWXNc1Iujqo2M3m3w5bLcXHULFNS+/ZKKF/Z7dSxU7t418+5X9+d
tx2ajps9L/W30q+YUdyxsPXe1V5j4tavvKj2VFqPHzPx3zuwfW0r7Tr+6nN9
1KjRYZtvu6z2lRXXRkr1t9q/rn+Davd93jiq+hdXm5e4yX8nQWmpNo+obNA1
z5ZxisXoM+1HSYtN+H09qH2T+qVVH4p6r8keX9U/2/eU4u5vVM4p7+n4+23I
0/qsiFNp2tSftJa1Za7ykz5L61u/kv1p853OF/Vnqbxn7ztcXMSqJt+niXsX
SvcWuudUvFHt2uw9rN9WtNLyIMt+E5sndHyUT9T+X+0erxk8uOQeJK5vgjga
80G/Y2NTak+nzx58cHw4T5Fx1EryusZIsN/r+CsuqL49lK/td0pzM5/XaZK2
SfnS5ls9nyjP6Ljq3Tf77oSfp8vx23Jq3WPHjQv3U9x9lI2jVnq+KNarY2R/
+4orrww/U5tbyRJHtWWIxjxRntK/tvzRO4W+asqf4cNvKfle55Pyxn2jRsX2
eZInjqp8b4+zxhRRHFh9Pug3/NivbVuq91XsNul52i2r7bJli8bqAAAAAADU
XjVxVPss7Ng+M/3nXfVBZ+vC/Hdo9W6/bYejuGxWlcRR9RyqejrVw+sZP+49
aDt2pF93pEl1iqpj0Dvcqjfwv3fxw88SYlp6HtZ+0KT/j0ujbUsWF0dV34iq
+1acKKktieozVNehekf/O78eLm551b+4elXVBcTNY2PGaXFU9ffmL6u8oe1U
n4IXXXRxi+9Vbyp6d1x1ZH5faMp3+tyNRVrNb2QRt/2KsajOWWMAJsXt3Tmm
don+sVLcQXVaioEqL/j5RflT2+f2gV//p/7T9LmrQ9Tx8H9fY5Lpe+VHW6/l
pnLtm3x+PZPqjq1axlFVvmgbtC/j6kp1PByNNxZ3/ul4aZ/rHPbPfx0fxYOy
5jlJi6OqjPB/X7+pumelT+2VrrzqqhbzqK7NSYqjKr/peKtOMq5tiOJWRVE/
wjbPxlHdp81zWdm6Q01+P6IqJ/22NjaOWu01xu8H0Y9DKq/Z+ktXRywqX+2y
cddTO36c3kGy/Lyj8Xf9sZWr3fd546hJVI7adWm/2TE7q01n1vE8bWxCabLH
RrEDn8oeO49iBI5fhqjdvx8nV122+z5PfKPatIntuyBvX45Z96emuH4JVEba
eWw752rzfRo/jqpyzu+jQ9cYey3VMk615UG58Tzt8Yrrf0VxPve9fc8gCzs+
qsahsIqOo+bJ6/47anH3DIrruO/t+0zNdl6Xk7RN9tjGnQ86v+z2ZH3Hzz8X
dX9kabsVk7f7w8ZRqz1f7Hnuv5OXNY6q+yz/HlHxQzvPZwWVP9oeu5/j+uu/
/vrrS347TxzVPg/r3i6O3Z+2rb9Ns39fLbYMSLrGAgAAAACKVWkcVc+ecX2A
aqw6N4/qcBzVB9sYYNyYPKLxOt08ijH4dWZJKomjqv7Nimsvauvx/XexlT5/
bD6/LtzVncT14RXXx1Tc2Km23siPo/pt7lT37i/vP/f7cQi/3shfXr/pjxsV
N6an7YM0LY7qx7NUj+Dz2335MXk/pqV3x60ifiONv+3/r2/j0v7g/PbZmnR8
JC7u58eM4vKMHR/Kj9v7428p5q3z202KRfpxGX8/akzGPBoVR9X+tu84SFxb
T0dtE/zv1NbOimv7pHrwpH3l5zlJi6PGlUFxbe7j2hu78cji4qhqA+Lzx8ON
y/+VUn9+Wr+mpHaudl/G1QEm0bsAcWWGpb477ba5OGoR1xhbbqidShzbDlPv
rji2bUlc3nBsva295tq8o/Y1card90XFUf02w367yGrTWUm8xb6HlFaW23Xb
tpW2TFY+UrzIZ+uu1aYtq2rTJvWKo8b1jSv2emmvddXm+zR+v75J/c7b9s3u
2lFEeZC237R+7RPl8aTzVfEvt3ye+LHUK46aN6/b9wlVnvj3FKL8YY+b02zn
dTlJ2/Twww+X5Iu4vu91bdE9g6a4McDj2H6LBwwYGDuP7jns+e7OiyLOlyLi
qP5zmWPTZscRqab80fzuMz3fxdGxsX0B5Imjal53HbTjjlv2Pt6+l3VJ797R
52p/HUfvxSp/ZG3rDgAAAACoTqVxVD9+Z9k6C8c+K9vxBOPYuuyFC1vGXOLk
jaPq+d/nt7nQZONWfgwzrp5CdQWqf3eT64dNz7l2Wa0rri5Un6X9jv9di3FH
Y/aDX8etekb7vf8us7/8TTfd1CKdcX1xqa9HJymOqu3zl1MdqOpc7BQ3jqV9
Nz4tplXUb6RpsY9iYj6rYtKhWJ/Y9hqadB766VM/b/7y9p32cnFUn+qgFd9Q
X3Zqw+wfI01tJY6qNiU+1VkllQG2nYWb1BbBUr5RbNWev7b8qTaO2rlzl5Lv
bDtTK64dsfr2lLg4quqZfX7ezvOOQDXUJkv9t9rjlSeOavdf2jh19p0WN18R
1xj7edLvq/2Vm8f2iW6XTStHbJzctoG32553TDzJsu+LiKMOHfqPkrylcqro
dFYSb7HlocZjTGJjJvY+wN7fuHLaZ8t0e39TTrVpk3rEUf2xDCw7XrDa1jvV
5vs0No6qfjCSKEbh5nPvjBRRHpRrj5pE8VOlSTFOt3xrjaPmzes2L2v8xiR6
B0l9L9vYULOd1+UkbZMfy1Q/vto3/rthedl4n/9en2XbQLp4aRHnS7VxVPvu
ra8W5Y/tDzitv3E9A7n58o6PGkcx60WLFoX3bvaZzp4rfv9EuqfT+eTftwIA
AAAA6qfSOGrSu852nbY+QmMZ2WdCvcefNNn5srSNkbxx1Lj2Weqz0V+Hi6Pq
+dz/Li5+kcS239GkmEoSW1/q15P5cVS/TWtc3MrvE8yPv5WLo9p+8ix/jEzb
Li4pjqo85q8/66S+Ip20mFZRv5Em6z7y87OrS/PzQ9bJjrGaNY6quGnXbt0y
rb+txFHVJ2iL7TRtPPwywO8DOe49inKqjaP64/UmtSFQ+w5/OzSWrsTFUW2b
Wce2ZdBUiziq4mGKqSlv6fgk9SmeJ47q1pEWzxF7/rh4ZxHXGFsnm9QXgvqC
dvO4OlX/3Y2037b7yeZjm3fUz3OaSvd9tXFUjd1n118utlRpOiuJt9ix+dLG
DfXPL9fG0d7f6D2TJHH3N+VUmzapRxw1qU2W2DLaxV6KyPdpbBzV7+fYsu0+
XXvCIsqDLHFU7QNdC9SWXudX0hj2rTWOmjev23uJPPfA0mzndTlpY77atqN+
PtXzla7rWfvjERsL9o+3z94fuHO5iPOl2jhqWp/Kp5x6WuHlj323Lam9qNh7
y0riqMq3/fr1D2PBceNLuMnGURVTjxvPQpOuBXrPL2u7fgAAAABAMSqNo8aN
I+Ov09ZH2HFi8kyqS8oibxw1rj1tWhw1rY1YFn5s9PTu3RPntf1UabJ1m42I
o77++uux6bRtLdyzvZMUR1U9QSX5QJMdfzUtplXUb6TJuo/se/+atF/E71s5
62TbMGaJoyr+lmf9bSWOGtdXaFocNe2cyqqaOKraH/hpUxvZJP557vp1i4uj
xpXbtY6jqn/qpJiYJvtd1jiqfVdFxzuNjfu5OGoR1xhXx5lWDx0XR7XjgeaZ
bL1+UozTV82+ryaOqrLRrrtnz/Nqls5K4i22jCjXr0Bcu61q7m/KqTZtUo84
alpMLi6OWkS+T2PjqGltEcXN597BKKI8KBdHVfuwtLiILccbEUdNKs+qyes2
Lyf1wZqk2c7rctLiqIqRauzNtDJS73vZ2Foa3Ve55XTc09h4pzuXizhfqo2j
puXluDhqteWP9m9cWeuz52KeOKqevey1tdzkH2s9k/bo0TN1GT1TuHEfAAAA
AAC1VWkc1bWPSlunrY9Q/7ZuWb0jr/eBs0z+uJxJah1HVR9M/ndjxozJlDbx
xzxMq1PTd3beM888K/quEXHU6dOnx6ZT9UJ2Pj3vO0lx1Lh6D8W41E9rucn2
s5kW0yrqN9L461cdURw/fu7ynd8eVXW/WdJnz7tycdS48T416Z34IUOGhu0P
7HiUmhoVR/XbOBQdR73gwgtLPi9Xzxin2vaofn17Unwxrl9q139sa4ij+v3N
qUxyeVPlsMpKxRfKbWfadpc7Pva8cudsEdeYSuOoixcvLtknWX/btiXOEket
dt9XGkfVtdHWOat8T2szW206K4m3qG9M97nWn8be9zjV3N+UU23apDXGUYvI
92nsNUxjASbR+JFuPveOTBHlQdp+i7vP0D7SOnQtUt+jahPpvmtEHNXlpbQ4
at68bsuQpLF0kzTbeV1OWhzVUT+tKgt1P+ffY7hjZ/uxTaK2/26Zcv052Och
dy4Xcb7UO45abflj7yvfeuutxN9Wny7+NT8LXfNs+hTn177X/avOb70X0L//
1dH3STFzHVu9R6LnyLj3NrQd5fqwAAAAAABUr15x1FdeeSVaNq1P20rVOo4a
154sLj6g8RUVp3KTGz/Kjq/j6kZWrFjRYnnFPP33023bjVrEUVVPZfnLx9Ub
qH7QT6fqUJw846O+OGNGi/WXk3d81Ep+I42//rgxZFU/5u8jVx9q65s0Ka/k
VS6O6vcbp7oW5XHLj/MWHUeNa8f94osvlswT149t0XFU1Z353/mxCO0be+5q
UrnlVBtH9dsmJx1z7R8/ra7NR2uIo9qYt/qqU9no0zsmaeVkEltHGLdex55X
Lo5axDWm0jiqn6ZVOeNckiWOWu2+rySOqvPEvtujeGpa250i0llJvMW+E+KX
MZate7fj8dUy3lJt2qQ1xlGl2nyfxsZRtQ+T2HPfzVdEeZC23zQevC1f/fss
effdd6N5ahVHVT+7cey1osg4qn0HLGk8A1E5qfNa40k7zXZel5MljurTfcjI
e+8tudd398/l2HPx008/TZyvpK/k/zmXizhf6h1H9bc5b/lj+9Tx02upD924
a34a/15t4sTHYuez79hmbXusez49F9r1z5w5M9OyAAAAAIDK1SuOavts1Pdq
PxBHsSfFTLSs6muzjg9U6ziq+LEc1bnbujM9w/txTr2PLLbtjZvixgiLi/c8
+ujE6PtGxFH1brvqBCzV6/jz2fa5SXFU8cdVte1YHcXJVG/rJv94+TEtv26j
iN9IE7eP9M64pT7k/Plc34Tjx09o8Z3fN7D2uep5bBqVzx3/OHY/44yS5f02
noOuuabke52Tfpy36DhqXDtuv289W7fqpqLjqLY9QVKeUT+7/jwLFiyIvi+X
5yQtjmrbHbjJj1mpvPPjrZpc/LvRcVS1ebDrTWoDoT5fk/JEGjte2aRJT8fO
o7YkNg0ujlrENaaaOKrNH2n1obom6Lc12Th9uThqEfu+kjiq35Y7bRy5otJZ
SbzF1ivrep/k1lv/t1y2/aTXMt5SbdqktcZRq833aWwcVdf0pDiJjWmqrwUp
ojxI22+2rEoa48EuX2Qc1fbhmtQHus3PRcZRbV6247Vb9j5U9yFOs53X5SRt
k95xc+eC/26bM3ny/z4zuOeIcmzbXf/ZwNH10pbP7lwu4nxpRBy1mvLH3pOl
9VNvr5tZ46jPPvtstEzaOBK2nwebft2LKK1uLJA4Gu/BLZt3rGIAAAAAQH71
iqOKrXcaOGhQ7LKqA8vyTO2rRxzVps1NinkoRqp3jU844cQW3yu2I2qPE9dn
11X9+oXvEWtSux3/e9VX2LrDRsRRXToUC31q0qSSOks3KV127Kq0OOqVV13V
YvmLLro4bGugfuKUN+L2s+XvS8UQVR/jtrWI30gTt49Uz6tzRPVHigv43yvW
6mIK6gvNj2Gq3mT06PvD2N2ECRPCuhd/HbY/RP84avm33347inn7y2ufufr3
OXPmxOZXxUzyKBdHjWsbrEmx1McffzwYMGBg7PdFx1HjYsauHNM+Vf2ff275
7cHK5TlJi6PqmPu/rzTdddfdYbtd1aH5+9PlW6eoOOqSJUvC/a9J9X1Z+W2H
Z82e3WIe9RddyfioYt8j0b70yy6lW+eRTYPti7vaa0w1cVQda/e5xj+Oi/nY
tsbKb3aecnHUIvZ93jiq/y6IfacnSRHptPEWjSFoJcUmZs2aVXJexfXTqHa0
ts2zvb7XMt5SbdqkqDhq2v6sJI5abb5P4/dNr7iHT32e2rxk20pXWx6k7Tf1
J+C+U3s1n2Kduoa4eYqMo4q9XvnjX+i37T4pMo6qY2+PSVyfs7adnz1mbfG8
rvRambZN9l4/7l5G9ExRLu/67PuNumeKi4X26dO35PjZc7na86URcdRqyh89
d9l9ofswn655dp6scVT1gWN/U/Fnn8YQt+u2cVR7rU56Nld/R26evHkTAAAA
AJBfPeOoti8yTYrHqQ5GdYJ6Lvbr/rOOoSX1iKOqTt+PtaRNeg62/RnqGTnr
sm5S3NKqRRzVf1c6bxo1+W0L0uKo6hPYby9abtJ2WbZfMn+fF/UbaYrYR/4Y
guUmv/8+29dY3DFX21L/c52baXnY7xu4nHJx1LRjlTYVHUeVuDbUaZPfZ2G5
PCdpcVQZPPjaXGnQ8bJxgaLiqIrTu+/ytr+xbV4UG1C5pvymen/V9/vpU1kb
1+dlHNU12vpwtWVSGac6bNXrxp3TNo5a7TWmmjiqn3bVSatM0efq39MuF1ce
ZOnXt9p9nyeOauM4bp+o/Uva5N6lqTad9rfVXkfnoqvjTusr045Hp3ytWIT6
CdC6Fbu1bfRV527Vut1aNWmTauKoWfdnJXHUavN9mrgxvnVtUFt1nevqA8Ne
z9w4Ck615UHafrNt2fRux0MPPRTmf7XXVv7xr7PaRzreWftYKRdHtf0WKF6r
eI/OXV3n/HKyyDiq2HsLfafriWK32qc6Pva3bWyqLZ7X1Vwrk7ZJabbHRu/P
uXE+1IeH0mzzT9b+XnXO2faN2i/6LcVTdWzi7gntuVzt+dKIOGq15Y/tp1rH
Qn3G6Bion2h/WU1Z46jKm3Y5vaOoPmeUb3U/c+aZZ7VYt96pc+9aqv8Y97nO
5+nTp0flvtYzdOg/SpbNeo8FAAAAAKhcPeOo4o8TmjTpPd086hFHlbj+QeMm
tV1T/UCL7c8Ry/FjMNKIOGpcOz47qV2GPxZTWhxVVP9Sbr1uUr7zJcUgtd+L
+o00efeR6oDi3ke3dThpk+rQ/X6D1W41aX7V5/rtRuImW/+kSfU1ikFnlSWO
qvYj5d4/sHV/mmoRR9V2+ePBJk2qP/NlyXPl4qhKQ9Zjrjzlx3JbQxw1ro9y
f7L13m5auHBhpvWrrj3tfNJ3Nt/aOKpUc42pJo4qfjvLpEnnjT9maJY4arX7
Pk8c1W8rk2VauPCdQtLp9w2syb2vkBZv0Xd+mRY3aR7FDKxax1GrSZtUE0fN
uj8riaNKNfk+jY2jllu/7mP8a6RUUx6k7be4PiX8SfdBfkwza/+b5eKo5e5F
lTb320XHUVXmxvWv4k/+dbotnte1iKOK+h6OO2b+Z1n79HVsf8Bp50rSuVzN
+dKIOKpUU/4o/u/ff/qTHR88axxVbL+7SZPeXbR/Ky2i57a4dMVtJ336AgAA
AEB92GcyOxZgnAcfHB/Nq7EEy61T7+jHUf9Dft+MbtJ79Xaczazi6g4sPbeX
q5uIi1Gobyaf6mn8uI6dVD/i3i2Po3rqtDohPTv78VvHj0e58TYd9aHor8+P
i/n9B5eLo6rtR1x/o5oUN4trX6E2AXa+uDYoilvHvR/vJtWvvflmyz7jRHUM
6rvXr1OwMa1qfyONvx7Fr1UHFFfHoXSmtUHRu+lp+UEx6KTl9f56XF2Laxem
Yxf3vX5P9bBx8Q6tMyu/jabq0eKozYk/Xqs739Xnml/f5Lcr8uts4+qN/P7X
/DJAtB/Vn2DSvtb5lTQuZ5Y85/el7Mbq8903alRqvZ/q7VS/57NjmLkpLj7p
992ndx0sWwdfyXhwI++9Nzb9KtfdsfHfXVGf01mpDa4bQ86mU3XR6pfb9hsZ
935CpdcYF3dI2yc6P9y6tB982s64PrndetUmOW7MULtMmmr2fdJv2DLStcu/
5ZZbE/Nn0qT2P0WkU+64886S5V28Re2E3Gfqm9yncyTtXQVdyz766KMWy2W9
v3F5Mun+Jk2laRPbj2zWfnGtLPvTH5PVsmV9XN+qleb7NOqPw61D10k/5uAm
7dO4csCp5p4zab+Jrl1xbeQ1v9ryKd7tv9+jsj8L2xep9l0cleNx55iOg85j
F3vy46hF5HW9O6fxUeP2qfaJ0hanrZ3X1Vwr07ZJ2xP3LomdFD/P816bo2tk
0j3l2HHjwvavaedypefLjUOGRPP5bWj13OO+03gmcfsorfw5vXv3mpU/ev9C
9xZxy+qdPvvOYtw1P4nOf/8a5ybdD6tfYc1j729t/lNbYP/dPH+7dCwBAAAA
AM1Nz7Oq5xkxYkT4fKt3fPX+fVuhd5oVv1B7CY3ppzpnxT7z9K2kOmfFbBQn
0zvgalMbFzupN/9ZXfV5ovjx+PETwjawev5Pq7fMQ7FOHXvVr6mv2meeeSYc
kyoL7W+lS+lRf3quPVSRv5GH6reVFu0njeuVtd2QltN2qG9A9delNhQawzRL
vbOWVZtEnU/6Ta3Hxl1V36n39dU2RPVfjcxjOl46T5TvVe+VtY/DWqRD7ZVV
p33ttdeFx0t1c1naSmXNc+Ws+p++8lRPq3arypvKo3FtqmpFdXZxfYhmoTZJ
6l9RZZfqZuPyld7rUKxe+6rSY616Vk2W6zc2rd1oI68xykc6tnrPRb/txgP2
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
eKN1+eWXh5/vueee4Tl+3nnnhVMtFR1HdWNWxvUvm4X2X7PHUfXOyzrrrBO1
i8wyxvWrr74a7RONy+yzcVQbK9X+3HHHHcPPFU+t5bsajYqj2n2jWHFSPnbn
V5Y2wAAAAAAAAACA1sOPo5aLGalu3PXz6KbZs2cnzuvWrz6DGYezOLfccktF
Y6NaY8aMidahmBaCoFevXiV5W22p20q+VQzHtTFWbNxv/6ftUKxH39tt0nKK
mbq+W2XNNddsEYctWtFx1Pfffz/4/ve/H7Wxzqs9xFGnTZsWbd/BBx+cOW9v
u+224TL77LNPbL5SP9H63rZXnThxYvhZhw4dgmXLlhW6Hb5GxVHVrtvtzxNO
OCG2HNZnHTt2jOabMWNG3dIHAAAAAAAAAKhO3vaoasf2jW98I1pGfRomxV71
udq3uVhfXlpek+rt/fp+pVPf6d9Gx7lcWtS2qx7jv6pevkuXLtExUH/J+ky/
7dKQJa6q+b797W+H67jiiitqnu7WTvlov/32K4mjXnLJJa2+z2OlW2mcOXNm
SfzXnTcu/fpX26Pvb7311mhZbbOLQSm2qbF2dV7XIi8rDe68Vp+6Lr2K77nP
K6W4p11fXs0cR3X54MYbb4y277rrros+L5fHr7rqqnCZ9dZbr0UcVcsOGjQo
/P76668PP3vnnXeC3//+98GPf/zj4L777qvpdinPTJ8+vSSOqjTq8yKvDa6c
d+vVdp988snR/hw+fHjJ/Prepc/1/av9pzbBWfc7AAAAAAAAAKCx8sRR9Z3G
XLRxpmeffTZxftVlf/e73w3n69u3b+Y06XdU33/44YcHP/nJT4Itt9wyjPOt
WLEirH/Wert27Rq2c9pss82CCy64IHYsRM2rWIi2Uf21Fh0X0vqeeeaZ4LLL
LgvjL2oDqHSp/2J9p1jO4sWLC/1N0fZrrEJ3DN58881wf+2+++7h3/pXMZK0
cWtFdfh77bVX7rZpzUrHbP311y/J36NHj250shIp5ql+VpW/NdlzU/nRfaZ5
FNcSxXT0ToPro1X/Khakc0v/v8MOOwTf/OY3g1mzZtUkzTbWmTRVep5eeuml
4fLqu7iSeGwzxlEVU1QecJMt74844oiSvJO236dMmRIt99xzz7X4XsuqTera
a68dnHXWWeEY2vvvv38wd+7cmm2bbYOaNPljBFdi0aJFwcCBA8N3ExQXVj/q
Wq/OGZtf5s2bF87vrpNuv2pyY4prPHF7LGoZYwYAAAAAAAAAVC+uX1/Xjsb9
q3phxQZPOumkaF7F315//fXUdav/Qjf/7bffnik9+i2XJv179913h/XzGtOv
U6dOwUcffRT++7Of/SyMrZ5yyilhn5O77bZbizjApEmTSurU9XdRFMs88cQT
w/UqPf379w/T+4tf/CLcj2effXbUp6XffqtaahNst0u/t/POOweDBw8O46eK
Pbs2ieViUuqLUvOqP9i2Mg5orSgO4sdhFKNurZT/y8Uk3WTHwVSeUHzrySef
DMfZdW3i9P86R/R5rbj2qEqDbVNu/650vQcddFC4rT/84Q8risU2WxxV+0Tl
Ypb8oX4D0va94vBu3muvvTZ2HpVzmvRuSdFtQZP4eUi/b/NSNWnQsnfeeWew
+eabR9eje+65J/jjH/8YvXuy7rrrhv+v91pcnrPtwstNae8hAQAAAAAAAAAa
z4+j/uEPfwhjCe5fN7m65EMOOSQcmzNLvEN10G7dWcZaVL212v9p/mHDhkV1
4IoH6Hf1+YEHHhj2kaj68rfffjvsO9L9hurvLb/trP4uoh9FxdZc20/Vpdt9
oTaganNk2wUWHZ/UvrHbpWNof0N9XLrvhg4dmrquiy++OJpX40tWQvvUtWsr
eho5cmRFaaqEza+uD86iY+BFcrEitYtTvtM5q3SrjbY+c32Qtof4uMqK3/3u
d+H2awzYSuJnfhxVbdjbOte/reLormzVpDbJ+sz2nZ5G+0btfLVst27dmr4/
Wm2vHYNa5ZDNU7bc1NS5c+eS65Xb59qvu+66azTfE088UXJeNvt+BAAAAAAA
AIC2zo+juv4GNal/xmOPPTY44IADgh133DH42te+Frb16tixY9gmybZx86l+
uF+/ftG658+fXzYt6i9yzTXXDNuf+uvSZ25d6mNRhgwZEn22xhprBMuWLStZ
bvLkyYW3R1V7WMVptD711RgXo7L79Kijjiq0rlzrOv7440tiw34aFF9T35P6
fptttkltm6exMN26nn/++YrSpN/X72Rtg5Vn0v6rlzPOOKPkt3fZZZe6jHdb
BL1T4NKt/rDbWx/NyoMuz6ttdiXnXLO1R/WpzHbbprI5D+3PjTfeOFxW7e/b
ynlRKbU7jYuROspvtqzQOxhxNJ/rH2DTTTdtF+80AAAAAAAAAEAzSerX1/bt
6/5/yZIlQffu3aP5FU998cUXY9erenY375e//OWy9e5a/6mnnhpsuOGGLfpS
VZueuHHo1F7MfXbJJZfE/oYdH7Xa2JKW11isfjzXp3EH3TwaO7VI2kbXNljT
nDlzYudxMSVNOm5JJk6cGM1XzVigrt1blkltJ7POW694jY6t3hWwsRHlx7YS
j7Tx8D59+jQ6OXWndzr0jodrs16JZo6j+u+iqF1k3uUVn9ayW2+9dVPHUdWW
222r+u2dPXt2i3m0/S4+qknvMcRp7+83AAAAAAAAAEBb58dRy9WPK7Zl+ync
YostwrFTfaovPvTQQ8N57NhxSTS/0nLeeee1+O6DDz6Ifu83v/lN9Lnq9jUW
3auvvlqX/ldfeOGFYO211w7TobZZcXXi+kxjpLr0Fj3+ncawdOvW78TtV+0L
Gw8cN25c4vq079x8Gl+1vVK+XmuttUr22z/+8Y9GJysTP0Y2bdq0Riep7pTn
v/GNb4Tbr/balahFHFXrnDBhQmGT0lRJW1vlb40p7cquStpF/vnPfw6XX3/9
9Zu6XaXGmLaxzzh6f8XNs9NOOyVe32yfDH379q1lsgEAAAAAAAAANZA3jiq9
evUqiTftv//+LerVFT/Q+vS9YhPVtF9S2yn3W+pnuBG0PRoX0KVD47XGxVGX
L18ezaN4RdHttjROn+1vMi6moniLPT6LFy9OXJ+NuZ5zzjmFprUtefnll1v0
KVxpP8f1praYajfXHmJcSWw+VplWiVqMj2rb7xc16fzO67HHHouWV3vdStpF
2muF2mw2I+Uj20d5UuzzhhtuKMlvceWw9rH6xK/VOzUAAAAAAAAAgNqrJI6q
9m62Xl9tNP16ddUr52mPmqZ3794NbyOo2NQf/vCHsv31Pvnkk9E8f/nLXwrt
x1Hruvjii6P1X3/99bHz2WO65ZZbpsbVaI/6/9xxxx0leXr11VevSxvnIqhv
bZdujV3ZHvsOVR4vuj1qEXFUlXtqQ1rUpDRVUpYqHui2K+/YqE57aI+qd07U
D73bV4888kiLeXRtU9nu5knqD137SPtK82ywwQZNu88AAAAAAAAAoJnZmJti
CFliR6rH/+Uvf1kSd5o8eXLJPKprzjM+ahLVPe+2227R7/hjp9aL0v+1r30t
Ssejjz4aO5/Gaa1VXFL74qijjorWHzcmn/b7LrvsEs1zzDHHpNbf2/FRR40a
VVXatI+KnuoVe7DngaatttqqzYwBeeONN1bdFrOtszGrosZHLSKO2hqoTNBY
1m67XnrppYrWYcdHbSvvGOSlct3tp6985SthW2+fyoVNN900nEex+/fffz92
XbYN8EEHHdQu328AAAAAAAAAgLaukvaotu1XWkzPjg03f/78TOnRum1984IF
C4LVVlstXIfGA/X7T9TfqseudczrmWeeKdnejz76qMU8SreNYU6fPj38XPtm
1qxZVadB22j7So6LMare/7vf/W6UhjFjxqSu8+abb666H1ulQ+0glbaip3rE
BXXc9t1335Lje/TRR1c0DmW9KY1qf+nSfeutt5Z8r3hXEeN8tnY6NzbZZJNw
HyjeV8mxa9Y4qi2vf/SjH7UoN5RHyr2voP2pfspdm+e28o5BXn369Clpyx+X
j+zYqBorXPtC86m/ZbsfbRvga6+9tmQdmr/SsW4BAAAAAAAAAPVTSRxV/Rja
mJPaJ8Utd9ddd0XzPPXUU6nr1PLDhg0L25KdfPLJUX300KFDo3WceOKJwccf
f1yy3LJly4LNNtssMd6m9Si2WG29/9y5c6N0/OY3v4ld3+uvvx7Ns/nmm0f1
65dffnnsvlW68qRN8+29995RHDWufdN9990XpUHjuZZbt+0neNGiRZnS4dM2
nnvuueExKHoqFwcugvbRhhtuWJKnBwwYUPPfLYLSrniPS7fyoKP88bvf/S7Y
Y489mjbu5bht1T749a9/XVHbv2aNoz7++OPRNu23334l++bDDz/M1I5Zy3z9
61+PypVmbVtp3/056aSTYufRdcq2/1b5t2TJkuAHP/hBNMa0PlOM1c03derU
knWcddZZ4edx7V0V167Hu0EAAAAAAAAAgPJsHFXtucq1S1Ldrt8H6sCBA2Pn
ffnll6N5br/99tT1vvfeeyXrdG11DjnkkOizuPFA3Zh9GufTN2/evGD//fcP
v1eMpZq+KLXsT37yk9QYpm3LpDp4pV/zbbHFFuHfdpkRI0aE6/ne974XnH76
6cE777xTNg1a/thjj01Mg47dYYcdFn6/0UYbZeoD+YQTTgjn/+EPf9hux+9T
DMTmPU1PPPFEo5OVySeffBKlWXnc5okrr7wy8bxpNjrXOnfuHOXlSmJQzRpH
teX1aaedFn2ufda1a9fw85kzZ6auQ+VTUtvKZnLbbbdF2+liopauA2qr7uZx
Y6OqLar+Vr8FovioLU8Ur3bcvlTZ65fhak/uljnuuOOIpQIAAAAAAABAA7j4
nmtHaOt7FUvT53Ye/av6XMWWbJxBk8YuTarrVZ2z2uhoPvVxmMam47e//W2Y
jhdffDFYZ511os/vvPPOkmVmzJgRfn7hhRfGxjXvueeekrS6tkOV0DaqXjsu
hqn/v+WWW1r8lqgdrv6eMmVKyfx+LPqOO+7IlDa3nNJg97uNb6+77rrB3Xff
XXZ9+n6vvfYKl9H4fe21zt6OEeumf//7341OViY2jqr+fR31Ja24/z777NNu
jqvOIe0HtZvM+k6APUf8OOq4ceNKysC22gerxml226Q+Ahy9e+LKqnLtS1V+
uXU8++yztU5ywygOqnFR49ro6jyyfWhrcu/m9O7dO9hpp52CFStWhH8r/22w
wQYlfRO4daidqs5N/70eHYMf//jHJet3cVkAAAAAAAAAQH2oflftbBS3dHFB
OymOoNhaly5dor5a1WapY8eOwVprrVUy71VXXZUar1Cd8QEHHBDOq3aUaTQ2
p6u7Vp29/la9tMbiO/LII6N1aMxRjU+nNnb6TPXXSWnw46hqR1RNf5Rqs/Wd
73wnXJf66lV7T8UU1MZr9dVXL4kFazuUTu3PCy64oCSNisf84Q9/KElblj54
RXXv3//+96P2Umpzq32i46PPtt1227APySzbqXnc9mg/tpd4m+/qq68uORZq
l91W+i1VfnDnh8Z4Vbofe+yxMN/p87h+Q5uVYsfuGGYZj9iWhTpf3djDblIc
TPtRbeK7d+8e2z6xLVB/3YrlaZvUj7faQ7r+vPv375/pvNd87h0Nxe6blc4f
145b5azah2p7R40aFfY5/7Of/Szo1atXSaxd78pov9h2utqnl112WTiP3iWa
PXt28OSTT4b5SeWL3z+9W0brt3lw2rRp9dx8AAAAAAAAAGj3FDvwY6d5JtXz
qj9C1SuXizXp+4suuii2DadPdciHHnpoyW8phqo4kGJFGk9u/fXXb9HmMy2O
+8Ybb4QxELVp3WGHHcJ2QNX0Xav0P/zww8E222wTpeFrX/taOGap4qnahuHD
hwcdOnQoicXExbJUP+5in4rf7L777pljXppPcVe7L9SGV/Fu9Y+ctd3cQw89
FC3v+qdsb7SvjjnmmJJ9qTzTlihO5sYG1aS+ohUbbOZ4Vxxtr9690D645ppr
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
0adP3/C+QPcIzWr69OlR/v3ggw8anZyqvPrqqxU909vp3//+d7iu9lwGf/75
58GIESPC/fHkU0/V7XebKS+uWLEiGDJkaJiHJk58LPfyjdgXCxYsiMp96rma
1+TJk6PjvGzZskYnp+np/L15+PDgggsvDP56Utfg0UcnNjpJNdNMZXg59d7W
pDrIpDoC3cu4z19++eWap68obfXeq70/N6H9OeTQQ1vE67JMzfxM3Wiqt+jb
97Lw+aPecVRdczSpHt234047h+no8KtNa56OvFzaNKF2rurXL9rPul4WZdWq
VVHeU/1dvXz88cfR9px62ul1+10r7ZyrNT3L+GX7iy++WPd0FClLGUY5ke69
996L9tMxxx7b6OQEY8aOjdKj9x7y6tevf7T8vDfeKD6BrVxavm/kNb+t3m+g
lOIMLn9de+11ha67UdfHK668MtomxabqTTEIbbfuUerts88+Cw477PCS+4Iu
Rx9T93QUKW1/nn/BBdF2ahyVtuymm26q6JneTvPmzQvX1Z7LYOUXtz+O/PNf
Cl93e8iL9j7y5JNPyb18I/aFxk9q5LvrjXoWbkZZz7NK3s2stUbWCxRN72Zv
vc22JdcYxVnasvZShpdT721NqoNMqiPQvYz7vH//q2uevjxa6/NvNdegRj83
6dnFpR2oB+KorduBBx1ct3v6d999N/otvS/ma83P1MRH6qNWcdQxY8ZE6x0+
/JbC1ltOo+Oo5c65Wtu/Y6eScv2/t9iyTb+DnbUMo5xIRxy1uSTl+0Ze89vy
/QZK1SqO2sjrY6PrAxqZ/9U3h70vUBrOOutvdU9HkdL2ZzPVexJHLUYt46jt
JS8SR82vUc/CzSjredba4qiNrhco2uVXXNHifuLOu+5qdLKq0l7K8HKIo1am
NT//VnMNavRz03nn/29+nDVrVt1/H+2PjaOqDeSoUaMzTY04P9ojxXbqdU//
zjvvRL914l9PavF9a36m7tXrouCEE05sWJvC9qJWcdQHHnggWq/6fqmXRsdR
y51ztWafbZSWtq7c/qScyOajjz4K95Om6667vtHJCaZNmxalp5L+oNp7HDUp
3zfymt+W7zdQqlZx1EZeHxtdH9DI/H/TsGHRtv+9V6+6/34tpO1P1em668v8
+fMbkLriqF9SxcHjJvvenK4JSfN98skn4bracxncqDhqM+XFauOojdgXjY6j
NupZuBm11Thqo+sFiqbz123P2HHjGp2cQrSXMrycem9rUh1kUh1Ba42jtubn
32quQY1+brJx1FdeeaXuv4/2x8ZRNV4AWhe9A04cFa0FcdRiNfp5yf22zu1m
0Oj9idapvcdRkxBHRRGIoxavkflf7864bde9WTOgPAnCdg/uuGr8rXLa8z5r
VBy1mVQbR20E4qjNgzhq6/CXo45qqve1pb2U4a1N3jpI4qj5EUcFsis6jqq+
tGfNnh089NBDwdNPTw7ef//93OtQv9Yau7rIOE1bdW6PHq0+jqp6adWj6Zkp
Dx3nl176V5hfPv/886rSnpfe2X7mmWdypVl9xs+ZMyfM23pnW9eILH3Hf/HF
F+F7WhMnPha+J6X/z7u9eqbXGOk6R3VfsCrmd5ctWxY8++yzwRtvvBn+Zp51
a+x2bZPWnbZsnnuYPMc373VbfeDrGqn1VzN+SFIc9YMPPgifp5+dOjXcr3nk
SVue5yXlNY0zonyr803976rdYDXcb++9zz5VrScr5Vule+pzzwXLly/PvJyO
x6RJTwcTJkwI3ztcsmRp7HxFPX+6a9D48ROCF154oaKxFird1nKy7gtfEduU
ppIyVWWP0vLgg+PDZd9+++2q07F06dLg9ddfLymb88RRdc+i/artyUplpvKe
jvXDjzwS1suoHGjt6n3Nb+RvF3XNiOPagOneQNfprGNaLlmyJHhq0qTg4Ycf
Dq+TefOMyhhds3WvrT6MdD75tK06x5SuvGPdLFy4MDwvdR1MK8PyxFFrdX0U
nYe6/9H5q3KyGnH1Aav+5/lG57jKmLj7sKLSlqceRftJ92PKg9qvixYtypyu
ODaOWkn7/0rU+vpRRL1UEc+3ouOve/Vy99tFKyqO2hqf+dxzlu6N0o5L1ut7
1jhqJfflrSkv5j3v9Lsqx7StKm/eeuutxGOZFEdVual8UO66kkee59g0SXFU
lS0q95Vu1147q1o+Cxet2mtoEed4JdeCOJXEUXVPpjyQNw8VeX/Z6Dhq0c+K
No764YcfFpTKZJU+e7fV+4m854ueT7R/dG+n+5DFixdX9LtZFfl7jYyj1vMc
L/LeS+W40qw6aJXrytdpzy5Fx1GreW6SPHUyjY6jVptHKql/8hV1/UQ2RcVR
9dxwevfu0brspPJAZWecQddcE82nY677Vve3xuorR/c5Kpv13K84yK677RYu
55fT6ovcPUNqm7PcH2qdimNWM6nvpGrUI46qeue44+amlStXhvPZcl33Qj17
ntdi7Hjt+3LP53fddXfJeG1uneqPQfdulTjiT0eGv+23q1N8SOs/7LDDw3sW
jdOg+exvaxtuu+22xHW75eL2zXbbbx/2cx1HzxCqU9S2+cvpMx3PuPv03pde
Gs2n653GO/LXoXyu+z1RPewee/7fFusfMGBgi3XfcOON4fZrUp2DxhHw162/
bxwyJPYZKMs9TJ7jq+tqUr6Lq7vQ9eWAAw5sMa+Ob5Z6IZ8fR9X1z+UZO+mz
cn3t50lb1nNOdC1WWeTnW3sP9uKMGZm3WflZed5fn8sXut8RW/a48bJ8Knvj
yic9i7rPr756QLi9tg7P5mPttySq+/fztpv+dvY5YT1/nv2ZVE44useLO4aa
OnfuEvtcVdS2lpN1XxSxTdoGl0fOPuecku+KKFMV+z3u+ONj06T1+uWE7v9d
/lT54tPxvbRPn5JyR2WOxnZVvVq5OKrOMZW7cduhfZt2P6pndX+cYTdpG5U/
srrsssujZdW3pu+ee0aUXHvi2Hs6dx/v5/t6X/Otev920dcMS8+bceWy0jxw
0KDEeKrKTX9b3HTxxZfE1luprsXNM3r0/eGzdNx1dsSIEeH8Oq913P31q2zy
06V6YXe+X3TRxeE5ouuvv+yBBx0ce/5kiaPW6vooqpPQddC/l1FZpbqTSt5p
sPUBen9O52bcvZzK/LT4dN60/XHf/RK323+OUv6Lu1/RpDJJ4xzloXvNuPys
z1QOyn2jRkWfu7zm0/OVm0fPhVa9rx9Z9qeOg7u+xI0PX+nzrb2X1zmn8zbu
nFXZlvcdh0pUE0dtTc98uq659egZe+HCd0rKK/8eoZLre7k4aiX35Y3Mi9We
d3oe1HFO2l6Vj34e9uOoerZQHox7nlUM1Je0L6p9jk3jx1GTrvFdu3ULr1Np
inwWrtW9oVPtNbSSc7yIa0GcLOeZjaMqb+m+xb+WKv0qX9LyUJH3l+Xue+w9
YFzsxcaMNMXdq+lY+vvCqeRZMY3O9aR6Bjc+amuoZ2gr9xPVni+KKdvj7x+X
SvoeSdvWWvxeUh1kUh1BuTiqrlG2XkV1Br56nuNFPv+++OKLifla61KZZ5+l
8tbHxinquSnvPVufPn0T037N4MEldTSKcfps35/uWcdSXk7bF9XkkUrrn2p1
/UQ+RcRRFXvQfVta2aBJx9hny0Tdr/hlRDnKO7q++7+vssPRueyfx1nKb117
y21TuanaNvn1iKPq/Ye0bfDHytGUdi+haeS997b4HdUN2vFek6ZKrq02bXGf
K390OfqY1N+9/fbbW6xX8XjVHZZLs//crnok+w5e0qR6Tr8Nib2/t+NK+JPO
Dz0/pq1f7ylY9hoXV09qJ+0v/9kpLY5ayfEdN+7BxPl0TXIUb9Yzcbl161qU
510nG0eNu9b7k8ay91WStqznnKheu9y6445HEt03pa1H915i7/OT+j1Sm0g3
j31vzdafKB+lXR+03+PiwKqjLbfNOr+V7yopw3yqc86yn/WOrlXEtpaTZ18U
vU3+c0W1Zaq2P6kuzk72vQWdd+5zlXmWnknLlWX2+cOvW9C790mxCLt83HsU
9vk+adK26h4kC1tPYu9hHP/Z298WPW+573Td8o+Zy/f1uubHqddv1+qaIZrf
vveaNPkxJNXHpT3vuUnnlt8nkj0Hyp13//xnfDzMTbpnts+w9jro3kVMW7/q
mq20OGqtr49KS7lrt+6z8ratsfdK5Z5vdK8SFzOvJG1pzx16Z86x1960Ka7O
PUlSnZfLc6J7XfdZXPkuqpd08/j1vfW+fmTZn/aee8aMl0p+r5rnW7vecvdx
uneudb88lcZRNbWmZz4b49T9iX987PNYpdf3cnHUSu7LG5kXqz3v+va9rOzv
6p7D3oPa+0j9blpZqO/89iNJ+6La59g0No6a9K6Tm1QOxT0b1eJZuFb3hm6b
K72GVnOOV5snk+Q9z5Jih25SPZz/znst7i/L3ffoXVl7vvjrtddmTYqt+2w5
bs/VSp8V06TVnWnfSaPrGdrS/UQ154vu9xVvKfe7eo8zj6RtrdXvJdVBJtUR
pMVR1b7K3uMovfacaMQ5XtTzr/qJyFKnqXtCl/as9bFpinhuquSe7e+9eiXO
q/folc/c33HPRLYMiIs96X38uHxUbR6ppv6pVtdP5FNtHFVlpb2uKOav+yXX
hv+CCy8sOZaqb7Fsmegmnfuq58lbvqr+365H95F6x869o6L3IZXvVFYmtd2x
VD+r+8Zqprx9gvrqEUfVM4aO2bCbb45+S+e1PtO1yT3bx71rqDYXugfXe9b2
nknf+W0GbDmn76+/4YYwz6k955lnnlWybt035VEujuqXZ3rvRvec/vXJ769H
74LYslVtPNX+SH1wnHLqaSXL6p1oR+8O2W1VGeb6MVI9o11O54Bl70vcpHNB
9686RnHXRm3H7XfcEf6OH7+1dTP2Gucm7XsdZ01qe2a/8/t0SIujVnJ8dX4q
n9k6ad1X6zNbHvnXd71zoffPdByvvOqqku9Uv5GVrT92k65J2o9TpkwJzzlb
vrl3w6xK0pb1nLPXbv228qzKVrVF1rL2+U9lZha67us3bN8dOk/0tyZXZhX1
fGPTr/p9XRf8en7lWUtlt11WdWXKR3rm0T6wy2p/V1KGWXqn3f6e6gWUTu1r
/a72rd0O2/9OtdtaTt59UfQ2JcVRKylTdZzs8jpGOma6dqtvU3s/qfPOSYuj
+u8fq13q2HHjgltvvS32/tTWL+n+xb6LqrRpG3Tu6x0+e3+kyfa1omVtWazf
VZ+Cem7TeWuvh1nf5dQ9hz0m/n23/7zv15PYuO71118fe8zccajHNT9OvX67
VtcM0XOrXV7XPu17XRP1nq39Tn2EObbM1aR5dU+gewPlV7vN2j577bbngJtU
n6p9ofTEtVVXflHbHbUhtO/barLv5MZdB3X+DR58bXjPrnZXdv1ar33+TYuj
1vL6qPPRLq8yTd/rPNT9h32OV/rz9NMXd6+k+3GlW+m3z+Vx211p2pS/tZ22
bHHXZte2/f9n7z3fLSvO9O5/xfZX259sXw4fZl7br+fy+J3xeMYz9gSPLM1I
GoVRzgEJRoGkQBQSSUIiCSQkoQQSjBBDEiARBXQDakJDI1KTJFLDfvltzbP7
3nWqaq21a62zz+m+f9dVF/TZK9aq8NRzVz2F3aS/Y5fRH9C2o4+lfu2+ax2Z
78F9tE0lH/gbdi+MpaNuVv/RJz9rvsCW8W3Olqc/pX+iLDAm1d+m3sumRUdd
pQ2easynGqcmvj/jsiirLf17TUdd1S5fZ1lsqXf4/vV9Tzvt9EV7w7dUvZE+
I8jZxrR75D2aA2NWtWlirkbQR0eNNGQcW0N11Ej4jCjvjPvpT/X75Wy7KcbC
U9mGrX1oSx1v9c/UvuGQehbpwx8+ZN6PkNT3Q0o1uCnsyz52j66rIkaRkmrp
737Pe5Z+1zgROg5tGSvWILYkz67tFtfjb7H2dJ1+hu1mT7TUlzPPPGupHnM8
9h7PR3ug50X/2YfSu051v7F0VNpbzU/a8VTTW1cdhxbbi75BbRBs8NhHgrqU
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
qsbar83LB9YTx7EaH6PUJraAXyHXng6F56H/bkl9Y8mU2Io6as2vk2vXte0a
ktL9p2t06ai1Z861M0899dRSX9tXn6Lf0naxhsYK0Ll0apeEjazo+KV0jz7r
UWv1jX0G4zgdP+Tq6xjft9Zv1/wTpdR3/riOhbvmYuqcxvAZtD5bV50jb3UM
kqbULtpsHVVt19L4JuyVHLnxje7n3ncOebCKjqr3K607D7D34tiIo9Lyrl2s
mhdjvlNJRx3apmpsbPYsHUJujKTfmmeqobpA5L3uMTgkabuJ7Urs9tL4hIR9
PVTH0D4AP7u2scyN1JgE0T4zzzH+ls6tbtVRh/b5fZjy3lP2GepPLsUR6zqv
ax+d3DprrQOl2C1qz+fu0UdHrcUcBvYSimNjj4+Sjjpl/6i+xCGpL2orsZ6n
hK5ZiZiHYzxbrfzzvdL93Wpps3VU7T9KOupm9h9d9835AscY33bZ8rAddNSt
Nubro3G29u+1e7Ta5esoi6vWuwCft9oYucQ4grof9LWNW3TUVcaxNVRHrcWN
gDgu5h5NPRZO86TVNmzpp8Z419Yy2UXfelZqm0s66pT2JXTZxmoLkj/6TOHH
iPYp5vOzDjjO0XVirWPFPrTqqFP4GbajPdFaX4hlqvZ7LqEZDdlfr9RGT3W/
MXVUUimm97rreOvYm99qfgn9bSoddei4aQyfTE1HhcjXiG+v9+R5uVb8O+aV
RBzoNGZhSxkZ412n7j9NP1p01KuuunpxLvPgajDejmPReIKxdVR8Rxp7QuOt
bEcOBB2VNQvaDjDXqk/C59eXsXVU9SsOWVOsY+8u3z42Y66cql2SsyvH0lFr
vjXdF4R+KcjV1zG+b63fVp8yz9/n2rm9zXPod8beq6HzgmJ+WOuz1eocZSld
E097zRxi8osx3osvvrgUy3GzdVStO2ONb9iLOP5W8tOWWEVHZb5n/I35aDV4
lzg2yu+UOuqqeTHmO42lo6p/qpZPOXJjJJ2z0rWGTn0FkfcXX/yDxd+Yx9K3
3cqNDWgPmJ9NG6Bx3bUP6RvLGXSMT/utNnesAYx5HeEnCVs/N5Y72HTUKfsM
jUtQahdzaDtdi/cPuRjyS76zQlswho7KHNsa2g/GnsAlHXXK/lF9evzW59ql
PWRyqK2EP76E2kqxR/MYz1Yr/2nMNPKZNo52AruMb699wGbrqKoNjqWjtvQf
XffN+QLHGN922fJwIOqoU4/5+uiorf176R5j2OXrKItj+dywu9DrGBfm1sAz
X4j3h83QUVcZx9bQdoY9X0ugR+r3h6nHwjCmbdjST43xrltFRy21zSUddUr7
ErpsY+Y0qB2nmjbtHmg8R7QktRl034bWsWIfWnXUKfwM29GeGKu+EF+PtoP3
zmltQ/Zpr+moU9yvVUelH9BxECk3f2Dddbxl/JvG4acfoP5TrhirMf7EXxG/
T6WjDh03jeGT6dJR1ReE7R1ziRYxJV6xXbTN1/2b0nl+LWVkjHe1jro1aNFR
d+/evTgXu62G2mva1oytozLPR3VUytcqcfW2CgeCjgrad+4bMPeoL2PrqKBz
TWL/xRT+Th9EChtUz6u9q7ajGmdls3TUmi6Ti10Ppfra+n1r/baOsW+88cbB
167RN54h7xTvqMe1PlutzhFvX5+ttEeClv2pdNTcXnug+9yPNb5RvwA6YgnG
QVH3wrZYRUclLlj8jbFnDbWbIibNlDrqqnkx5juNpaPqWL+2FzG2bbwLcxah
NEbSdoe9G0ssxVT9x7zHxo6/dc2hGAr5yDdQW2TIemJ0kDiPehi2vsYtwKaO
Y9QnkLvPwaajTtln6BoO8r0EdYAyHPXv/R/YHwOaPRFLqH9Sv/dm6ai1/KZ/
iTqnezyVdNQp+0f6m/jt5FNOGXztLvrGjtTniOPGeLZS+ddYKaTSGhL1J0yl
o+oeQ4r6SMbSUVv6j6775nyBY4xvD1YdFaYc8/XRUVv799I9xrDL11EWp/K5
EZuHNl/bpNtuu23+22boqKuMY2uoLUWfXULLlx435VgYxrQNW/up1nfdrjrq
lPYl9NnvJ+ZpMMbQcWLEKVVbjz47/FLp2pLWsWIf+uqom+ln2I72xBT1Bf84
ZUXHNUP85n101DHv16Kjajxl1dOoG2kMp3XX8RbbS+e6Ep8z5xfUWO9T6ahD
x01j+GS6dFTVj7Vd1HXfEb88bVvDrglaysgY72oddWvQoqOm+yPEXLjccepP
pF8KxtRRKeNch3EO455c31x6xq3KgaKj6hqdmk+H96WskHJtYIkpdFQtQ/Q5
ObQviFgdeh6xPEroPmv6bTdLR63tia7fS79Dqb62ft9av63PnPb3Cv1dXLvv
2j31H5PYQySH+k7UBm59tlqdYw+8+O24447PXlfPJ42po6o9kivHjJt1XDXW
+EbjalB/c+/EfFrtU2IvwFV0VL1fab9h0P1UdO/jKXXUVfNizHcaS0dN7YU9
ex7Knqu2aWgEpTGSrvmgDcmxd+/epftG3qs/indJx1EBa03JQ/KHef0x3mNv
1KjTJZ8CNlXcY+hevxqXK2z9T3zik4vf1cej4ya1r4KDTUedss9Qn3FpjUv6
bdLzGMOXUN+vap2bpaPW6qb6ZNFkFn8v6KhT9o/6LLU1tNSHuPYQnUqfHZus
hNa98LON8Wyl8n/dddctrl3bczDWIJHG1FHVViuVY7Vhx9JRW/qPrvvmfIFj
jG8PZh11yjFfHx21tX8v3WMMu3wdZbFlLMy5XDc3TgjIizg39g3fDB11lXFs
DW27Gd+U9MGjj/7U4rjTTjs9e8+xx8LBWLZhaz/V+q7bVUed0r6EPjoq+4nE
MREjRbV0nfutZSD1I7aOFftQ01HX5WfYjvbEqvWF8h3lUPdbTdHxA+vw+pB7
1ynv16Kj6rNgH+ial3SN8Lrr+Kq2l66nnNe3f4wNkXLIIR8pvt9YOurQcVOr
zQZdOirz7dN2k3TJJZcsjmG+Udp/Rhzg0rsOLSNjvKt11K1Bi44KqgWpHado
XU/3XhpLR41YO/SXoGOd2EuKveT5N+3XdkHn7LAffBe7du2aaz4k9jUfgrbr
uT2yWsbUzHWMvzMmzY1NWKOhdtqQ+Y1T6Kg6T4+2NF2TSvum9g7zXED9oLTT
lM3au/Js6vPcLB2VlBv76N4M6TyxUn1t/b7abzM+UG644Yal50EXSXn66aeX
vkXfeIup/xg/QWrnc4z2t7oGqfXZanWOsXn8pj7rAHsAX7g+/5g6KuWm1rZr
zNnU3moa37xi92l9zs1hoE2P39HSgr5tmLYT1E+1p3P7vlBW1QepZXRKHXXV
vBjzncbSUUHX5OU0KB2rk6LNLY2R1N7F1szZokceedTSNTXvde8WbIYcWg/1
++o+7CWftK7LKl2/hPalkXRuMu1yGiMJOztHHx117D6/iynvPWWfQfnRPM/F
a9b4ZzF2Z68gfSbmp6ewF6p+K94j2EwdlblCaR9Om6J+U13bUtJRp+wf0/PQ
F1OoI6y/6Mq3HKmtdOVVV204hrF3/K5rGsZ4Ni0HapPovkLcI/YYUNK2Y0wd
VXU/7M/UXlLfPGksHRVW7T/0vml+QkmvaR3ftuqorJlZdTyXYzN11CnHfH10
VGjp30v3GMMuX0dZbKl3Ov5h/WkOXTMW7d1m6Kil9q02jq2Rtl85HYA+X22v
2MMcphwLB2PZhq39VOu7bpaO2lXPhuqoU9qX0GUbp88WSeOagbb3kfbs2bN0
TOtYsQ81HXVdfgbYbvbEGPuU8a1LfiLVtjT2c43cu055v7F0VKDNLPUj667j
q9petNf6Tjm78brrr++9P+rQut4yboIWmw1UR9Xxs6L2RiT9vuRZ+ntuHnxr
GWl9V+uoW4NWHRV7UssaZZhxIf0uY0DaM/091UpX1VHpP7EZsOlos+mfKKux
7xRj/7gu9h1tKWXtggu2Vzli//N4jzQ2dw7WpsfxGsOgDzpPg8S+9NjA0Qe2
jKnx9ajdQfuBHcjfWQOodT21lfowhY5KGWZ+X/yGRkG5Im4K/ki1DblP+LOw
qfR56CfwfZG/nIudqn1Y+l03U0elzpx3/vnzevzAAw8stdmkNA5Qqb62fl+d
E8l4j7GszsPT+QT8zl4TaCbEuMPHpGsvSvM3c6T+YxJ1jhjN2Ns8h7aRufxu
ebZandP9NEjo88xhZByEnaNr8SIxjyK16WvEeTkdNd1D4vgTTpiXY+aMqq2S
+6at4xuNeR3lkDYc25OypPVHY4f0bcPSdiLdT4I9gLgXeUk5TmPQqF43pY7a
khdjvdOYOipzfvWZYq8SyjV1Rb+PxkorjZFoX7R+UT8ZI/Au5LHGR8rlfbp3
CmsMaAvJI47DxtDfdU8g7qP5R1mLOTPYITyz2s9DtQzqcvrs6bpX1etIGptG
KZX7Kfv8Lqa+91R9Bmi54hvTp1O3KDOHH3HE0ntpP6bxRTgPnZ314/RDlCf1
K6T6wGbqqCT8huQZY0PKrmqoqX5W0lFbv0NXGdGYSyTse+oe5/GuGhsEfw5j
2r6kthLlEL8xfSDjbI2dSErj67Y+m/6OL5FvwHdKvxXz6GkrKEfk53vf+74N
35L4VaV56TlqOmrqo6cNwv/OcaxJS/33Y+qoq/YftfyEkt+zdXzbqqOyb1T8
NnQ8l2MzddQpx3x9ddSW/r10jzHs8nWUxZZ6x96v8XfmqxPDLt6Hd0vvHe+y
WTrq0HFsjVRHJdGn890pT8xlVLsu4lAFU4+FI8/TZ1zVNmzpp1rfdWo/cN96
NlRHhSntyy67B/h/LYekdD2n7rNJ0vWqSstYsQ81HXWdfobtZk+01BfWm8ff
mRfBPE7KEN+D/GZdf/xeW5ueUnrXqe43po4KOkeE/FU9d511vMX2UhuEvI2y
SX5Rv9I6xXvqHIE+fVCJ1nFTi80GGvcJ3xXjknTtHLaCXiNdh59rW3PzS6Cl
jLS+q3XUrUGrjgqpzVpKuRg4q+qo6X4caRuetlGk0vyfrQhtWmrPUx9Zp17z
h7ToqMA6hDTfol9p9Wumc2BKibZm6Lq6KXRUoEyl7Wkupfs60Hb3eVfa+dTf
uZk6ai3l5lrX6mvL901jUZB0nhJ7Puo3LiXqSMR47UO6L1zt2pSD3Nyu1mcr
1Tn8leibtWsyrlU7kDQkfmick9NR+SY5n5Am/X3M8Q3lQzWHUsKG6ZufUGon
0jnXtfSjH122dO7UOuqqeTHWO42powL/7noefHXaLpbGSKCxc0tJ7Zw077Wt
rCX6tpR03UmpHRka0zdQGzwXcysdD5T26yyVe5iyz+9iyntP1WcA2qLqiqWU
ahXUqz7PxDGMsZTN1lFraUN8wIqOOlX/CLSNubnFuVTbkzaH2kq6XiOXGFuk
Nk3rs7FXWXpczO3WGJqlRNzxNH/7UtNRQWNa5pLWjTF1VFil/+jKz9oeXy3j
24NZR4Wpxnx9dVRYtX8v3WMMu3wdZbGl3tE/qC0SKfdtI6YvbJaOWku5cWwN
9bt0lV3621yfNeVYOBjLNmztp1redWo/cN96toqOOqV9CTW7J0jHhamWnurt
1JscLWPFPtR01HX6GWA72RMt9SVdW1tLfTWz2rtOdb+xdVTiCeuzoIkH66zj
LbaX7gFaSjmfUqxV79sH5WgdN0GLT0bjH0QidpjCe+rvuf1JUt9OaQ5uaxlp
eVfrqFsDnTOSi+nRF/qPkt7ENy7tE6n+gJtuuqn3/XT+FNdP5zSAxpmhjx2y
TmudpPMDcykXEw50LcQqe+0wlyK1iaNdjz0KansjEHs4zsvtMc1cUfX1aeK6
J530+UHz5gPdPyH399ozM1e/9szMZSk9M/1gKd4W88tqvlbmBeViDelaF+zg
FNVRS31bn33jqJM6py7tV3J+2K762vJ90Xu17KXvxlg+Nz8xEvPbsKuHoL4S
bCwtv5r4jrV44C3PVqtznJOztUiMS1nfTDnTthf/aV/inJIvivcq3Z9vqfEv
mJcfMJ8z/q7++hR8g7U2LZ3PrG0+c8xzMQ37tGFpOwHYczWbhnNz9v5Y79rF
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
8nW+8Y1vzK9x7le/OuLTtT3LOeecs+5HWcJ1fPO47LIfz/OZsnAg8KL4nC6/
/PJ1P85asN/24KLke3rkkUcWf9+xc+fi7zWfW40HH3xw0Qfu3HnnqO9gzFbg
2Wefnf3qV7+a/frXG31dHz300Nk/+af/bJ4OFB+vmZYf/eiyRZmJdPPNN6/7
sZqgfpCw01P+43/6z4v3NOPw3HPPLfL03e95T+/zHn744cV5r3v965d+Q5uN
74jNbLY39FvxrV/1f1+99NtWq5MvvvjiouylfO/73188K+O47cJ2tRs+eMov
Zv/q9dfP0813ru7XMnV+fMMTi3w+/uvjalq/evaleXr+hZdGva7Znrz44suz
Pz3054vyRnr1J29f92M18exz++Zl/NfPbbRVDsQ2DJssHTf0Teh5ZnW0v77l
lluXfuvbz6fnbTVqY4NWanlkDm6OOebYRbm75957V7qGto3//Q/+x8hPmKeP
z+Of/4t/uSnP0pcp67hZ5o//+E8mGWOvy09D2x3v8453vmvT7qvU6tzU2G97
8FHyPaGRxt8///kvLP5e87nVYC1MnPfV884b8xWM2RLUbKKt7A81W5M//KP/
udQX/6t//W+29RyUX/7yl4t3efPfvmXD7+6Px2cKHfV73/ve4rczzzxr7Ec2
m8x20lE/8tH9/eiOHTuWftuuOup2tRsORA1iKzKVjvrQY88vrvs3n9rRfYI5
4PnRT/cuaaj/9g0/nb3zhK3V7gzl/33HDYt3STkQ2zDrqOujpof27ecPZh11
q+pKZv2MoaMyZohrfOxjHx/5CTfS1+ex1cq7ddTNYyoddV1+mnXrqF11bmrs
tz34sI5qzDhsV3+o2ZpoX/zQQw+t+3Ga4R3ifd705r/d8Dvjmje+8U1rm8N2
ILKqjvr000/PvwXpC184eem37373u4trfuXMM8d+ZLPJ1Gy6rVYnVUe94447
ln674YYbFmWWOaHbhe1qN5x9yS9nrz3qjnm676Fn1/04ByyboaO+/mjrqGY2
O/27exZl4sOn/mLdjzMKNR31QGzDUh2VeIEXXvjtXmmrx5Td6px3/vkLG+T+
++9f+q3Wz9fO22rUxgatbFVdyayfMXTUr3/9gsU1NiMOZZfPY6uW9ynruFlm
Kh11XX6adeuoXXVuauy3Pfgo+Z6soxozjO3qDzVbkygvlKsDgXXbNwcjq+qo
NayjHlisatOtg5qOul2x3WBqWEc1m8UJF+xelIlv/cMj636cUajpqAciqY5K
LHyzfraqZrKVcB6ZEmPoqDp+uPvuu0d+wo1sVx3VbB7WUcdl3X5G+21NYB3V
mGGs4g99/PHH53Xjnnvumb388su978XYGD/yrbf+fPQY8Fx7165d872xh47B
6UN5P97p2muvnb8XWs4QaGNuv/322TXXXDM/f18mtv+TTz45u+6662b33nvf
oHyDPXsemp9LzPrc/Gv2gL7zzjtnP/vZz7L78OXAd0F+/eQnP5m3ncRxYE5f
C1Fefu/3f7/pOn0hn3nu63/609kzz/SPcUYeXnXV1fP9xpmX8/jje7PHjdUf
802IP/aDH/xwdtNNN/X+Rsqq79oF70i5ufzyy+d1k33GN+vZKIOMLx999NHF
39apo/I81E/qA/mxe/fued0aA+o812MsvMpeSpzPs1FeV12DQd5S/m677bbB
7STfiHuzb/xQeHbWLFDn9FsHQ9uidemoq7SZY+iokX+XXfbj+dxB/n+Vckm5
oR8Z2nenbKbdMEa5X5Xnnn9pdsPOp2e33v3MfB/Gvux++Ll5vNGLf/L47LZf
/Cq7z2GOR598cXb5jU/Mz9tx768H3TN48NHnZ9f8/Kn5c+99emMdJ+t33vfr
2XW3PzXfg3EIDzzy3OzKW56cX//pX5XfaYiOyjvefs+vZje/ksdde56uoqM+
uveF2fV3PDX/JmNCPt7/y+dmd+1+tvf3Dfa99EqZ3vObvCSv+NZPVvKzxJTf
muvdsOPp2U9ue3q259G8vc79r7r1qdkjT7zQ+7p8w+te+R7UD775w3v7n5tD
ddRLrnu86Vp9oSzx7X75eP9nZ89TvtP3rnpsfm6tPI6ho7647+V5uaItueLm
J+f1YBVWedehTKGjjmFzP/bYY/MxYYt+sWfPnrm9cN311w+2jXfs3Dm75JJL
ZldffU3WbipBP0ms3UsvvXT+31XeHdatmfDcjEnIh7Hs8L5g5/LdiBdaY2ge
tdjR5AfjfMZsq+RHa36OUR/0WpRN7Fn8Jq3roCjzvBs2Mvn7wAMPZP0wXfT9
7il79+6d+6B0X8cxdFR8KVG+4pvxHbHjGYOQj2Oyqo7K+/E8Q/NtO9RxhTJF
HaRdxkdAXeizl+cYY7gp/YxcG78A79Q1Rhuiow5p74bqqGP5lEs6Km0KY1b6
bvJ1CEPK9RA/o/229ttOyWbpqPTPl/7938/ryFC9Zao+YwwtyBw8sF+9jls1
0QeD+kNpB6hTYdNFwpZijXytLNPeab8b6c///C/m8ZtaoA/lOukzHX30p+Z1
guf9r7/737J7z9HWHnrYYdk84Bp/97GPzeOspxx+xBGL42gLzjjjjPnxev5/
+Z3fmbe7cOVVV82fIb3+8cefsOHa+JrjGPzv2EKvfs1rNjzfJz7xyXn7TNv2
/g98cMP9+b6cmwN7g7gnxMDPvTv9zs233NL7G9Cv/7t//x82XI9/k2jr4EMf
/vD+McUr7VMO3e9c21zNl+OOO34+ZiHuffrs5DvlrQQ2aPotIpGP+DyA65fq
B+mFF37jU/o/f/mq+TuW5nExrsqVfdJf/dVfz8tPyljv2gU2a1qfI7FfAntV
TPVs2BTkXXoOdUvvMURH5VmiHH7ggx+c/41+uvQN1Rag/aItKtUJ2pM+Y6XS
c73r3e/eUEff/o53zscWhxzykXmZfNvb3p49n3aKOpmez7c79tjjsj5Hxnhx
HHYn5T5XDvkGNf8cbQXfJM0X8pn6kht/ck4cR9/AHBDyOv52/vlfWzp2lbao
ZtPl6iRtcK0+pwk7PX2noc955JFHFa//uZNOmh/DmDraSc2XgHJJv5t+exJ/
o43MjXe1j6If/Pa3v7O0J0icT9kbUq43025Ypdx38elz75/9hzf/bJ7QGAK0
htBi/uGmJ+fa5x9++JalfRdJf37Yz6t6BOvhuHZ6HnrIMefvLuptl1y/d/Zb
b7lhw3mkj35xV1YDQ3ONYz5w8i9m9+x5bvaXH78te/5LL70813HedeLd82fR
33/vAzfPz1XQj3ke3uWjp++a7Xrwudlf/N3Ga//RR26d/5bSR0dF28zl8Z8e
+vPZ+T9ansuz96kXs3kT6YUXl/MHPfbvzrhnw7fgnciDFk2IZ3nbsXduyMe/
/ezOueb0/i/cPfvd9940e/Nndm44l+dC98uVkdCGb7xzo09kym8N/9/7b5r/
jn5HGeUd0mu/+pO3L8r+Fy58cEN5/X/efsPsh9eWdUzqRtwnTX/woVtmF14x
zB982ncezOYjf+Pd4euXPbL4+1f/Pu8rRS+OY/iuuXyhTKJ9H3Hmvdky9ZWL
yxrA4698u9cecUf2vbkuWnXA9ymVcfRyKLVhAXo875G7Bt83rpMyxruuypg6
6io2N4SNgi2G74T+aYgdyjlhf37845+Y6wpq90T6k//1v6uaCj5R7MXc89OH
Rz+bA988fuDcubwXdmAKfWnYILEnWp9+Pnfeb/32by+Oq+1ToOO8v37t6zb8
ji2Us1eIQbfKfri5sUEQtgl+BMrhpz796ay9e8455yyd1yePglXsaIW9zNJx
K3lNPsWYllQqG6vkZ2t9yIGtSmzaUv3kGS+++AeDrsnc8r95wxuy1yN/sT9j
vK6s+t0VrnvEkUcu5S35yv6c6FGtOir+Yh3n4DtO9zIkMXZu1bb7+jxUR33q
qafmYwjySY8lH7t8e9uhjitxXi5vqIvEmM8xxhhubD/jKaeeumi76TPwj6bX
5t+nnnZadozWpaMObe/6+mmCsX3KqY6KXznnG+Nv7FdcY0i57lvnIk/X4beN
Pp1jS+Afi/PTudPxd/tt+71rCtqxlqOcv0bb31z5V/9Xl+9pah0Vv3OuDL/l
rW+d51mNsfuMYFUtyBzcUJdLbQ11DtQfWmpTIqGRpbYA/6Yfrp1Hor9dZd4g
vuHadVWnQXdUaE9r46BI1Nl0vp/mC/W3dC5tBfZJ7fonfu5zS9fGvojfeL5S
n0liXPOnf/Znxd9pW3NzPBnjd703iTWKfSAva9dhnAPqGyjFe0S/iGN0Pprm
C+NuHa/n2r2cPXHBBRd0vjPfm7EL2lLtuJijUtuvHB2yTz4z16lUBlZ91y40
n2vpjC9/efRn431r91T7dch4XZ+NcSxcdNHFxfvQpgVHHXV0Z17g/xo6Hw37
Lx1jpnU06jh2Ygo2SG78pYl2Ll2np3vIM6asnU9fkLNfmIdR0tn1+dNxhdpb
fIe0jKjNtmpbVLPpcnUSm7HPfSJh6ymrPCe2V+k4/Cvpd0rn+vBNc3Noct+f
/FC0j+p6dsaNfef0bYbdAKuW+y4+eMovFprAzXfunxuKhhN/f8/n7qpqdr/z
7hvnWpqCdoW+VTsvp9Pw6h/78r2d56FRse5RQQtUfaykzZEOOW3X7E8+cmvx
d/QRXXOIlqbvW7s26bIblr9DTUflnT//rQc63xkdlHwF9Lvasei+ATphSa/T
92UN7FDQ10t6d1w38gotNQVNuuu9SazX3KxvDbr+kbkCpXPR2NiDtPbszENI
ueiax6rnRGKv076gJ5aug+YL51zy8OJvZ/4gPw5+XDTqdI1z5Av1j2vWnj13
fTTxrrpDirJIXSsdwzp1KLVhwHV41q77oZGmtL5rC2PpqKva3BB9FTZNqsv0
sUPVF0s/WRu7kejjUvDf1mzqSPjzU/DzdN2ThM2haH/N+kAY2s/HeWprvPe9
7yvmlY4FVbvAvi7pwDX7rIvc2CAIe5F8Z0xTu++55567OK9PHsGqdjTgF1E9
JZdUV2P+pNKSn631IYUxM3NF+9RP5tn2gfg+XXYiCX926mNa9bsHzHfIzZNI
v2v8/yo6KvnQJ79I5EPMZ1iFVXweXT60b3zzmxvus53qeIAPkPF/1zOnc2HH
GsON7Wf89Gc+s/itqwyTX2l/XNNRV2nv+vpppvIpa9/dpz1J+1BYpVz3rXOw
Lr9t2BS1eAv6bBpzy37bYe9aQjVk1owrrEnSa+f6ZtW5iW0yf8+C72lKHbXm
CyVR1nLawFR9BrRoQebghrJNmdM+g3+TmFcB2o9H+vCHD5nHCiIxD2Sp3U3a
hbRvRPfDn83co8989rNLv9EODyFtO+hrmWeB3abrHiOlOqrOK2M8xDMxB4W1
W1xH6/vJp5yydG4uX7g+7eqXv/KVbD9MPT33q1+d22ipXaU+bG2LI9GGMo+D
/GTOUa6OMyeSb8d/dSz9pS+dsfTszJHUthy7D9ubOW08u9pHzLvpA7YNbbLG
5KDNifIU8TDG0lH1+Xk/5jbzX31v8nipvLwyhtFzsbOZP0iZJQ/0XMopdiPP
Tp7E37EN+RvvGt+s1B8zx0/vRx/Ac5LX3Je81ffQNYGt79oF2rqW0c8ec8w8
H3g25jKl/ZXOf2p9NmwsPRcfwJlnnjUv2zl/QauOyrvyzTS2KuWQvxEbJ30m
3uW0005f5AffStuCk076fO/noQypLcX/Uz+5Jjpa2k6kOiprVfV3ygxljzaK
NkmvzbmqR6mNpO0c35e2Lp1XyzzHpWd/5Zur7UY5p54Q6wK/Vzp/Q2P2qL2l
ifrDGtzwkbS0RUN1VPoLbMlSSr8F876DVZ8TDZ1ypnlF38Lfwt9R01GZ5633
pe/guYgxhH2rz0sdVnJ9FHXi+xddNL9n6s/qO/baDLuhpdx30UdHjYSmwbrI
H1z7+Fx30N9YU6h87UePLP2O1sQaU/SwVO8hrmfwzX9YPo9jWS9GvNMvX/TQ
QtsgsfZTX1W1tUhod2f/8Jez71z16FwTymkg6JPcN12veeq399dh1VE1P9BE
0Uh5f+4Vv3EdXWtb01F5tlT3u/SVvGIt41Fn37f0G7ojEPuX9Yxf/N6exW9o
pfyNbxf5wjo6fS7y79xLH57HnmUdXaovDon1yzOoRsX/k4ffuPzR2afOuX/D
2s9URyWObfzGsWh8rCck1ivvpWtzX/WJ5XVjU35r0HIWz/e5bz4wX6d9+Jl5
nf9Nn945L/d8X9X/XnP4cuxy4vhq3hx9zn1zfZF3p3695ZjltZPEo+0D8Yr5
/n/zqf3vfuRZ983/RixiGEtHTfOUNoFyla4fVT2f8qLnU175znxv8lW1fvIP
mI/A82t+8W8Sa5Kh1IZR9vU7sMaXb08+E+/4Q6cs698/TuY+tLxrK2PoqC02
N+Tm/NDXMOZi7NaF+mLV5sJmxDeFjaU2FXay7u9AHqg2h20ctgLvkc6X55qK
rn1A92JdH3YP9paOiXl3jQOY00OH9vNxHv/V++RiLab5pHOhdO4Z59PfY6fz
/dBl9bw0ZkiNPhqLJsYi2MnYeqmPLXyxffKoxY4G7HX9ne961llnz23BnP6R
6qgt+dlaH1JOOPHEpevwDPgB0F14bi37jJO6QCfRZ+S5Ys8K3iWNB5OuV1n1
uwfpWiOeGfv67LPPyepIq+iorEFMr4PtHvYw6570t9TPNYRVfB5Rrvi21AfW
NqjeyG/pWuDtVMcDHbPQbrPGk3YVTYIxrZ5L/KVg7DHcWH5G1VEjkfd8Z1I6
9zqNsVvSUVdt7/r4aWAqn3Ku76aNIh95dvyv2j7FWmxllXLdt86t0287lo6q
z2+/7TC/rdbXdG0L+aD35B4p2h+FTbYOHTUS68bpK2g/WRuvbVnu2lP1GdCi
BRkDffc5I9GWp7zvfe9f/K6+eOwQ9XdSNlOoB3r9IWu91IbNxcPUuEFhfyha
N3Jx77F14vc0vnqaL8SpVzSmJom5ZOlafF0rq/Z12hbT1qodytghtdEjrkeA
jRa/pTqUfq/cfGjsiT79ZgltJ1PG1FHxMaRrbelb9RjNc2IGaF+crr/SeZ8a
v6LvXiFpf6xaJP176uunv9d5keTNWO/ahY7NsT1z6Pzjml009Nl0zEHZTMdY
WnZz5bdGbRxV23eDdit+i5gXis7Z0LmRXeDviPNoC9M9LLiu2lWpjqplCJ9A
WoYYr2kbS94FqY6KHy0dG6IXl2yX884/f6kup20z303LiM53TXVU3jFtI6Gl
LRqqo9ZIYwql85Fb28za/qglW5b2Mf7ONXMxu9L+U9vUtI9K50nT/lFH4vch
8wNgKrsBWsp9F3111PeedNcGneBkWUNJjNuAGKq6RpG1liloTfH7O0/4zXci
xquehx6Wggalx6ALBam2RpxXjW/LWs50XSYajoJmG7+9/bj95SfVUdHgHn9y
WdtgTa5qc8d9bb+2XNJRyVPVInNxYK+8+cmle2tM4679Uc++5JeL31k7mcZD
Jn80xuqx5+/ecI0SX7rooSUNNd3PdNeDzy7lR6qj8t1LGhaQ53F+ui/mlN8a
VEPjGdI9S4kXrNc+OSnjTzyzb6H9cb5y3o/2a5no5Dn0mwxdJ6z7o6KXK2Pq
qLyfxuAFYgJr/bz29v33/7KUF45J6w9lU/XS+x7avx6ltj9qqQ3Tso8mn9u/
WNshyrC2cS3v2kqqo9K/4NOopdRf2GJzQ6ob4YsbMkcn9cViE6T7dxH3Q20+
tTfV5uJZcntp0U+rTRk2Hc8Zvij+mzsXWzpnx+T00KBvP6/nqb851/ej78bv
OnZnz0G1efBppqitzhi6L301Fu6b6m3ovOovSNdK1vKo1Y7W+6LPKXzzdD6k
6qit+dlaHxSNTUj5z+3np/YsGlcX7BHYNS7Dd10a97V89zRvUx8M9TJdQ7iK
jprOd8yNP1RrJW9X/UbBEJ8H7666IVBu9Rido7kd6zjrJvUb5Oac6pyGiKs5
9hhuTD9jqqPmxn9oBvr86ict6agt7R3U/DRT+pTTvhu9Nz2XMqK+V/WdtZbr
rjq3Tr/tmDqq/bar+W3VL5q+j9p1ubqusY713HXpqMw3Sr8jaw5US9UyPmWf
AS1akDHQd5yke28rGi9R5/8wfyf+nu5VoOi8p75x7Ynlom1naY9tbRNVR6Vt
ZN4WugXzHHJov5rWS82XdCwOjJ213eB5U3Rups6fSNvinO2lfRbz5FJo6+P3
VJvh2fkbdlCpDdc4QUNt8lp/PKaOmtvnB9RHEXOC0zlGpf3idU5itNWr9MfE
ztd2X+ecK3ptUvQtLe/ah69//YLFfjqlOEBqZ+uYYqzvkNrliupOm6GjfvLw
wxe/Mb83B3Om6P+HzEfS/jmNxRFoO6l1lXoff6eM5fb3AfYaiuOwtQO1kfgW
acwgUH0Y31dAndfvVxr/azlnfBPlN9VRmUOao6UtGktHZQ8QfdZcf9DaZq6i
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
vM9aEtqHPu2F7iUzpo6qcxIYW+bQfaV0HNwHxip6bmkfUl0rUBuPD2FKHXU7
1nEdi6HL59D5nxGXfeox3Fg6KnvclNDv1dU2tLZ3UPPTTOlTTvtutJMcql3p
fKfWcl2rc+v226o/JfyitXuPpaPab7sRjbG5vE/v/rHDG9/4psWzRd68453v
2nCtdeio+PdLWqhqmro+bso+o1ULMga0PUnnK7T4Q7W+06diU6Y8/fTTS21g
6R4p9Nd6Xm5OLvVQ23bVUTW+fS4mIG0wmkap7mxXHVXzJDemYV4l7e1U/THv
mfsegepnqR3V0kcxxtJynrOFdTyi2rz2x7k9j3L9Mf2NzkXUPZgC+hKdq0ps
pjHetQvmNWvZyI3P0rinY+mo2Kpab9nXO4X81jH1FDqq5jWoPcL60xy6Thot
ug+6F5TOMw3UbiOpjpq2jbl7Mv7QuSI6ZmjRUUHtC+z4HNqeaFnoY2+1tkVD
dVTsa/07dbzkmxjzOUF1VPpFpWTL6jxgyifvm6IxXPiO9IvBZumopDHthtZy
38UUOuquB59b0jDuyaw1RPtKdTRdP8l1WVOWwl6oukbx+jv2+583U0dljVvE
7A2IVfsHH9of0/jU7+5Z/FbSUXl+fee9T230fz75q31LWo/GSlYdNbdvq+7V
inaZ4+RvPdCZbzlec/h+nfDQL27U5K6Td0t1VL2n6s3B8y+8NNfIDzQdlTWW
ek807JQvfm/P0nuPqaPyHPEb8xf2JWVY5wGMqaOCrjfPza/Yce+vl+5NnUvv
S3px3/Izl9qwN316fxvz0S/uyj6r5nVaf1p1VNZJMB4h7dg5LJZxq47aanPD
2Doq48zUZ8Rzql9I1/ioPz03PgK1zXU8cuVVVy3+zhqEHBqPVMdnfXTUrn4+
p6PST+f2tCvZGsSfUJsu529Tmwc7oe/6hM3QUXN51GJHk6dq37FmWUntIJLq
qK35OYaOqvu1nXXW2Rt+Z35p+H2H1P10nmquvbnu+usn2R8VqLfxd3zuOc3o
yCOPWnrGIT7zb3/7O0vnUu9TGMvH+/Ffjf3M2DLa4pImVKKvz2MVHXU71nFd
p4Y/L12zxDhSxyzEkoapx3Bj6aiknD6h+3DzbKp3ltqGlvYOan6aKX3Kad9N
/5i25Ryj7637AbWW61qdW7ffVq+t/QuQR6zH0HuPpaPab7sRXW8aSf2GQD+r
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
+TziyCOzz4Q9zlwzjtGxHHbaWM+Glpqbpx59FnO8Qtes7Uueos/GXMIUxhH6
HbVuMmdSxwZpoj4wp20VduzYsTRnlcT7Ua9413im3F7PlKGaFsvcrJwPS+fx
4V8rEfU8vm8KcVVzsdlIjNVzsVZ0LiDPV6KlLardI1cnh+qo9FljPCdQl1j3
reeFjqrfKZ3zC1xX62GamHef80v26bt17vCQegZT2w2rlvsudN0oe5YG37tq
v4569iVlHTXizaJ5pbBWkjVgJa3kh9dunBMKaCi6RjNNaDtPZvb6ZF1bHKP7
pirHyr6caJs5ctqw6qjEykUzSdfuhVaY066uvHm/7nbSNx/Y8DvXL+UV6X2f
v3uuHeZgbWf6LKqjAmsO+Ua5a/PM6OarQjxmYqKmuh9aIOtq49n+KNkPlPfJ
acDxjR998sX5ukGNacw1YcpvDZTP3N8D3ef06HPuyx6je32y9jdgTW26JjsS
uvOtdz8zP0b1zFz9KqGa47W3byyLwDPn7k+9I98jX4iNOyRfgPWzcb2v/eiR
Db8T77lUFmmPuH8K65TTuQaho5basIDjtAxp4j1L7VDruzLmivaZuCZD2KCj
DlhLoaxqc4NqHqugvlj6J8Z1ObsDuwn/egn60ZLfkuuV9tqbv7vEG80l7PKI
hRFof838JqVvP5+ep6j9UtrfTWE9VBorUO1wxolDdfba2CDsxdxcwgAtKs7X
dS9Qy6NgFTs6oC7gz0znejJWwv/BPMn4W8QUVVbNz9b6EGhsX034aSI2Zuq7
7lv/+Ra5OkZeh68zHeuSH9D63QF9q6TrsJZN4/P2HaNrzGLaUY2vmuZfKX66
+sRW0VH7+Dxq+aaxJXP5tt3qONBulp6Z8WHpW0w1hmvxM6qOSn+SW9tOou7k
1od3tQ0t7V3NTwNT+JRVI8I3lYuNSuI7pv2n0lKua3Vu3X5bfAW5do5vTPuk
flWdS2C/7fB37ULvQ4q4I4rGFSztJVzyPen8IPZoD/r69VJ0zwnWfaVrdCKh
hdf22pqiz4AWLciYAF2DOSfMI6EtnmLNMnH5qEPUS+rsRRddvBQDuxXq34MP
Pjiv64HOV8yt9eYc9hbGX4sNhU2cvjtjJI7RWD0HAswTJS4DdhZxTNP2izkh
xNggD3MxAVpBPyJPGetwH+JybBa0i3feeee8DDLWQTfs+rb0v9iy+AuG2mi8
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
Y4wxxhhj+oE//Z/80382T6/6v69e9+NsaT566KGLvLrllltHu+5njzlmcd2f
/exno123ixdffHH253/+F4t7k/76ta8b7frPPffc4rqp/9sYuPnmmxdl5Kij
jl7341Q55dRTZ7/3+78/e9e7373uR1nw8MMPL/Lvda9//dJvzGP41a9+NU/o
TaXz3va2t2/mI49G3/dL82W7cjD21cccc+xS/0QKav3XTTfdtPjbpz796ebn
2KrlqVYHjDHGGGOMMcYYY4wx43Aw+mZX5UDTUVn/pz7of/4v/uXsfe97/2jX
t45qujjzzLMWZeTii3+w7scpwlrAf/fv/8P8OdFStwo1fed73/ve4jfyuXTe
dtVR+77fVtK9WjjY+uqnnnpqg4b6H//Tf178Xuu/DhYdtVYHjDHGGGOMMcYY
Y4wx43Cw+WZbOO/882dvfOOb5un+++8f7brr0lHP+PKXF/f9u499bPTrW0c1
XVAuoow88MAD636cIieceOLiObeSjvr0008v2qQvfOHkpd+++93vLp75K2ee
ufTbgaCj1t6vli/blYOtr7799tuX6twLL7yw9Hut/7r33vsW3//CC7/d/Cxb
tTzV6oAxxhhjjDHGGGOMMWYcDjbf7FZkXToq/uC4L/7YsbGOarpgfRnl41/9
63+z7kdZ4rHHHptdd911s7POOntD7NCtpKPWOJh11AORg62vpi+M9/3IRw/d
8PvU/dd24GCrA8YYY4wxxhhjjDHGKPhMb7vttnnsunvuuWf28ssv9z738ccf
n1151VWzSy+9dLZj5875PmK1+2yGb5Z9vHbuvHN2/U9/OnvmmWd6n8eeX7zD
JZdcMrv66mtmjz766OB7P/HEE7Mbb7xxfu+HHnooe8yePQ/Nrr322rl+0gr3
u/XWn88uu+zHsxtuuGG+zm5fZe+ysXRU9kjjPX/wgx/O4xry7xrqh/7Rjy5b
+b7Ad7rn3nuXvs8QHZUyescdd8zz7fnnnx90b+rG7t27Z3fffffs17/+9UrP
z3fn+3ONErwb3/PBBx8cfP2W9xsC70HMab7nNddcUyzvWwHqSZSPv3nDGxZ/
f+SRR+btHnWhqwxPxV/91V9viCl6MOiotFOU0euuv35QO92Hrjo2tN0cS0Ma
0l+WoK2jzaXPHnI+9ZNyTnnn3Sn7Jcbqq8nTO++8c96ncl++R5+9NWlnicPA
96F94f+Jdz2EIW2o6qhHHHnkht/H6L9WzYsa5BPrYXlPyvQq9C1PfesA78Qz
XXHllfP3pL8c+u2MMcYYY4wxxhhjjFknp5x66nw9Fgnf5Omnf3G+11e699ep
p51W9X3hS4w9/NL0iU98MqtJ5HyzJ530+cXfPvThDxfvh/aoz4evDp90/O24
446f7d27d/bmv33Lhuf5L7/zO3M/Ywni6L3r3e/Ovgtr2FgrlgONI45BUzvk
kI9sOP+vX/u6hd5HXqd59lu//duzS//+7zdc+9hjj1t8JzThlJtvvnmuB+We
mXt8/vNf2BCbEFp11F27ds3++I//JHtf9KA0XuoZZ5wxf4f0WP72/g98cNC9
0ab/z1++asO3PfyII5bKQklHpQzknp01gN/4xjeq96ZsUUbSuvL2d7xz7qfn
2//X3/1vG9bbUc45jt/wV3/sYx8vPieaJ++S5hffk7xCj6rR8n59wW//rQsv
LJYB6kLr3qNHHnnUfE3YueeeO8ozAz79eEbqBvE3c+0XdWpsTa+LKXTUP/yj
/7m4BppZCns7xu+5ekgepG01dYA8o3x+4IO/OYe2q/TscV6qo6If0k6ndYm6
jJYzlCF1bGi72ef9cvmSskp/id4Wx1x11dXz2LO5ekebWJvzg/4VfVWaKCfs
e5nSqqPSP7NXaO6e9Hml+LfYHHyDtGyQ+NtXzzuvOs9raBtKm8mx6f34G21Z
n/6LOSvRV2NfteZFn/KEJv6mN//thufmO2M75PTQVctTnzoQ345+JpdfpKOP
/lSzbmyMMcYYY4wxxhhjzGbw6c98ZskHVvKPkdAAU38cvjJ0jtp54R9M1wLl
fLP4+NVPmtP+gPUPcdw73vmu+d/UP8+zcs/S83Dtm2+5ZcN18YHWzouEHzQl
4oRy7VTf04SOxZ5qtevj11Q+euihi99Y86ewviPnZ04TWkW6xqpFR8Xf3nVP
EmtUA3y6tfLVF65Zu6fqBKl2gt+deQFdz43/PbcmDX9zSQMhhc+b/0fLUcJP
zTGpfqPPyfqdktah99mxY8eG52t9v76gUaGD9SkDaN6rEmX7da9//crXSNH5
Gl2Jb0hbtVk8/vjeeZ2ORN5puV4FtLm4Bns7pqjWkYtzzDqy+J06DNrexre5
6KKLi/lI2U/Po62ttV38Rps8hL51bJV2c+j7pWW2pb/83ve/v/gdPa12Pho0
+lvKD39YbzdLZaRFR2Ut8J/8r//dec/zz//a0nmsp3z1a17TeR59ba5+rtKG
Eneidnyf/ou1nPG31E5YJS9q5QmuuOKKznJMHqXrU1ctT33qABx11NGd70le
rGvdvzHGGGOMMcYYY4wxfVEdNdJ73/u+uY+NlPrX0vhtGtuNxDpQ4jKih559
9jkLbTF8ZrqmteSb1XPwEeZQXyQ+flB/YyT8i1/60hnz9T/8V/UCfLQKayPw
F8bvrM3h/Vj/yfmHHnbY0rVZ06boc8e9Tz7llPm6D9Ze5PyIb3nrW2ff+OY3
52tu9N6pv7Sko+Lf1zUkrElhvSzxmPGZpz57Yu8qq+qorF3W66Jlk0fkFetp
dE0d+RDrWYhjSJ7qOmHKIH/rq7Whq+i9+U5nnnnW3L+LNpjmcaqjpn5g1qsR
L5J1Np/57GeXfvv4xz+xdC7zCFRn5/+J+8g7H3PMsRv82SUdVRPX4Lud+9Wv
/uYer3xTzovfKVf41YlLes4558z+9M/+bOn8NE5ly/sN4YQTT1x6B/Lgrrvu
musXlHktz7nYmH2ZQkfNrUGkrlCGyad0PTrvsy727NmzeI5VdVTa0bjGG9/4
pqXfaCvSvCBOtsL3i99iLX9O32FdHHWZ9cPxG3nJ34j1nJ6n5YeyTYxb6oG2
00PmV0CfOrZquzn0/dIy29Jfqu4ViTrGmj/KbLrGkdizCs+u7RNtP3OJaLO5
Bm24nq9rBVt0VNZpxrl81+OPP2He1qNZsn5f70mciUDjOfDcrEePuM/0l3oe
76Ks2oYyh4FvpHop9YW/sa6+T/9V01FXyYtaeeK59Rz6XcoJ87CwPbSvIj90
7e6q5alPHdA+mm932mmnL8pauvafOS3GGGOMMcYYY4wxxmxlUh0159PCH6c+
sSeffHL+d2LmqT/s+xddtOFcfG56jK6zKPlmde+xXGxfrqnPE/7e1D+Pvpbu
0Ygvr+QrPu/88xd/x8eei+ep69jwUbImL1AfOD7SdL85XRNGwreokK/h507X
hJV01Pvuu2/pmXOgH8cxqQ6+qo6qPnd0ujS2Inoj+of6WRX9xvi2h6D+ZjTS
dM0yfnbNZ9VR+V7qW87FUMYXrOfrepmzzjp76fsTA1pBh1ENqEtH/fJXvrIh
77QcsnY5Xa/D+6oOeOLnPjfa+/VF9xflfdN8SO+Dvr0qU+ioqieRX2i/Ct8E
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
3Vz8O12ztp111NZ2cxUdtbW/VN2L5+w6N9W9dM/R+OaUB3RH2ja0XW3bW3VU
jYNe6hNz6L3oU2uwt24cS98JrW0ojK2jrpoXUCpPOkeJutLnHVkHGrSWpy4d
NaAvJo41dmNu7g1tWte6cWOMMcYYY4wxxhhj1onqqDVfmq4Djf1R3/+BDy7+
hm5S4rHHHsvqSl2+WV33ibbZte9Zi466e/fuxd+Id1hD/ZeqQa1DR9WYfcRq
zK1z0b0wx9BR0S/jnFNPO616rOp6rE8JVtVRVcPO+beDHTt2LOlBgWozN954
Y+/7wkMPPdSrjGj836E66h133LH4/a/+6q8HPR+0vF8f2PtVNR7aglyZO+HE
E/e3K1/9aq9rE8+U/fjSFPcjz3O/D1nbdfvtty+eC520hH7rLr11asbUUVUb
ZL1paNe6rj5icaOb6Nq+2267bela21lHbW03V9FRW/vLFt1L10OSSnEENIbz
GHF9dW4EWmIO/k7+kmJejp63LxMjP1DN9JOHHz7/W2sbClPE9V01L0rliXIX
fyfe/VA2S0dNYZ4NczK0PKZtizHGGGOMMcYYY4wxWwnVUYnBVgLdMo7DTwnq
C6vFOVUNVteOdflm2RdOfXispYjjc3tjtuiouk6NhC87B8dp/FHVOjdbR9W1
Y6TSmg6NhTuGjqo+5pqus3Pnfj0x9cGuqqPqumHyu6Shfeazn10cpzqqlvc0
LxT0I56ZFD7mdN9C1YUV3T93qI7KmrD4nXL0zDPPZI974YUX5nnP8xF3lWdr
fb8+sK4orl+KV8s7qNZa24O0D3GtVfdxVdAO47lqOqquox6SP1Mwpo6KDh7X
0rJ4ySWXLI7ReMahN0YcYGW76qhjtJur6Kit/WWL7nXdddctzq3tSat7HI+h
o3JsnIcunUP1wIipr+cRc78E+9rGcV8977z531rbUJhCR101L0rl6YorrujV
lmFHRFuvfeGUOip9M8cTP6TEcccdvzif9eHGGGOMMcYYY4wxxmxVVHdJfaeB
rgvFpxb+Rl3zx99Z05nC3m4ay+2GG25Y/NbHN1vaX2vv3r0bjm3RUUF9sp/4
xCez57KnXhzz6te8Zum3zdZRU11vx86dG6533fXXj74/Kt9N19bovqcBa4jQ
2eKYk08+een3VXVU1uuojv2tCy/ccAxrCfWd1XdM+dMymytHTz/99NI9iB0Z
xFo9Uqx/UtT/ThqqowJrqOIY1nXmOO2007NlvfX9utDvdtZZZ2/4HW35jW98
Uy+dqi9j6qhpe5JbB4Ueo5pTbT3cZjCmjgqqT+baU9qR9Hdiwqb01VHTur9u
HXWMdrPv+2m+tPaXLbrXzbfcsjiXv6MhpmjfltoCq+qoGrsATT5dh8lzaFvE
emlQLZnvyf1TNHY476x7zra0oTCFjvr/s3cfUHdVZf7HZ82spTNrRsY2RaeI
OOPMiB37LMUZR2RQLFjBDgIqEIoI0hQEpJeEEiAkECCURAgCQhpShIReAgYI
+Ce0hAiEFmmJnL+/M+7rc59371PuOffe902+n7X2grz33HNP3Wef/ezS67FI
XU8+H1es3NO1bssU9rppM47q7wF7D6r/aYzixLFtv//++/Ox0JVi9yYAAAAA
AAAwaD6Oqrqy6TNm5PMBPvTQQ111jUphTN/Azrmm72q8QM2HpTpC1UXb8RN9
/WuVulnbjyakVD+4pnFU7bP9HY1xqFim4iiq25sy5ZSuz33ccRjj+to599Qn
RXXfOvbaNtX/+mOn+RBt/W0vcVTx8wuqr7Dil+qvq7FTw7yL4Xj4PkG9xlHF
jjWqpLGFdR5Vj64+OrZuWcnGUcVum/ohqY+rtk9jX6ru1vbJUizH0py8dt26
ljQnqNoaKK5qYy9KvcRR/W/oWtG1qWOr/dTv2M99f88m+1fmuOOP73xX17vW
p+tJ26BrwM9xqmVsfKMXbcZRdT78+Tn33POye++9N8+vbH6m31UeOGxtx1GV
v9tj4Nepfqf+Hoq1lSiKo9o4lK433ZchPxt2HFWa5ptV988flybPyyZxLzs/
p5LGydc1r9/WPbzbbruP2Gf13Q5tIHqNo+rZae85HXfl9ytWrMjzDLVFsnlF
iO8qr7PxZJ1TxYLVn1rf1fVo81o/d2/TPLQfcdRej0XR9eSfheedd14+966O
k9Zp+8Aqb1bsNWgaRy26B+xzQmP7a4z5VX9oj6Lrzpel7L11zDF/vP++t+uu
ye0CAAAAAAAABsXHUYtSLH6pOj5b35lKWkZ1m1aVuln1p/CxmdTcbk3jqOLj
xqmkMem8YcRR7XyHqWTr7kNSbEZ6jaP6fi5FSXFGr0kcVfXRtl9oLNlxqH0c
9dFHH610zapuWHEGz/aViiUbC+kljipTp04t3T4l9SHzmu5fEdXNl63Xjofa
uc/cvV9HW3FUO96njxP6pM9jffOHoe04ql2fUmyMWY0na5ex8ZegKL7jx85V
0rXvvzesOGrTfLPq/vnj0uR52TTuZcdRTaU99tyz69/KI6TXOKroeVV2vylp
HHhLzwXfLiWWdIxjbTWa5KH9iKP2eiyKrie1eYj1L48lPydv0+up6B5QXNS2
1wkpdj79mL7EUQEAAAAAADDa2Diq5iGz/RdsUl17ql+Z/m77wPmker5YPbyd
q0/j8KXYuS5Vl7cqMc6m5jQNy9l55TzVzYXlYmMrXj1/frKuU/WAqfna1O8i
Vt8YqL9RWI/ilzGp2MH++x/Q+bv6e1oaLzBWP6n4c6ij1Pmzn4V+drZuXfW/
dagOt6iuWsfDxoIt9SENy/USr1Isdfz4CdHf1Zxs6n8Z6nF/sMeeI76vel71
N05tu8Z/Vf11isbotP2HlPR7ikPot8P5UJ8jS+PEhuXLqC+2b0MQkuKzqTn2
2ti/IjaGYJNifOqTJD7GnrpnqwjHUuMFN2HHNlW/LcU4Yvuh9iKpuW+HYfny
5Z1tU4y+DbZfXKydg45P+Dw196LNb2PnRuMj23wpxFiq5tN2XPBYPp1S9R5r
km9W3b/Ycen1eTl79pzOMupTnBKeXdoPS/eg3x97XWmMay1j26CEdVR9Vqdo
rAJ7Xmza6ltbJ8dv1TgQdnt8UozTzmvq9ZqH2jGDJ048YcTnRc8vxUrDZ7Hn
fN1jUXY96Tlc1LZH58u2vQqaXk+SugdE/X9tmwaftN4LL7xoxDo1hnZYRv2k
AQAAAAAAgGGzcVSNvSbqo6ZY4amnTs3/q3q/KrScxgicdPLJeR8P9dOIzc9Y
l8YXDNsY6wfaD6o3Vr2yxs3TGHXqu6GYYJN4UD/pOKufruKal8yaFT1nqp9V
PyztV1Hdc10aL1Z1yRrX9aRJk/LtWLp0aV6/22+qY9Y1qtiextateq0GGgMx
XLMas3rWrNn5HIVV6TjqN3UMAjuGZt1xcz31+VHcXHEt1edrDNo6/Yab7l+K
YvyaH0/Xm64pH/fR/aNYhNokpObHGw00xqRiZspjdA03HYMY3XQ877zzzvwa
9mN7jwZN880m+9ev52UZxSa1rxpbVe0ebN4lGk9W9672WbGwNmn/NM647jmt
X8+JMjrm6purvEvPYuWBigv6+UVTmuah/dLLsSii60952OlnnJFfU1pvk3EA
qiq6B1QGuPvuu7Ozzzknb/d09NHj87xW+1v1/AEAAAAAAADDFoujjja2T8Oy
ZfXiZECbVAes/jJKzz33XHQZxUPC9ZoavxkAAAAAAAAAAACj22iPo2qbwvbt
MG7csDcHazldg+F61JiGnvp62vkPR0O/JwAAAAAAAAAAANQ3GuOoGh9O88cd
cMCBXfOUxub4AgZJ4zzbOd40zvS1116bXXX11dkJJ5zYmSM3zGXX5vjJAAAA
AAAAAAAAGJzRGEfVnG02VqX0vV13HfZmAXlcdLfddh9xffq07be/nc8zCAAA
AAAAAAAAgLHp9DPOyDb+303ytHjx3cPenNwNN97YiUdpu8aPn5CtWr162JsF
5HQt/uyCC7JPfurTXbHT9d/8lmzrbbbJTjzxJGKoAAAAAAAAAAAAANZaipc+
8MAD2dKlS4e9KQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAtdSC
BddkM2b8tOd08SWX5OtZsmRJdvLkyXm6a/HiIe8Vbr311s75ULr0F78Yynbo
uvjx/vt30k8OOmgo29GLO+64Izvt9NM7afbsOZW/u2r16mz//Q/o2velS5f2
cWtRZLTcD/1y2WWXd12runbXZr/+9a+zadPOzA4+5JBs512+l+222+7Zww8/
POzNGripp53WlQfpeb8mUNljyy23yk4/44xhb8pabfny5V356hlnTBvKdozl
5+2KFSu68m4dw9W/35+qzj777K7vr1jxeB+3dnTTdaB3kuMnTsz22nvvbKed
d8nOPPOsYW/WwI3l+yHmiSeeyPP6fffbL9tu+x3y8s5YN3PmzDzPPOussXd9
Xj1/fv78HT9+QqP13HLLLZ26BJ3j0UB575Qpp+Tn5qqrrmp9/alrefHiuzvH
Qs/VseSmm27qlAFWrlxZ+Xtz587N9/dnF1zQx63DaDJ//oJswoRj8veyXb//
/VbWec0113SuvyeffLKVdbZlNOZxa6JHHnmkc5zXlDron//85/k1ffY55wx7
U4ZC5Vg9Gw455NBsh3HjspMmTRr2JvUN+UR/9Fo2KfLss89mkydPydd5+eVX
tLJOjF3bfvvb2bqvX6/ntMG73p2vR3UX4W+q18FwHXvccV3nSed5GK66+uoR
18xYMenkk7u2+3Of+3zl7yqf9fut5ySGo9/3g+pA9LwOadDlINVp2f3T833Q
VEaxx2BYsVw9f2LPqttv/9VQtqdfli17uOt4P/DAAyOWUZ5lj8Ga8B6i/Q77
c8ONNw57c9Zq119//ah4vo/l563a+Phtf+aZZyp/33934cKFfdzauCp5Ub+p
Hu0zm312xPHYepttBr4t/VZW3hjL94N3//33Z+97/weGXr5p23/990fyfVn/
zW8Z9qYk6Tr67W9/OyI/0vWm7db2X3fddT2v/0f77ts5p7fddnvTzW3Fc889
19mmtuI8QdG1bN83r7zyylZ/t9+OPnp8Z9uX3Hdf5e+Fe2DQ5YbUdY3+stdJ
3fNedM5sPnLPPfe0ucmNjcY8bk1k6xpPOOHEVtet607p+eefb3W9ZUJ5NtSz
D9ow88lVq1ZlW2zx5a68YqtvbT3w7WhT1TyMfKI9vZZN1J4u3PerXLvm3/zm
N5117rjjTm1vMsYY4qhrJuKozRFHXXP0+37w9beDbl89GuKoartvt0H1RYNm
yzdrehz1iCOP7Nq/Pfbcc8Qya2IcVX04tC96x8JwEUdtbk2Io1bJi/rtwAN/
Es3318Q4all5YyzfD97hRxzRtR+K302fMWPYm9XYWIijFm2j+pTpMy3zwgsv
9LT+0Vh32M84atG1TBx1cMbCvbemeeqpp0Y8k3Qeqio6Z8RR0a84qsYGCOvV
u+cgDTuOOsx8Us9A/6zcffcfDHw72lQ1DyOfaE+vZZOLL7648z0/zhZxVFjq
M6T8KpZsHnbO9OnRZUJbVOKoowtx1OaIo645iKP232iIo86aNTtal/6hDTfM
x/pdk6yNcVT7PLn22muHvTlrPeKozRFHbcdHN9poxLHQM+iHP9p34NvSb2tT
HPU73/luZx8umTVr2JvTmrEQyynaRtsntdd6a8UQdX6VhtGHPaafcdSia1lz
jYRjMdbm5ei1rlJjj2t/NcbrII2Fe29No2s6XCOf2HTT2m0vxmocdTTmcWui
fsVRNR9QWO93t9u+tfVWsTbHUTUnUTjumpdiTVB0PMkn+qPXsonG1A7f8/NH
EUdFVeEdSansviaOOrqMljiq3rU1/0tIY6mdbZM46osvvpiPm273/emnn+7j
1qIIcdT+Gw1xVJV37Dbo/UPjcqyJqsQubr755q48aCyXz5WnfvJTn873Vf/F
8I2WOOpYft4SR22HfV9R0hyHa6qy8sZYvh+8b3zzm539XJPmOB8LsZyybTzo
4IM750Z1S2uCfsZR19Rrude6ymEZC/femkbjz4drpJe2TWM1jorBII7avmHm
kyeeeFLnuCumtSbguTN4xFExTG3EUVUfpD6rGlOxbvuzRx99NK8HXrp0aU/b
HyiWp7qlkB566KH876pXmDlzZnbU0Udnc+bMHfE9bbvmXzvzzLPydpMnnXRS
Nn/+gspzH2ouFLU5PfKoo/K4huIMGmdb477b7fFtT/Vv+7nGQ/FWrHi8axnf
16pq3Ejbcuedd+b9uCZOPCE79NDDsqlTp+bHI1XvUud4KoZhl7Vja/p9KEuL
Fi2Kbs9jjz2WH1vFPdVuadq0M/O6Sb0Pl9H50Jz02u7DDjs8/6/OmzSJo4rG
ZrDbrz4Cga4tneeQHnzwwfzvmmNSdWIaM0vH8bzzzqv0XqB6syVLlmRz587N
jjn22Py76kOu69WP7R6jbdN7juaz1zHcaedd8vXoPBY9e1TGtPsR7g3N33XW
WWdl48dPyO8BnWtLY8/rulNeod+ZN2/eiGUCnY/Y/aD91Zzs+g39V9dWal/r
xFG1v7Nnz8nPwU8OOig/HzoHqyPr1rasWLEib19r13/a6afnf0/Na17nN6pI
xVF1T6o+9Zhjjs2Pke6hKvlwnbxPeYj29cILLxoRw9TflWLnRcdA26b85uBD
Dsn7Sl5wwYU95ffaXv2Or8/XPeu3oY389b777u+67sO9rXxH7SgPOeTQfB56
9TGoMqeKzonWo+tA+6Drdeb550fHIg77qvvU7qvKc/r744//8T669957u/ZD
eWWKnvG6D487/vj8/t93v/3y+1PXQVFcp+1jkaJYQNjXc889r3R5PXvUB0t5
mLalbjxdeaqOia57lUXK6Pqyx/quu+7K/657+tJLL82Pa6w/sD7XfanzrftA
ebfOw7Jlyyptp8652idp/brP9Sx/8skn88+0DXab7PHX9+xnd999d3T9/n6x
eVqdOGrd+73u8Uw9b3Vv1SlnKMXKDk3Lg3rGK8/Xe53uCx1X7Uu/4qh6NitP
1jNGYxTpealrukydZ1OdvCjopcxZRHm1fssfh/8rU6zorFPXftd5vu226D75
8oaNd+j46ToMeZ3KjqL1KH9S3Y/2R9fI9TfcUGn79U6uOkDlkfquyg7KK8M9
bNUpbxSVP63f/e53+b7oXlQZeIdx4/Lt0HlXvpQqk/TjWMTY2FPsWW01zfNF
z0i9s9Ydv0LHQ9eK8gidP90zutZTUnVquv90PdSJS4b3GF3zCxZcU+l55YVj
p/eAsm0MVL4I50bl8H5QHqP3CV1Tet4UlWHq0nHT8bbHq04cVedc5R/VU1R5
DtS5lstoO3WN6x4tus68utvsKU/Xebdl+kHFUbW9ugaqPstS6tZnN62LqpKn
KH9WPnrNNdfk+xfLd/VM0P7r/FXZ/37eO3XzWhtHVfmvrl7iqHomqm6o7vUS
yih6/xr0nJi93te6NvUeoGeArqOqZUgdo6vnz8/L1HqG1PlN0XWq46vnjsoD
sXKGjqH2SdtVpT4qUNlE94zOYVndRZ04ap3zWzeO2jR/tWJxVF0fupd0ruu2
xam7bXXySW1L2C4d10ceeaTWtnk2jqr8axB0D2mcqzplL13vurb1zqTvhvrw
mDbiqG2U9aStZ6lfp8693vN1jelY9FKn2ct5kDbLJr3EUbWv2n+976TqflPa
indhdGkSR1U85ytf/dqIug29RxTl33qmqY2rnhv2e+rb9IM99uypzavqA+y6
9G6ke9Tun+rFLJUr/DbYpPmuly2LP8OUr+rein1P/Wh8vy2fp/rvxNriqN7E
LqN6FatK3Eh58cb/u0lyH5V22233EeWxOsezaFxfjTle9NuxZKmMZcd+iCWV
11PlST33/biXIe21995dz3GlNsf1tTEBJc31p+vC96mwxzj1nqL5G7729W8k
j4HuHcVHU1S2tfPUxJLqU2Nl2O/tumvXcroufZ2qfd7k8d7fP8u0Tf5z3W96
h/TsWFhKqhNOzYWm+yD2rlrlftBzT+c9dQx0bhS/sWUOjRdbdNxUDm76G1X4
OKraAKSOkbZZ79YpdfM+Hz+NJV3bgco6YY7LVPrS5pvn5buq9t57n9JtUNlO
/N97yV99Pbb2T+9Yqfuv6D1AZfCi60j5Thg/v+q+hjyvyri+KnP6ebti14zi
DjFtHositjxRVEegcnQqX9d9EnvPUbkjLKNnl65vm6eqDUIZrdfnZ3rG2Ges
xh61lBemtjUsb+u1PfW5i30v5KX+PlbdQeCfnam5qvwzSTGCoEoctdf7vc7x
LHreqm6n7H7xyc9P06Q8qGsrleerPOjLAmXXt+e/qzKXyhOp6z9V/u7l2VQn
L8rPRY9lzhQd87LfD33X7biCIcXqoXzepfeRIDbHm+KuqfLT57/wxTw/ignv
OkXbrjikPRZVyxtVx/VVHaovO/ikfDBWJ9bmsYhRnuHvOf1byc+P2kueLyGP
1zWp+knl/eF7dfoiKnbq+wiHpLKmjrNn69R0LPfZ54cjysXaV7XtTFEbAV8G
D0nrV/4cozYoYTm9U6vNpf3NMO5DLPl16ryG/ajbVlqx13BOfZlU+ZE+j22D
lm/SR0Xny9dP6Fmi+9G2yUhdA8o3lE/4Z6PKQtpmH4uoci3rHIS/2XYHqi8N
31G7HeVjsWtd+1NUp1p3my2dV71L23tb69Hc06o377WuUtus/fVlD5svKv/T
O4bPV/T7umfqxGXqXNe91kVVyVPs/ilvUjsif150PerdQFT+8M9NLa92czH9
vHfq5rWqG9Zv+v2LnfeYKufMxlGVjyiO5t9L9Ps6F6o3StG2xvZN5amifLhI
Ko9r677WuYyVTbW/qvdIlaVU7ozVwyip7iBW32S3Wfekypqx+1Lt/0XXQqwe
WPmh3y7lyeE4qY5H75GxsoTmyIxtW5U4ap3zq/eW1HWn5J91TfLXFBtHVbld
ZYnY/awYXpG621Ynn9T15++1kLT9Opd1KC+MXc/6m/JdsXXQ4VrzdLzCMioj
WWF7dd5D/Ucsn1dfkBS134ydj7BeW96ucjyLykLSa1mvX89SS+00U8dCx1H3
Y6xs2MZ5aLtsovqN1LnSs118HFXvtcrTYs/wVP8v6Ue8C6NLr3HUojwjfB5r
a612Mqn82F5foV9CVT7up+eov95tHNW+YxalUK9nKa8rqheNpWHEUf38t0VJ
dZy2f0ad49mvOKryXNu2tyhpOf98UL5XVC8aS/2Mo1ZJsbFwtM5U7NUn9Qvw
1Aeq6u+rTOTbs/rnetm26LpIld1D8v2zfRy1ynnzZYqy+0F9v8q2KyStK6gT
R+31N6ooqwuNpVjMupe8T/1YypYP43mr3rvqfafl9Eyooqj+P6QQv/N/byOO
WmWfYmU4tTmqer5C39Qq+xreM8viqHrXCPWgVZLq+ry2jkUR1QuF7+paT9E7
W5X98ONP2Pxa5W9/X/cSR1Ve6MtCNo7q21MVJbU79WzdUSzF8uJBx1Gb3O91
jmc/46hNyoO6D1PxlaLUJI5alnRt++3s9dlUJy9qUuZM0XaXravfcdSyNmiq
//Z9HlQHU/auE1JofyZtxlH1PKlzb4Y6/baPRUrRc8nOW9Brni/h+ahr39cD
VY2jVinL6/j5/v72WJW9M6uc7ikvL7selFQ35WnMg/C5jfOEbY3NNRySYjqW
jdek6vJS7DPM5rl6X0u1BbFJ9f116TooWqe9L2PXQFF715AUO7DtVapcy3b8
Izv/ja1b0XjpRb+r8xYbA6CXbQ5Up1HUTjfcP+H/65Tt7D1g2evigAMOLPxt
za1aFBuzql7XTeqiquQpdv/8+62/F1Nt5UJS+cTq573TS16rsmvRsm2cM3s8
y+rfVGbx7ZT1b92HZfulskDd/lWpPK7pfa3tUJ1Q2Tb7GJLuFY0RVPY9PVt8
m3S7zWo7WPT9U0+Nx8NC0nucrZez70Mq/xWtW/mGj9cXxVF7Ob+KXRcta8un
TfLXIvbdoUpfh5hetq1qPqn+UmXHVEnvmlWl2n+Ea070Ph7+lppHUGXssIzv
RxyOpa7xsus4tn61Ka9Sdg7Ph7p5mG/H26Ss169naaBxlqrUQSvO6PPOpueh
H2UTjZOUWleIAdg4qra9aP/1ma13CfoV78Lo0msc1ebNeZul3+fjvi5KY1hZ
ep7a9na6v5RXqh+O2iL452qdvs8+7hdLIe6n+FqV50JIvk63ap2bv88s/3nb
cVTlZWXPZJ9sf6g6x7NfcdQ68QclHz8oy3uL8tAq+hFHVQpjDofzWLUuLiRb
LrbjlVRNarNkpdpHNUnqj2IVvWemkvISW0Yvi6Om+o+nUjiXZfeRvWZ6/Y0q
eomjqmxnyzW95n12/ItUUj4gun7q/IbGfK4i1Qe6axv+0CfW/72NOGqVpHa0
VpW+VDapTFX13blqf9RUn+Wi5MsCbRyLMraNoK83CrRd9jf0TqB8Vm07Feu3
94ieubaNdyy/DuddYxyrrXQZH/dL3XPh96rGrcL22tia+qvUPeZKg46jNrnf
6x5P/1kbcdSm5UHV5/RynvoZR1XybbJ6fTZVzYualjlTNBZH2XrCM7hfcdQq
yfd18LGrshTGMa9a3igrf6qupG6+rXvNlqnaOhYpGuNGz2ZbB6V8XH8Lfdeb
5PkSq3NXvYiugaIxXAIdD5s/ql28+hZp+xQLs/Gz0JY9iPUJUDlV5RS9N9vv
+r6e+l17XFTfquMSxvDUmPx23aH8Fdg4qv0NHS+VCbQNWp/dN/1byfetVT1g
WEbrrSNVd2jfDVWWV12A4tBaRuOp2+2u8mwO9Pyz39Vx02+p7izWN9zHUVXv
YD/X8VLdh865yla2rlPbHeI1Va7lKnFUey/qPtKz2I8lonGU2tjmwI8loWtc
c7WoXW4sD2k7jhqS2rfpd7Xt/nlVNGaHVeW6bloXVSVPie2f7jvFH/XuEauX
VVsLfV91H74Nua377te902teq3iGjq+Nj+idXn8r60dX9ZzFjqfGytBYtUrq
22M/82Pr+LpzPZ81fpHuL83LZT9TLKKOKnHUXu5r3wZe78A6H7oXNCeD/cwe
Z/++rmX1PqF2Vbqn7T2pZ5C9tmLbrLoUPa+0PbGxRhRvUt6mekO999nP7Lw1
sXalembqeld+qNivvQZ8bKwojtrL+VUfTR0rWxeg/E5/03EIx6Vp/lok1gZT
779at9o0KE8sygd73bYq95zKzvZzPft1Xyk/0DWs/MH+dtW+jsqr9Dv2uaO5
jvS3kF+1FUe1Sc9/XQ9at2/XZmPmui7s93VN6BpRn0zlNfaZGN5P6+Zhvk1Z
k7Jev56lovc6+7zTcQ5jBSvG7ttr+DrNJudB+lE20XWt42vfbVXPrb+Fvic2
jhqS7iWVD1Qe1nPaxtlD/N+e037FuzC6NImjxtpFKG8Nn6scaGlsm/CZ2tL5
cRv0Dmnb9qXqUmOK4n6qy1S8N5Rv/RgUuhd0bSvv1LMnFq8I85ipz0ys/Kty
itah+zuWbww6jqpYmv8Njf+tcsGqxHxdtv13neNZFEdVXqTj4lOq34LyFlG7
KX+clZcrj1Sdncr0/jgrjwtlBD2L/brD+FlqO6lyVOw8DiKOqrxU+bieQ7H2
OXZMzFhfUn1Hx1BtXfxckUq2XVisL4m+oz6nug70PI21gbLzj8TiqPqbjrHq
DlJ9cXT/qo5az1p/rP39EIuj6nxpbjXdk3pmxs6X7UNWdD/EYgGq/1efeV2j
avPh1693NNE1pfvG76euJf09XHNNfqOKWL6kY6T3ZpXh9A4Waz+neyVokvdp
X/19q7xAf7fvYX4bVE8VYgZal2+358sfZXy+qH3y/D60FUfVM015p/Kn2Ptm
6BcV+Hd7JZUDw1xzsftfY4SEa86/Z2t9/ngXxVGVR/j1637Xfa9zrnzAv2Mq
6f2o7WNRxsYddC3G2Pc2Le/fV7VP9pjadto+v9Z1qvyrjqK4n+5tPb/0TiM+
P1JSGUh9tXTuY+1GVVcRxNoBqf2Jng+63/37dUiDjqM2ud/rHM+i563evWLl
DKXYtWvrAJvkiYozxZ5LypO1DtX1pNoYN42jhjpX1RUpT4ktE8r0bTz/yvKi
pmXOKvw2+jrifsZRdYy1jzpesfb0qk8IVE71n+veUx262nbHynWhvFK1vFFW
/oyNIaFrWdum9ei/seePHU+3jWNRhY0Z+Lq4Jnm++Oejnvt16jntnH+xsobq
mWx7GXtf+3HI/LjgOod2GVu/Zd+XtQ+xuZhUPg7LKJ+xdVA+jqr67VieU2U+
L72rh/X4clKZVN2hrR+L1eupXUH4XGWUqtQmKnxPzyI/1pxvn+TjqPZ603Xs
rxWdQ5un+3mBi67lqnFUvbf5+kTl0eFzH69vss2q07bXqO+Tru3w72f9iKP6
8UCUR9kyjq71Ooqu66Z1UVXyFL9/vqxpx09V0jH214stm9hj3q97p2lea/PK
qu1jrarzo/r7J7AxPBuT1DVsr39bvg1Uf27XX2fe7apx1Dr3tW+HGSsr2fw/
tFvV+4X9nuokPZWJ7DL23vPb7M+j78Op9fg+mLavSWgfJj6OqrzSX2P2GlKy
ZbxUHLXp+S2bH7XpM6GILefpuvfjc6l8YesRfB1l020ruudsfX4qH7H5ZKxP
XhE7r5pvU9lmHFX75uN7umbtPWCvM9U32utbv2Pp2knFTqrmYTafaFrW6+ez
VP16UtdeoH7pYRk/z2iT89DvsknV+VGVYuMn+fc822eln/EujC69xlF13cfG
5LJj8ykWHyhvt/VtqWvd1qspr6ja/zwW99Pv2XiQxNoY+PEIbN4ckurFJFY3
obaBluqmfN3ioOOoai+h3wxJ3/XPV19PY8c9rno8pSiOGqNzGusbofrWUB6L
1cv7MchjcUrNjSC+TVx+zbm52dSuyC/T7ziqz6tj8zPY69G3WdE94Z+x/p1O
z0uxcweEFBs32LdnU1L7p8DHUUPsLIjVXfq6CVsGCMlej7E4qi9X6fz7ZWy8
p+h+8OUM3RN+7DnfrkrL6BwH/n7RPWK18RtFYvX5/h1ax8wvE8qXTfM+8e9B
uhas0M4kJOUZfmweXx/v55MsM6w4qvZVY4xYsb6egZ2PM6Qdxo3r+r6eFX4Z
lUkD305CY0N5RXHUWHwl1u4t1ufMztvQ9FhUYetnYmURWzbwfTct3wc/5FU+
v1b75bpScb9Ym3vfzic2X7NvixnansXGMlXdmaX9iuUJg4yjNr3f6xzPqvNB
WvZ92KbwDts0T7T1DCHZeiPRuYzFWpvEUWPv9rFxUpTHSRvPprK8qGmZs4ph
xVH9vSe+X4a9v31fESVffvXtV7Rvth69rLxRdj/4PNuPTSGrXTt4n0e0cSyq
SMWemub5Yp+P6s9Tl31PUFkjNuaj4uN61irZ8rl9BsTGyxfNjxuWUZvDwNZ9
hveaGPsb6i8R2DiqH7sl9v2iOKrYd9o648Kl6g7t9Rlrz6R6p3BMY+M1x9j+
dNqf2NxCYss79l3FtgXRcUnNBWvfj/24G03jqDrOsXcCvb/ae7mtbbbjjabm
4vTviG3HUWN5iti69LrPitR13UZdVJU8xe6fjzeKL1eofY1n32lt3tCPe6eN
vHZQcVTfzjNQm7KwjO1TaueGjr1DBfZeqDNXapU4at372ra10vUWa/tjr6Hw
Lm7rKH1fFsvGEGzbRrvNuu5j+Yl93sfGo7fvDPY8+PqDWNlM7LNL13Dn+4k4
atPzWxRHbeOZUMSW81LjY9j5vJVCPWkb21Z0z+ldRudaKTafp9j3gjp932VQ
cVRfRx/o2R+WsfmkjeuFMc68ww47PHot9RJHbVrW6+ezVGM9hWsglSfa+/r4
iROT21z3PPS7bFInjhqLfYitwwnv5P2Od2F06TWOWvScsOWGwF6Tdj7BGHvf
+fa7KbG4X6ydXqyfoursfB8GX7cQ4mu6l+3fU++ePm40jPlRLcW8lR+qflTl
j9jcGmVx1NRYAHXjqLF5G3St2Pr92PHz50h9Rfx6QpspP1eNjelbvs9Pv+Oo
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
vp+IUmzMb19f5PMQX97V+OCer6OrE0f18V5919fD+jq3fsVRlbfEyvf2OeD5
46y6uDp8vX+qn4ifS3I0xVFj8eBY2VPj8Wg/QgptmmxZNqTUmIn+ONg4Q7/i
qGEOLvFx1NRz3ve3sfV1RfeDv9ZVr1tXWb1mG79RxMdRU3PI+mOpPknSNO+T
sjiqzzd03/u2tD7O2484ahv5a9PYYez+i71nqA+FvX/tGE5N46j+fknlo7Fx
UG3d6yDiqLa+7bHHHhvxuepFi86nZd+rw3NvkHHUWFw6lffGxO5VPU88e0xC
snFU+34Skh9bJ9aftGocten93mYcVZ/7e0FJ7zmpfK5pnmjf35QUp45937Yl
D6nR/KiRspNiPD7fC3WZbTybyvKipmXOKsriqLG+lcrbrFj/3LbjqP7ZEntG
adttvq/vtDU/aqzsmDrndm6ikMJ2DDuO2jTPlzbjqJ5+R9to+x/buYt7jaM+
+OCDnb+VvfvYulRbN9x2HLVOPyerShzV0v2pspNtS6ttS40JZ9l6xqI4jvry
heXsu4bq0sLfU205yww6jtp0m22eat/JvK7xQsdwHLWNuqjRFEe1mtw7beS1
ozWOauu6U+PbN9GPOKo9h6l5HERlfNULhXNm6x592cfSO1ZYzvYHGVQctSg2
YcdvqTI/atPzWxRHbeOZUMSW8/TcT7H7GJZrY9tS95wv+6X6qKs+MCzTrzhq
aox+O19KW3FU2wa6qD5Yzybdd0r23b5uHLWNsl4/n6W2zanGdo7NTWfnHW4r
jir9Lpv0K47a73gXRpdBxVFtnwd9npq7WXVBel/Td1UnVaX8J1XjfitWrOha
TunCCy8asZzqx3R/hBTmg9Mczv77uk9s3VlsXjyfh/j26v4+1bhtvs6oThzV
t7dXf0NL58Ovvx9xVB1vnUf/uY5vETt+QUh+LDs953Xc7HnStojKbv77vowS
ix2Mpjiq+PiFzoOtf9V158eQC3NxxfoZ6RqpUo+uOTaDfsVR7XxRPvZnyxlB
LC5lt6XofvDzquqY+3ps/Z69lpRsnb6v17TP+7Z+o0hsDCc/vpqdayEkzVso
TfM+8efRjxXt5xuO1R/7/ehHHLWN/LVp7NDOwRWSL7/G6v2L4qix8m9RHNW2
FU3dV8oPfLxVydaPDCKOamMPsfnXbB1Naj4pse/g9vocZBxVbF2T0t577zNi
GR1He6+F9j6xe1X7YuPL6vcUG8/KxlFjfaL9uD/2PTikqnHUpvd7W3FUPQf9
WK1Kaptv5+H2muaJsbG7fd93tauNzRvbJI6q8+7npdIYbH65WbNm55+18Wwq
y4ualjmrKIujxvpn+7HpYuN0tB1H1frK7jtfRvV9xcvKG2XlT9svJeQfTz/9
dNc69B7mr01bpz/sOGrTPF+axlHVPkDrVErNOahxkMNv2Llwe42j+nY4sXZF
YTl7/uxzs+04qn3W1BGrO1RdXzimdp4vz9bXV5lb3vbt0H7F6vzkyKOOiuZj
tnwbe5YFOs5h+30+OOg4atNttvlEbNwWUVtxez2O5ThqG3VRw4yj9uveaSOv
Ha1xVFt2KeoHqfJ4OLZF92HRtrUVR1WcMHw3NZ6F3d9wDdnvFdWz2TmtbKxz
UHHUovzZni8b30jFUZue36I4ahvPhCK2nJcai97nv+G50sa2JeeRNu99RfND
2vrdNuOotpyeuo7tfddWHNWXvZYti7+P2vdNG2OuG0dto6zXr2epxgXruu4S
c4Hb+RTajKP2u2zSrzhqv+NdGF0GFUcVW5+Wmr/cttuv06e+Ttwv1mdBbYhV
t67nQGzM+dD+X3lZbNw4vWPuttvuI/r12XvJii2ncSb1XNR7dax+tE4c1c/b
pWd1ePaqPicWt7JjCrQVR/V1OSGp/K/592JJ+Zf6t/s6M22D6jj1TqA5Ofw+
KoW4Uixup+tRMQqVD1SGjPWRHW1x1Fg/Fp1njaOgZ3fsPNp2SocfccSIz5Xv
6zrXc1XPrNhxsPWnw4qj6nyp/dPV8+fnfW5j22nbgdUd51r5keoyVJev/Mzf
c/q9ov4hKovoWg310W38RpFYHFXfVz2xrmm9I8SOkS1XNcn7Uvuoe07xCNH9
6z8PYwvpWMXiemVzH3hV4qht5K9txA5j26HYk8bl1Li5/jeU7Ni/PnahY6Vr
SfXbqXNq46jKR2PXjNp66v7XOY/Fn+zcG20dizJ2zO5Y21flt/a82XmZAsXT
bNtEm5cOOo5q62rtcVX7Hd2TPr/yeZbv3xfOnc5XrJ1QSDaOGmsrpDim2o/q
+PlxM0KqGkdter+3FUeN/Y6SyjSpckb4bpM8Ue+8sTxXfQNUL6A4to+nh9Qk
jto5j78vk+t39O7qP9e9Et5723g2leVFTcucVZTFUWP9wJX0jNS+ap7S2Odt
x1FT953i2qpr9nFtJa3PKitvlJU/Y+05tQ0ql2quVP03dm3afHXYcdSmeb40
jaOqDBq+H3vuie0XYd9te42jyg7jxnX+budWSH3XH/O6cVR/7C1dc/YaqiNW
d2jXp/Obqk+3bTPsPCApWq+ta/R9uMWPRW/rFNXOwH5fzz7PtzvzdSGDjqM2
3WY79r/KebE6P7Wrtff3WIqjxs5D07qoYcZR+3XvtJHXthVHjZ2zJnFUO1+4
7qHYGHL+Pqozlm4/4qi6x+w9Z8eLD+z4yiGmbvvaa72xPo5+/gsdnzrb3EYc
NXb9iLbX5s9qG975fiKO2vT82jiqf4628UwoYst5+p3Y3D96/odlVA5vc9tS
95zq1ux22fq6wNfFtBlHtXm/8jKfH/hrqa04qtj34lh9p21LomTf5armYTaf
aFrW69ez1I/dY+/FQPOC9GN+VOl32cTGUX1e1CSOKv2Md2F0GWQcVe/u9npX
vbbKBsprdP35d3Hf16pInbif346ypHYC9v6N9ZUsSz4P0Rj1dddRJ44aq6fR
NsT6RYRkx2lrK45adx+Vwlgkflz2sqRnkeXHkKuSRlsc1dcLVNl++16lPitF
84PHkuqNrH7FUW3bplgda1ny5aai+0H8XA9lyY8lYt8fU9dM098oEouj1j1G
TfM++4424pz/Ph+w8wLYFGt7UnZfpFSJo7aRv7YRO1y0aFGtbbDvSGX7Ecru
RXFU8XNAlyXlF3rPbvtYlLHvbf44BP6ZoOOjd2CVIVSH4sczs9fuoOOoqrtK
xdBSyY6Jq3awda9hJRtHVb1X3fxfqWocten93lYcNdafuiyFcdCa5ol+3OKq
qWkctSz59rVNn01leVHTMmcVZXFUST2ni1LbcVSpW6bx7dDLyhtV5gtWPldn
G9Tu0Rp2HFWa5PnSNI5q54/V+tWWM/RxV5sRvRfba9xek03iqHo3tvutcrfq
wpSna+w52+5IycdKq8ZR7TWitj/afp832fmdy8YS8lJ1h3a+VeXfqj/Xu4vO
q8oCGr8hfF7U18bzc14rn1f9gur79R7i8yNfp+i/r/ZuOs8aV051EvZ46Vnm
+3gPOo7adJtVP277FKnOWte87iMdt1i+PhbiqEXXddO6qGGP69uve6dpXts0
jlp0zprEUcVuu6539V3X9usZp3vR3gP+vblMP+KoYu89fabYts6HrlE/5oXt
n2bLevqe2vmoLkjHUve2jbH7d6FBxlGVNG5JaIutulWbP+s82PqsVBxVmpxf
5ZN2m/SMVz1k+O2mz4Qivr2c3rV1r+saV3nO9vVT8uXEptuWuudsew0ltXlU
21JdRzqe6jfkz6XaZ6f6LMYUxVEVw7PlfcWZ9C6q5dQO1r8LtBlH9e/eKnvp
WOrYa9/tM00x1yrHU1L5RNOyXj+fpbYvlJ4lYX+0Dcrj/TWg+zAWV+7lPPS7
bGKfV/od5U8hH20aR+1nvAujyyDjqGLLhUVJ75Z11In7iR17vSjp3lLswNKz
tWw/fB2Kz0NUx1pWx+HHw60TR/Vt2WLJ13Wqzje0WxwNcVSJ9QWJJb27+nHu
lI/FxhS2SXNH2n+PtjiqqE67yjFQeUx5v6c56avGYnfaeZcRdSh9i6OaOoa6
dY66HlW+sMriqCo/+mOdSmrj5Nv5puL6Ou5t/UYRH0cti49oO2IxiSZ5n6Tu
KZUvVXaP9bH0587/rWheEK9KHLWN/LWt2GGqr5xPiin4dxD1vU8tH95fy+Ko
OhZV81FdU7G5eAYRR7X1Sql8ODUGcSz5+UQHHUcVlY2rxjFjYzpp3IGivDvW
l9jGUSXWL82fc7+NVeOoTe/30RBHlSZ5orarLK+Jfd4kjlp2Tek57tuPN302
leVFTcucVVSJo+raKivv+Ly/H3HUKuVPJW2r7Q8SlJU3qsRRdc58PV0q6T72
ZarREEdtkudLG/Ojxvr/x+5BO6avNImjSmw8mlhSvaJXNY4amx9XY8CklvGf
lUnVHfo+HUUpNs5/iuoe/fzEsXso/L+vU1S+F3uuxlJs/sFhxFGbbrMdlzqV
bOxkLMRRy67rJnVRw46j9uveaZrXNo2jFp2zpnFUjc1T1L4vJD2zfV1SmX7F
UdWvssrz27+PqR6oyr5qGZVTrEHHUYvOgx13Kf9+QRy16fmNjR0VyqZN89ci
9vyWletjY5s23baiey423pBPftwkPz9FkaI4qij2VPTb9ti1GUcV/bts3/X+
4q//qnmYn1+pSVmvn89S1UGUbVOsje6yZcvy7zc9D/0sm/hxi5VC3VPTOKr0
K96F0cXm22VzKNi+B9NnzChdZypupHq52LiKSqrn0Zhzdan9kM/fyihfKeqz
qOdDrIwQaGxGlRHss1t1EXrW+brLWExZ6449/3T8VIfi8y9f1rbzIMSeI2qP
FavH0faqnjSWP6o+se7xjOVzQS99YXy7DN/+xyf1/U+NK65yaKofn77nz5Nv
j1/Et2FTsuPM+nWnyhd+XjE9Tz2VdYvqq3UdFs0DpzJmWX/GcO493+4szLdp
+fOsa89SOcL/XlEcVWWRVBlOz7RYe7+y+0H0m3pmpa5L3ad+2wPVe6t9mf+u
jaM2/Y0ivm5I7Q7VdziWl+pduKhNZJO8T/l3bEztUC+kuljfPiHst8b8UFsy
/1mdcp3GeLbfTdXZNs1f/furnbc08G0lbN5n6dgU5YU2puPpvozl4+H8+HMR
yz9EbWOKtkHx6FQMq81jUcT2wUpdv2XtmPSsitUd2fxaeWEvYn1Ewzi2KZpT
L9ZuMiSV2338wlJ5Xu9J9jmh60H5XWzc5ti+q+wWu4Z0vDWOlL+G7LjKtm4s
3D9Wk/u9zvEset5WrUewyc77LE3yROX5fq7YkPRsjs2VXCd+6L+r+kI9B2P3
s55RqfJQ02dTWV7UpMxZhd/uVHxI59KXq5T0fqG6JF+20LkLYvPKhzoBy48n
pXo4T3mYYtqpa0rbqLYEMWXljbLyZ6C6AvUhLLoXlD9pfV6bx6KIrcNcHRlb
ttc8X2ze1isdh7L+3Iob+Hs6jEcQe/8LbHlm5vnnj/hcZedUuwBdG7bNi2Wv
cb2rpuh8+vcrHyu1/d/q5Ftin312vIWyfQvXeuyaLqNrKNV+Tc8qPZNCPuX7
k4iuNzt/oE8qP/h60KDoWrb9ShQTCKrWrYRjFatbabLNovrX1Hu2xqe3dQJ1
2j3aMTkse12on1OM7dMRO09FqlzXvdZFVclTyvavSrvBojYW/bp3muS1djx7
jYNTV9E5q3K9aNzJoutFz1S1A0/tm/rxxtqil0nlcW3c13oup7ZZ5yKV/+uZ
VdR+VmXm2DtWlW22z4NYe8BUPNvGUXV9qC4ptm2qv4i117J1jWqT4jU5vyq7
+rKWfdY1zV9TQpsM1T2qXWAsP9L1UTRmbpNtK7rnlEelyo4qu2q8LS1j6wfq
jC9mY46p/bPtwWzSta0+zOGc+fEIq5S9bPvZWNlL7xep54Pu+TCfVdXjWVQW
kl7Lev1+lurYxN4ZdWxCXZC/TsJ7TRvnoV9lE1H7JLtv4Vmsvsfhb7YtiGfr
rGK/3Y94FyB6t1c+oliAnqcqIxa1me0n1R3rnUZlVm2Hyp5F8dMY7Y+tu/J1
/b6vU9d3f/8cUvlPde0qn8bGoe+VymDqB6/2arpfi/rOjGZ6H9VzYN68efm7
qNrMac6tqmNIqOykZ1B+fn9f1m/zGA+Kykp6RqssqjpgXWPqx1CnX4va9+k7
Kh+r36uOp45r1Tk6+yUWRxXFCXRf5PPa/mE8hzYo5qz8R+vVsVQMKIyNVEbH
W8dMZUi1C07NQ9/kN+pSLEPnUnloneuhSd6n+Iv6ZmkfVXbzv6v2ENp3lYt0
r/Zjv6voZ/5adzv0+xq7SPee8mRtV5V7T/mf3it1rHXMdf31Mif96j+MKaK8
UP1WVYbUNVO3/XW/2L6PZXPMKC/Tu5fGHtO+KPantmDDus7KKJamY61jrm3W
OAGx97AiOn/2erH1RiHpd1LUrkj1BdoO5a1tGi33e1NN8kQ9n3Re9V6o41xn
fK9e6HrQc0h5ivKFqs/xJs+msrxoNJU59UxSeUfnQu/1veSZbdB9p7xKeZrK
Nrq+/NjpKVXLG2V0XtRXXe081QZD517nsKj93Wgz7Dxfx17HTzFTjT2vsbO1
DWVtaZrSudP51z2lcRD1/qOyRFvl9nBP6/pQWdLeJ7b+7fAjjmjl9yyVx/Q8
Uj6kOlONK6NrU32rm55X1YWprKN+L8oj6+ZFys91vek8q95e2+X7b402TbZ5
1R+eJ5pPWs8/xd9j7SvGiqLrOhhNdVF19fPeGVZeW+WcNaX8Wu+Duj/Unl7z
lld9Hg+LygG6HxUzUHktjPtZRnle2Ffd0+r3F5s/dBBsHDWMm6RrWNeZrmE9
W/Xu0FSv51dxU9VlKD9IxVv7/UzQ8dBxUj6k46F1V73net22sntOf1O8SnWv
2jbfT1jbrHpVtZOMzePblNavc6JrX7HGQb9TKN9T/ZreZ5Tflt0/TfKwfpf1
eqV91jNAbWx0LcTOgeojdA1o+9vOt/tZNtH7vc6VrrG26pitsVzGANqm8qna
cdnk7wfVS/i28OpLBiAuFUcFsHYJz0611VtbqSzvyxmxtuGxfq5jNX4JABhd
bD8DPzcbAABVxOKoAABg7aA2+77eUuMDqd2Q2nlp7MTYmJd1xi4D1jbEUQGI
2tOGfCA2V+vaIjYWjNpWq7+j2sb6eWmU6s4hBgBAjB2PXHNIAADQC+KoAACs
3WJx0qKkOGvdcYKBtQlxVABBmNcnNW/U2uCYY46tVc5Q6mV+HgAAvPAMUpue
OvNFAABgEUcFAGDtpja6ftzeVNJ4vqNl7jlgtCKOCiDQXBzrv/kta3WfVM0v
stfee1cqZ/zXf3+klXmFAADQ3M7hGaw5RgEA6BVxVAAAoHmDZ8+ek2255VbZ
Bu96d6dsoPdO9aHRmHsay7ftuZaBNZHm+VMsICTNxw1g7aWxa7f99rezqVOn
DntThkrzr++22+75uBY2dqr5Y3faeZds4sQT8vlUAQBog8bX1/P3oIMPHvam
AADGuFtuuSV/b1GaOXPmsDcHAACMAqtWr877qQIAALRN7bJUzlj9+/IGAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAA0KbLL78imzHjp9nMmTOHvSmtWLV6dTZlyinZyZMnZ1deeeWw
N2co7rnnnuykSZOyH+yxZ7bDuHHZ/fffP+xN6ovnn38+v3aVFiy4ZtibAwAA
AAAAAAAAgDXI5z73+Wzd16+XpzatWrUq++1vf5unQXrmmWc6+7PzLt8b6G/L
6tWrO/utmO6gXXbZ5Z39D2nhwoUD3462FB3P3/zmN5193HqbbYa0hQAAAAAA
AAAAAFgT9SuO+sMf7dtZ71133dXquosMO4568cUXd37/jDOmDfz3P7PZZ7ti
qBu8693Z4sV3D3w72lJ0PImjAgAAAAAAAAAAoF8GEUe98847W113kWHHUX/+
8593fv/0M84Y+O/bGOrDDz888N9vW9HxfPrpp7PvfOe7eTrxxJOGtIUAAAAA
AAAAAABYExFHbddoiaP+139/ZOC/3Q/DPp4AAAAAAAAAAABro2effTa79dZb
s9mz52TXXntt9tBDD1X6nuZpvGvx4mzevHnZggXXZI8++mjt337iiSeyW265
JbvhxhuT/QaXLXs4u+6667LHHnus1rq1X4sWLcquvPLKbMmSJdmLL76YXLZO
HFX7efPNN2dLly4tXbZuHFXzX95++6/y4/q73/2udPmUVBxVx/uqq67Krr/h
huzJJ5+stc4621Yn7qdtveeee/Lt0nnWuXruuedqbZsXfvsTm27aaD1VaXt1
D+l605y4Veka0vWpe+iOO+7Ij0VMW3HUFStWZFfPn59deuml+Xmss62B5mrV
GMm6Z1euXNnztgAAAAAAAAAAAIxWK1Y8nm377W93jYEa0hZbfDmPb8ZoHNHv
7bpr9Hvq/3f99ddHv6eYVlhG8aJ99vnhiO9v9a2tO/HYKVNOyd73/g90ff6h
DTfMLv3FL0ase9LJJ+dzYCo98MAD+XfXf/Nbur6rf588eXI0BlgWR33++eez
gw4+OF+/Xae27wd77JnPUWkdcsih0eOjdPzEiSPWP2PGT/Pj4rdXY7WmzkMR
H0dVDDccf5v0t7J5W+tsm85Nar+/9vVvdC2ruPm+++0XXVbr//H++2fLly+v
vM+K6+t8+HMUrgvFDUXXUDh3KYcddnjn+4rxBop3hr/Pn78gj33aayekr3z1
a4XtChQX9dsZ9vvY447rxFOrHM/HH3+8s9977Lln9Pcuu+zyEfdSSAce+JM8
Ru4p5hqWmTDhmPx3ttt+hxHf/+hGG+XtCmIWLlyYfWnzzfM0jH7RAAAAAAAA
AAAAdS287bZoHMcnH2NTPC7EoYrS4UccMeI3QyxOsSLFmVLfVQxXMbSi9SuG
ZR1x5JFd8aWi7ypW6/vhFcVR77vv/mgM0sdT7bEq2v6jjx7fWU7xK8WXyo6n
4m512DiqjyfH0sWXXDJiHb1s26xZs5PL6RgHL7zwQvbJT326dN26Zqr2Q9Y6
i9almJ6E617HJeWAAw7sfM/2I9ZxCn9XzLLo9xRfVOzRUl9O20c5ldROoerx
VAw//G3rbbbp+j21GSiK6Yeke/rXv/5113ftenXPFN33OpbKU7zLL7+i6zcA
AAAAAAAAAABGM8UQbf9CxQhPO/30PM6k8T5tzFCxoM73Vq/O/x0++8xmn81j
aBrjU/3dfN/Cq66+uut3Y30aT5o0Ke/jZ/v/2bTDuHHZzPPPz0444cSu3/bx
IhtHDWm33XbP415KPublx0ZNxVG1zxv/7yZdcT31z9T4s2eddVbez86uN4z1
q36KOjb2c/VDDccrsPHWcDyuueaa7IILLsy336577ty5lc+xjaPaONbZZ5+d
b/s506d3HU/99lNPPdW1jl62TX1MtY82VqiYoP6m7waKs9trTP0u77333jw+
ruNk+07qd6vQuM0613YMXJ0v/VspjGPcVhzVbv/MmTPzfbD7pXTiiSd1rVfX
sv1cx1j3zk033ZT3+bSfaZztKsezKI5qj4WSfkNjOmt85jPPPKvrnvz8F77Y
1VfbrtdeB6eeOjXfZv3XtsX4xje/OeI4EkcFAAAAAAAAAABjieInIbaheJXG
97XUD9H2YdQ4uTJ9xoyuvnCxuREnTjyhK25i57m0MRvFXx555JGu72p8URuz
mTx5StfnioOF7dL3LR9H1XZ4isfZeJCdHzQVR7X7rH6yfvxT9YG0YyMfd/zx
XZ8XzY969913d21POM6W4nBhGfXhrcrHURXP9duuuVJtzPzIo45qbdvK5vO0
cdLYPK2K84XPv7vd9pX3O7DnzGszjrrX3nuPmMtV12343I5lrPl67X5rjGnP
3j+77/6Dzt+LjmcqjqqxqO3vXTJr1ojfU5zWLqM2ArH1KqndhJ/DWH1Q7TJq
d2CpL/f48RPy1GReVwAAAAAAAAAAgEGwcZOrrroquoztH6q+dmLH9UzNhyg2
XhrGUvV/t/GaQH0abQzWx2REcbGwjI3/2jiqxouNfVd97dTnLiynPnVBLI6q
/o22v92S++6L7u9DDz3Utd22T19RHNWOmfuzCy6Irlvs+YrFM2N8HNX2gbV0
DMIyiqm2tW1FcT8dV50j9fNVf8yy7a8TPw4GEUfVehQb9ZYsWdJZxvbntn1R
db3pOHi6pm0bh6CXOKr6DYe/x/qKxtat8Xtj61VSH+sYe49oTlUAAAAAAAAA
AICxyMfXYn1KRX0VFyy4Jk/qg2a/Z2NDMRp3NCyrWE5g46iKPXr6rfC5xvON
sX0/7XyONo6qvm8pduzUqaed1vl7LI5q40jqi1fE7tuyZX/ss1cUR7Xf8X1F
LbuOCy+8qHA7Anu+7LyknmK+tu9xW9tW1h+1aLsV891xx51GfRxV/adjNAeq
jbUG9ho99NDDkr+tvri6F2648cbO33qJo9rf0zyrKTbua8fetetVzDtFsdew
nPqfAgAAAAAAAAAAjEWKUcViJmXuWry48z3FSYto3sRYTNPG5mL9Ra+99trO
5wcfckh03TaOqvk0AxszUr+/FBsH23//Azp/j8VRNY+kjTmrD2Uq2eVuu+32
zjpScdRVJtZWtm4b59SxrcLGUcvOl9139SdsY9uqxFH1O+rr+oM99sy3wfZr
tGm0xlE1Z29KbPxptQ2ItS+oopc46nbb79D5u2KlKYql2+Mdxim267XjE3s7
7bzLH38n0WcbAAAAAAAAAABgtLPjuH7nO9+t/L1Lf/GLSn3pZM6cP47Pq3hU
EOKoqfiVjaNqXOGYKv1Rb7rppuS23XrrrZ3ldv3+9zt/j8VRNZ5xLK5Xluzv
p+Ko999/f0/rLordWTaOmho7N7D9CTU2bxvbVhZHVX9LG1f3ycZUhxFH/dG+
8fNm46hnnXVW8vuxOKqdizY1Rm5KL3FU+3tFfYpFfcz/GEt/fMR61T84hTgq
AAAAAAAAAABYE2g+1CqxEW/+/AWd7+27336Fy5599tmdZadO/WMfxUHFUe14
qN7ll1/RWU4xziAWR509e07nbxrXVP0tq6RHH320s45UHPWxxx7rihtWXbfG
fK3CxlG33HKrwmVtf9oXXnihlW0rivvF4rTf3W77fB2XXnppPjas+kQOM45q
Y4OpOKqu85RYHNVeY/fcc0+t/ekljmrnAn7kkUcK1x8b25k4KgAAAAAAAAAA
WJvYGFbRvJmKUR4/cWKeFt52W/bggw92vqf+i0U0Xm5YVnGxYFBx1KL41pln
nvXHGG/J/KiKn1WNRaYUzY9qY1erI+McN2HjqO97/weSy+l3w3bY5ZpuW1Hc
T+c2fPaNb34z31Zv+fLlQ42j2thyW3HU3Xf/Qee7as+QcvY55+T33cmTJ3f+
1kscVeMlh78vXLgw+Xs2bm7nQSWOCgAAAAAAAAAA1iZ+7stlyx6OLqf+gWEZ
9eH031PsJbV+OyarjXUOKo669977JPf/M5t9Nhofi8VRNRZq+Ju2eeXKldF1
qg+nxlDVfmvOWc03GRTFUe22FPWh3WvvvfN1K/l1pNg4qpLikjFXXnllND7e
dNuK4n6KSYfPdM5j7PfbjqPa8YSffPLJEZ8//PDDXceurTiqxj0O37V9oS2N
9xuWUSw36CWOan8vNd+w2LYFO+/yveh6iaMCAAAAAAAAAIC1ge2nFovnLF58
d1ccKfQX3GHcuM7fDjzwJ9F1n3b66V19Da1BxVFTsT87b6u2wcY7Y3FUsTG/
Y487LrpNkydPScabbBz15ptv7vrspEmTOp997evfiPb7VD/CsIxiclX7hvo4
quKJq9x3tYzdb9tHsum22bjfSSed1PU9Ox/rGWdMG7FexTHVL7JfcVTFCsPn
8+bN6/pMx+hLm2/elziqYox2vRq/2NP1Ez4fP35C5+9FxzMVR73rrru6rnf1
Kfc0F6qNK9trtI046hNPPJHH6pWK4vEAAAAAAAAAAACjgfqg2niOYn2a21J9
TBXvsHEVxVwDxX389xTLVPxM4wVPmXJK1+c33XRT1+8OMo6q+NX0GTPybX7o
oYe6Yp1KdkxfScVRlyxZ0vU9bZfWqXibYkY/Oeigrs/9/KW2T6BiXNddd10e
JxT1Y7XHWjFb9UfU39V/VOO72nX7fohFfBxV6Tvf+W52yaxZ+XYrZmrjhbbv
YxvbpnMfPlMfXf1eOF+KD4bPNJawYpnq+6v4vWKTtj+zkrZD/UZt3LtMURxV
c/ba+OLMmTOzRYsW5f+1cfO246hix7zWZ3Pnzs2vB52Tgw4+uOt37fVddDxT
cVRRf2H7e+pbrmOp6+P6G27oGr9Y8XKrjTiqnY9Y2w0AAAAAAAAAADDanXvu
eSPiRT59dKON8viW5eORqTRhwjEjfnOQcdSitN32O4xYbyqOKjbuVpTUF9ez
fTZDOvro8Z3PFcuyc5GmksZZfvHFF6PHJMbGUcvWr/jaXYsXj1hHk21btWrV
iOXCfLyPPvpo6XoV/9T1Z/92wQUXVt7/ojjqAw88MCJW69Pnv/DFvsRRH3/8
8a4xk1NJMd2qx7MojqrPbDw8lbSM2gz47xJHBQAAAAAAAAAAayP1cVN/wFhc
Rf3mVqxYEf3e1fPnJ+NQih9d+otfRL8X4mI+thQobhfWc9TRR0eXsfO22piN
jaPq99W3LrZ9mifSx4bF9s2Mbtv11yePlcagvfjii6PfU7/VfffbLxlHFfWX
9WPJ2hjnxIkn5HG0Op599tnOOtT/c9q0M6PrV0wv9I+NabJt50yf3hUvDXE/
UXzZx0nD9aMYuo7bpZde2vXZzy64oPL+h+/4PpaBYoax+KLOscZ/tv1t1U82
mD17Tufv6u+cEu4Prc97/vnnu8Z7tknHJHX/pI6n+pGHv6nPsafrfffdf5CM
oeqeevrpp0d8z67XzpvqfW/XXTvL+bGD1W/WxmoBAAAAAAAAAADGkqVLl+Zj
qyoWqNiq+syVUSwojIV63PHH5/301D/Uz8E5KDaOesstt+R/0/ilikmdeurU
/L9F8cIqFC/U2LbnnXdeHj9Un14/dnHKI488kn/3nnvuycfG9dSfU3HhWbNm
5+s+66yz8jGWdZzbovOq86x43GWXXZ5vUxVNtk0xPPXn1L6vXLmy6zMdB/VB
PvPMs7IZM36aHxs/du+yZcvyZTS3Zpint006BtoXXb+6nmPnpl+0P7feemt2
4YUX5ecjjJFdpOh4ltH1r32ddPLJed9pjTFd5V4HAAAAAAAAAADA2BWLowIA
AAAAAAAAAADA2ow4KgAAAAAAAAAAAAB0I44KAAAAAAAAAAAAAN2IowIAAAAA
AAAAAABAt9PPOCPb+H83ydPixXcPe3MAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGveXLl2d77rlndt111w17U9Ya
v/vd77I99tgju/nmm4e9KQAAAAAAAAAAAACc559/Pttggw2yvffeO1u9evWw
N2et8eKLL2af+MQnsj/5kz/Jrr322jyuCgAAAAAAAAAAAOD/zJs3L5szZ040
zZo1K5s9e3bXv++4447sqaeeyp599tk8NYm/vfDCC9lGG22Uvec978nXifoU
D507d27nHJ199tnZAQcckO21116l52bhwoXZ3//932cvfelLs8cff3xAWwwA
AAAAAAAAAACMfpdcckneJ7HXtNVWW2Xz58+v3Zd01apV2ec+97l8HdOnT+/T
3q35FIuOnZcPfehDlc7JpEmT8uU/8IEP5OsCAAAAAAAAAAAAkOV9GDU3qcbV
VR9GG4tbd911O5+Fz5X0/5tttlnXskcffXTlOJz6SWp5fW/bbbfN+1SiNzqW
++yzT35eFDu156Oqb33rW/l3dtxxR8ZWBgAAAAAAAAAAABzF5GwsbuONN07G
OPX3adOmdcVSt99++3y+0zLLly/P3vjGN2brrbdedt9997W9G2slnQ8b277l
llsqf1fn461vfWv+vcsvv7yPWwkAAAAAAAAAAACMPT6OuvPOO5f2Fd1uu+26
YqkTJ04s7NOo9ak/q5Y97LDD6IvaEh1zxaV1XF/ykpfUHqN3jz32yL+7+eab
0ycVAAAAAAAAAAAAMHwcVfHOsjjnvHnzuuKoX/3qVwtjeCtXrsz+7d/+LV92
0aJFbe/CWuvee+/tnIN3vvOdtWOhv/zlLzvfv+iii/q0lQAAAAAAAAAAAMDY
00scVeP4/uu//mvnO6961asKx/adPHlyvtxHPvKR/PfQjnPOOadzDn784x/X
/r7O85vf/Ob8+5tssgn9hAEAAAAAAAAAAIA/8HHUvfbaqzTWqZjpOuus0/mO
YqqpvpBaVnOuhrlU0Q7FPLfddtvOOViwYEFP6/n+97/fiYU/88wzLW8lAAAA
AAAAAAAAMDb10h/13HPP7RrX9+tf/3oy9qrxfv/u7/4uX+6UU06pvX2Kwz73
3HPRcYMVu9Xf684L2g86ZqtWrcqPwyD6dWrfQ5/gf//3f8+PkX47HI+q/X5v
uummznmcP39+n7caAAAAAAAAAAAAGBvqxlEVo/v4xz/eFUd9/PHHk8vfeuut
neWuvfbaytulmKT6xm666abZy1/+8uzTn/50NmXKlPz3tX1PPfVUdsghh2Tr
rrtuttFGG2Xjx4+P9ol99NFHs+nTp2eHHnpodt1111X+/TrbOXv27GzPPffM
/uM//iOfp1THUH9/4oknsrlz5+b/37Z77rmna37aO+64I/vud7+bveENb8he
97rX5X9TH9Wy39bnf/EXf5Gv59hjj219OwEAAAAAAAAAAICxKBZHDX0qw3/D
/ysO+slPfrKz7JZbbpktXbq0cP2nnXZaZ/lly5ZV2ibF9sJYwIrZapvC7ype
edttt2Uf/ehHs4997GPZPvvsk8dY1Tdz5513HtEPU7HB8PsbbLBBa31XdUzu
uuuufBu07i222CLf1y9+8YudY/OOd7yj8/9t91ENc84qaXxfxU7f9a53Zaee
emq2zTbb5H9/9atfnc2YMaNwPTpe//AP/5Av/+Uvf5k5UgEAAAAAAAAAAIAs
HkcNSf1Bw/9vttlmeb9QLbPJJpvk8bmyvo6Kye266675d1760pdWGmtWfUp3
2mmn/DuKU4a4nuK14fff/va3Z1tttVW+7I033pi9//3vz//+yle+sqtPqn7v
gx/8YFff2Tlz5jQ7YH/YL61HfT/DMbO/a2O3Veecrfv73/rWt7p+Y+rUqV3n
47jjjsv//qY3vSnvk1u0rre85S35su973/uS89wCAAAAAAAAAAAAaxMfR9X/
FyUt87a3vS074IADsgcffLAwlqqYnPpp6jvrrbdeaSxRMT3FA7X84Ycf3vWZ
fkf9ScN2asxaLa++mOFv73nPe0bEUY855piu/qhtjLF71VVXddb53ve+N5+b
1FKf1w033LCzzJVXXtn4Ny3t4/rrr98V+/bxz0WLFlUeq/nDH/5wvpzW2Y8x
iAEAAAAAAAAAAICxxsdR1XdSMTn93SfF2O688858PtLQ11Fzlj777LPRdT//
/POddeu/ZWPGav2KP2r9ftnly5dnf/mXf9npNxm2XTHCsO0a89d/T30xzz77
7Hx+1DrzsxZto8a/Db95/vnnR5fROLv6XNvc1ljCwW9+85vO76ufcCz2qRh3
WEZ9V4ti2FqHlvunf/qn1rcVAAAAAAAAAAAAGIti4/qWxTvV1zGMsat00EEH
RceDVXxP/VC1zOabb166Xq1D2zJ37twRnyleGX5vhx126Pxdcb/rr78+/05q
TNowv2sbLrzwwq4YZoyNYWrO0rbHyp0+fXpn/fvvv390mdmzZ3eW0Vyyimmn
bL311vlyr3jFK4ijAgAAAAAAAAAAAFlvcVTZdNNNu+bnPPXUU0csoziq5kXV
55onter2xH7/wAMP7PzWtGnTKq2rbdqfj3/8453t+MlPfhJd7qKLLuos89Wv
frXS8azK98G9+uqro8spvhqWUf/Zolju7rvvni/3Z3/2Z8m+xQAAAAAAAAAA
AMDapNc46oQJE7riqF/4whdG9GVU3PFv/uZv8s+32WabRtv4yU9+svNb9913
X8/ramLlypXZOuus09mOSy+9NLqc4qthGY0n3Cb1K9V4ylr3y172shFzs4pi
pjbe+6Mf/aiwP6769/ZrDGIAAAAAAAAAAABgLIrNj1plDFw7dq3SK1/5yhFj
xyqe9453vCP/fJNNNum5X6b6SIZxhDXv6LDMmzevs7/qu6m4qudjvhpzuE1L
lizprFvnLTWe8qte9arOcpMnTy5c5xZbbJEv95rXvIY4KgAAAAAAAAAAAJD1
3h9V48naOOpb3/rWETE4xfg+8YlPdD6vGkfVNtlY7pw5c7rGyfXxWq1Xv93W
HKgphxxySGc73ve+90X357e//W0n5vvGN76xE+dUbLONeVKvuuqqzjbsuOOO
0WWuuOKKzjLqY3rdddcVrvNjH/tYZ3uJowIAAAAAAAAAAAC9x1Ht/JtKW221
1Yg4pv697bbb5p+/4hWvKI1zKs44e/bs7IMf/GC2YMGCznbY+UAnTZo04nuL
Fi3KP9N3YxTDVGo6T6nG6A3bMW7cuOgyF154Ydcx0W9qvzfccMO8r6/fBu2z
tq1qDPj222/vrP/EE0+MLqPfqTqmr7bnXe96V76s/ttGrBcAAAAAAAAAAAAY
63wcdeeddy6N6anP4mc+85muOOp5550XXdbGHp944onC9V5wwQWdZdddd938
dxRjfM973tP5u+KIfvs322yzfExaLestXrw478P62te+tvKYxSmnnnpqZzv2
2Wef6DI25jtlypT8b1deeWX+72OOOaZrWcV9dew/+tGPZjfeeGOlbdMxCXPO
/vSnPx3x+YoVK7K3ve1t+efvfe97s2eeeaZwffrN17/+9fny6jscO4YAAAAA
AAAAAADA2sbHUTfeeOPCfpuPPfZY9qUvfakrhqp/p/oxhhii0q233ppcr37z
C1/4QmfZENOz49gqaa5US/Hb0I82tm8//vGPu76vfq69mjVrVle/Xb/906ZN
6/qtu+66K/9M4wErzvvUU091lte+ac7YsKzivJr7tIwdK1l9gv3+brnllvln
66yzTjZjxoxK6/vrv/7r/DsHHHBA4z67AAAAAAAAAAAAwFg1d+7c7OKLL85O
OumkvI+m+n6GeF4Yf1ZxQiX9v/237Rsa+lwW9aNcuXJl9ud//uf5sjNnzkwu
p/hd6Mv5z//8z9myZcvyWOMHPvCB7LOf/Wzn9xSr1LKK/4V5UydMmBCN4+pv
22yzTdf26vu90n4eeeSRnflRf/WrX3W25cADD+yM9xt+S31Mn3vuuex1r3td
dtRRR3UdJ83xardL6Zxzzqm0HerHquVf/epX53Ofaht0rNQvV3/faKONsoUL
F1aKiS5durTz+xqTGAAAAAAAAAAAAFhbXXLJJSNieHWS5jrdbrvtsuuvv750
Pk3FCz/84Q8n+4xaN998c77cX/3VX+V9ZP/2b/82j6EqFhn6er785S/P3v72
t2f/+I//2Fln0Vi06pOp8W3Dtmuc4SbUH/ZTn/pUV9xZ8cz//M//zOPT2t8Q
z1R8Omyn9sFSTNWOAax0xBFHVNoGHXPFjnWc7DaoT+suu+ySb0PVfqXjx4/v
/P4DDzxQ+3gAAAAAAAAAAACsrRSP0ZyMZfGysWZN3KeqFO/TGLXqz1k36buK
W1adZ1TXz0477ZTH6T7/+c+XxvcUyzvjjDOyH/7wh3m8V+cprOf+++/P+0zq
s0mTJuV9asu2Q99TXFF9ONdff/1s4sSJ1Q5SAa3voosuytd1+OGHZ/Pnz8+3
M+ybjo/+ps8UK9XyMbr+tL86F+985zvz8X+r0n4rjq1t0PeuuOKKPFZb95r+
n//5n/zcaEzltfV+AAAAAAAAAAAAqEtxIY01ut5662WnnHLKsDenNYpzaXza
ohgX2qM5SRWre/3rX5+P81umLNaqz6vGcYMwjq5ij23RdhRta9nnwdNPP529
5CUv6XnM4V7nNNXYyX/6p3+aH5fp06czNyoAAAAAAAAAABj1wnyHihWF//r/
D//u5zb87Gc/y2MsO+64Y+241aDoGKgfnf6rpH6Bv/zlL0u/d/755+f7tskm
m3T6PKI/dH622mqr/HiffvrpQ9kG/a7GvtW4vKPNZZddlh+b22+/faC/e8IJ
J+S/u8EGG/Q1LwEAAAAAAAAAAGiLYj6aH1Lpgx/8YPT/Q9J4nv1w4403jvrx
PhXb/dKXvpT3LX3lK1/Zmefx3e9+d6W40J577pkvv/3224/afVxTaJxbHWuN
IzvoY63rZMstt8xj5qOt/7G2bfPNN8822mijEXOo9vt3dW/rnBx77LED+10A
AAAAAAAAAIBeqR/oXnvt1YmZvuxlL+vEB0N6zWtek8+nqM/70Y/s17/+dfam
N70pe/nLX54tXLiw9fW3RbGgDTfcMD8W9vjssMMOlcYo1fc/8pGP5N855phj
GNe0j2yf1AkTJgz0tzWusO6jc889d6C/W4XGzdYxOfHEEwf6uxpDWL+re2eQ
8VsAAAAAAAAAAIAmFN/TWLOKPR1++OFdMUKNAaq/K/VjrF3FEnfaaaf8t/bd
d9/W19+2EPscN25c5xjNnj278vfVT3KdddbJXvva12ZLlizp12bi95544ons
He94R/Yv//Iv2QMPPDCQ31Q7A8XKP/7xj4+6MX1vvvnm7A1veEP2la98ZaD9
ZP/f//v/7d17lE3lH8fxPyRFFCW51CjpQoVupsVk9TOoSHJLlqFUzKCWSEVJ
uaSESCpC7olKE2VmtGqpTMhtLXIbTVZIF0oI0z/Pb32etfZe+8ycOWfPcc6Z
M+P9Wmsv5pxn7+fZe8756zPf75Nv59V3JdI9WQEAAAAAAAAAAEqTMsJ+/fq5
+aCyj1j3RFXt3rnnnmuaNm1qjh8/HtO5okV5srcm9ciRI77P9T7jF154IWH3
gS0v8vLyTKVKlUx6enpc9qVdv369eeCBB2yNdaLZvXu36dy5c1wzVH3e1Qtb
n/eFCxeyLyoAAAAAAAAAACiTlJmqd6+TD2ZkZMS096wyxKFDh9q5Xn755ZjN
E23Kgpxn1LBhwxJnzU5vVWpSY0+fsbVr19rnPWvWrLjk1pojUXs2x3tdb7zx
hn32r7zyChkqAAAAAAAAAAAos1Sv5+3pm5mZGdP5Tpw44fb7TOR9UQtTDa3z
jLp3717ibE7ja9So4dakIrb0vDdv3mxatmxp5s+fX9rLOWvouevvMvQZj0ct
MAAAAAAAAAAAQKzk5OS4+aB67f72228xnW/BggV2rmuuuSbm/YOjaezYse5z
Gj9+fETX6Nq1qz3/xhtvLFP3XpYlcp1oecUzBwAAAAAAAAAAZZ2yDtWNOflg
cnJyTPM95St9+/a1c3Xo0KHMZC1ad5s2bdznlJWVFdF1Fi9e7F4jPz8/yqsE
AAAAAAAAAAAAEA2F90ZNT0+PabZ5+vRpc9NNN0Xc21ZrU6/QTZs2mRkzZphl
y5aZP/74w76uI1b7YB47dsxUq1bNrvv88883p06dMp9//rmZOnWq3eNVfWNP
njwZ9jrePVaXL18ek7UCAAAAAAAAAAAAODPKJKtWrepme/PmzYvpfIcPH3bn
Ug5aEsogn332WZOUlOT2xtW/DRs2NCtXrjQjRowwrVq1MosWLYr6ulesWOGu
OyUlxa2pvfnmm03NmjXt/1u3bm327NkT8jrKrS+++GI7/rnnnisz9bgAAAAA
AAAAAADA2cS7N6qOvLy8mM6XnZ3tzvXFF1/4Pk95b//+/e15zZs3N1u2bLGZ
5Pfff286d+4ckAXff//9Ue9N/NJLLwU8J/Uk/vrrr+08qlUdN26cfV29f7XW
4ig31b6wGqs64EjrZ3Ud5cqxOMh2AQAAAAAAAAAAcDZThjd+/Hg3G6xfv35M
90aV2bNnu/Nt377d1znK9nr06OGeVzinVK9gb2/i999/P6pr1nNKTU11r9+l
S5cia1i9erX7/jvvvBPyenfccYcd16xZs4if9/79+wNy3Wge69ati2hNAAAA
AAAAAAAAQHmgLFC1m05+1rt375jtLyq69ujRo935VMfp5xxv1qu60MKUs6q/
rjPm0KFDUV23d0/T//3vf3Zv1MIKCgrcMQMGDAj5HNu3b2/HXXXVVfbakVD+
qv1l/R6jRo2yNbMTJkwwU6ZMMW+//bZ57733bB/nDz74wHz00UcmMzPT1ghH
uiYAAAAAAAAAAACgPDh69GhAHaJqRWNJ/WKd3ryXXHKJr1rMXbt2mdq1a9tz
2rZtGzTj8+acZ5JNFmfNmjXu9fv16xe07+3GjRvdMR07dgx5b3369LHjtK9q
qB7AAAAAAAAAAAAAAOJv2bJlATnqnj17Yjqf8kftK6q5mjZtGjZHVU1nenq6
u75nnnkm6Dhvhqn62mjX1L722mvu9SdOnBh0jGo7nTGdOnUKeW9Dhgyx4ypV
qlTuctTc3FxToUIFDo4SH++++25pf3wBAAAAAAAAAABspunkeToaNmwY871R
NafT09ZPjqqMMSkpyV3j0qVLg47z7rn6/PPPR3XNymTT0tLc62dlZQUd5x2j
56o+v8Up7zlqrPZt5SjfBzkqAAAAAAAAAABIBMowU1NT3Qzj8ccfD9qvNpp0
fc2j+fz09d22bVtAzpKfn19kjHJO7UfqjNH+ntGkHsG33367vXbVqlWD9gzW
faifsLOGadOmhXyWDz/8sB1XHvv6HjlyhIMj4gMAAAAAAAAAAKC0Kb+rVauW
m/3NmjXL13nKEZUbenvnKjPUz35y2FGjRrlzHjt2LOTYefPmuWOVUwbr16v1
XHfddXZM5cqVzT///OOuKRq58OnTp81ll11mr9+9e/eg18zLywvIe5cvXx7y
mvfdd597T6dOnYpoXfodZGdnR/1QvW2s65IBAAAAAAAAAACARJWZmRmQ/W3f
vj3keGWYkyZNMm3atDG1a9c2AwcONAcPHjRbt241PXv2tFljRkZG2AxuxowZ
vuf0Zq7dunULOubbb791x7Rt29auU4f6+y5cuDD0Q/Dh5MmT7vVfeOGFoGPm
zJnjjtHzCfcMWrRoYcc2a9YsaH2rH1999VXM+quuXbs2ojUBAAAAAAAAAAAA
ZZ0yTyc3u+GGG0Jmf8olhw4dai6//HKzePFiuwdm/fr1bR54/fXXmylTpthc
tlGjRmb16tUh5125cqXvHrzvvPOOO3bkyJFBx7z22mvumDFjxtjXduzYYX8u
vFfqnj17bI67aNEiW2fqh+p269WrV+walIM++OCD7hpycnJCXk/1rHpOGnvn
nXdGnKPqd6K1xeKIdX9noKT0PXnzzTft31boewwAAAAAAAAAABALysqcLE/H
I488EjI7c2o+1b9WNLZVq1b2NdWiKoNVjap+VtYRyqFDh9x5lWmG8umnn4as
BV2/fr1JSkpyx6xZs8a+7vQD3rRpkztWueOjjz7qjtX6/exN6t0fNdga5s+f
715z8ODBQXsPe+lZOf2UhwwZQmYJhFF4D2R9f8L1BAcAAAAAAAAAAPBDWZ3y
QKfecNWqVQF9XKdNm2YKCgrsXp2F6yOVYWhfUG8tpl5zctQVK1a49aodOnQw
P/74Y8i1aI4mTZqE7JPr0Fr69esXkNc61FNY+6F670MZrdaSlpZmOnbsGHAv
ur/C/WvD1cM6z2706NF2vK7rvaY35/XT09i5p4oVK9pzlMECCE3fK+0l7P3u
hqv7BgAAAAAAAAAA8EPZqd+9MVNSUorUSBausdywYYMd26BBA/e9cHWY3mul
p6fb85V1hqPc1al1veuuu8yXX35pxo4da38eNmyYOX78eEBf39dff93+X/u2
eilHVR9d772+++67vupBNYf2MtU5qmlV72JvP+EJEyb4ylAlKyvLPW/z5s2+
zgHOZs7fRjjfmypVqpjDhw+X9rIAAAAAAAAAAEA5oBxi+PDhdr9QHaoD1eH9
v/PzwoULw17vrbfesnnGwIEDI+pLO3PmTHu+asz85I/KUrU25aA1atSw+5HO
nj3bnqv6Tu3Zqtf0Xs2aNW3GGSzXVZ6sGlJdq3HjxjaP9evEiRPmySefNNdc
c41de8uWLc0zzzzj1uP69fDDD9vzNb/fPVqRWPT7Lm/9mBP9fvRd1/f28ccf
d/t3AwAAAAAAAAAAxEuofMh5Xf869aTLli0rcr4f+fn5pk6dOvYav/76q69z
lKOoplRHsOzVeV9ZaahMSO9pzKWXXmree+89X3N7z9U8Tn/kkmZPej5169a1
9z1q1KiEz65QlPbcVZ5fnmqJf/rpJ3tPn3/+eYn+JiDeymN+DQAAAAAAAAAA
yi5lF7NmzTJ9+vQxCxYssDmi0x/X21tz/fr19jU/OYzGqP5V46dPnx7L5Qf1
888/27kzMzPjOu/HH39s5z3//PPNzp074zo3ztyff/5p8/fBgwcX2Uc4ESlz
1HctXM23xqnWWjXSu3fvTugsFQAAAAAAAAAAIFGoXtTZl/Dtt982eXl57s/e
LOmxxx4zc+fO9Z3BKMtUTWq7du3inklNmTLFXH311Xbf03jx1vGqN2lZyOES
jZ7ZiBEjAnpRhzr0e1bNdHZ2tt3TVjXEkWaEqnXW7y41NTVh+zHr3pxe3U4P
3LZt25pevXqFreNU3+rk5GQ7/t9//43TigEAAAAAAAAAAMou9fxUftS1a1eb
JXXp0sW8+OKL9rXvvvvOZjdjxowxV155pc2p/PLWpE6dOjWGdxDowIEDdl9W
5Uzx7BGam5trqlWrZqpXr262b98et3nLE+WXToYfydGsWTO7d25Jc0J97jt3
7mwqVqxof4+JauvWrUHve9y4cb4+68qaK1SoYPr27Vui7zIAAAAAAAAAAMDZ
SPlLq1at3Eyme/fuNlfSv7Vq1TJXXHGFSUtLi6i+UnlWixYtTO3atc2uXbti
sPpAWqNq9FQHqz1a40XPsHXr1vb5KTumb2pk1J9WtaU5OTkmKyvL7S+tQ5/R
VatW2fd0aJxzqI767rvvdseq5vKXX37xNad+V8OGDbPnqfdtIv/u9DlTFqr7
T0pKcu/3008/9X2NsWPHup/TcP2AAQAAAAAAAAAAznbKZ5SpKENy6tr0f2fv
xTPJlvbu3Wtq1KhhevbsGfPcxql/XbRoUUznKUy9aDWvsjzq/KJDn0Pn96lD
mWqoz6Geu2pKvbWp27ZtCzvPli1bTJUqVezfDKindVmg5+DNmP/66y/f5+o7
qF7b+lsD9d4GAAAAAAAAAABA6VDms2HDBpv3vPLKKzGt99O1N2/eHNeaQtUC
6t569OiRsPtqlkUlzVFlyZIlAf1un3rqqZC/E83Rr18/OzYjIyOufaDPhPb9
Pffcc+2677jjjhL/fcLrr79uzx05ciQ1qQAAAAAAAAAAAKVI+deaNWtKpVY0
lpRB3X777bbnLLV90RVJjnr06NGAHFW9b0PlqNobWLXSGvvZZ59F+xZiZvbs
2e49ah/gkv7dgHps61xqUgEAAAAAAAAAAEqfcrEvv/yy3NW/6Z4i2TsWoQXL
UcN9dpQnevf61aH9RIvz6quv2jHaA7gsfS6dGtpI8189p5SUFLcmtazU4QIA
AAAAAAAAAABnu0jqUZVnX3nlle45NWvWLLYeVblpcnKyHffQQw/F4hZiQs9A
vXydezx8+HBE15kwYYI9/9577zWnTp2K8ioBAAAAAAAAAAAAxEIkOeqmTZtM
pUqV3HMGDRpU7DnqAXzeeeedUa9pXVt57H///Wcz3Hjsy3vy5ElTsWJFu+4m
TZrYeXWoV+/OnTt910YfOHDAXuOiiy4yBQUFMV41AAAAAAAAAAAAgGgoaY6q
utNGjRq545s2bWr++OOPYsd/88037th169aVaG1ax8aNG82kSZNM165dTfXq
1e1erJ07d7brWLlypd23NFRP4Ujl5ua66x44cKDt66s9ep3Xrr32WjNz5syw
fYqVt1arVs2eo2sCAAAAAAAAAAAASHyFc1Tt56m6T+WDqp/Uv04tqOpJlbM6
Y9u3b2/27dsX8vpvvvmmO37v3r2+16U5P/zwQ1O3bl17rta4bNky8/TTT5v6
9evbLNW5rrLUaPM+kzZt2rhrWL58ue3V6+wPq9dC7Xuq+9B6NVbnsUcqAAAA
AAAAAAAAkPgK56jKB5WVBjv0fq1atUyfPn1sxhmuFlPXVu7pXFs9fv3QdZ19
RXVoLq8ZM2a47zn5ZDRp/ubNmwfMMX/+/IAx/fv3t683bNjQHDt2rNhrqab2
lltusWPT09Pj0pMYAAAAAAAAAAAAwJkJ1tdX9Z16TYf3/zpq1KhhzjnnHPPg
gw+azMxMc+rUqWKvrczQyRu1n2q43NVZz9y5cwPWU7iGUz19tWepM2bNmjVn
/By8tm3bFpCh/vjjj0XGLFy40H1/yZIlIe/HqWe9//77fT0DAAAAAAAAAAAA
AKWrpPujHjx40PTu3dsd36tXL5s7BqPMsGfPnnZc7dq1fdVi/vnnn+aGG26w
51StWtV8//33RcZoz1FdT2O0X6p+jqY5c+a496d7DdaLNycnxx2j5xfq3pQ5
a9xtt90W9bUCAAAAAAAAAAAAiL6S5qiivVK7devmntOuXTv7WmHKUTt06GDH
KBsNd1297+0D/OijjwYd580w09LSot4rd9CgQe71tb9rMEuXLg3ohRxqDRkZ
GXZcnTp1yFEBAAAAAAAAAACAMiCSHFWUL3p736r/b+HzCgoKTEpKiu/r/v77
7wHXXLBgQdBx3vXOnDnT/836oJyzWbNm7vV37txZZIye2eDBg90xzz77bMh+
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
AAAAAAAAAAAAAAAAAAAAAJ/+D0HQPUk=
    "], {{0, 260.}, {937., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{937., 260.},
  PlotRange->{{0, 937.}, {0, 260.}}]], "Input",ExpressionUUID->"6b4aedb4-d4de-\
4ed5-9365-b475d958a0cf"],

Cell[BoxData[
 RowBox[{"t", " ", "has", " ", "form", " ", "of", " ", 
  RowBox[{"1", "/", "u"}]}]], "Input",
 CellChangeTimes->{{3.899971957020228*^9, 
  3.89997195702446*^9}},ExpressionUUID->"811ce1d7-b5c7-4584-87eb-\
b99f1ba29f2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "-", 
   FractionBox["1", "u"]}], "=", 
  FractionBox[
   RowBox[{"u", "-", "1"}], "u"]}]], "Input",
 CellChangeTimes->{{3.899971912121274*^9, 
  3.899971935826784*^9}},ExpressionUUID->"aac466e5-95e2-43af-97c5-\
a586cb54fdf6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"t", " ", "has", " ", "the", " ", "form", " ", "of"}], " ", "-", 
  RowBox[{"1", "/", "u"}]}]], "Input",
 CellChangeTimes->{{3.89997196137947*^9, 
  3.8999719689886417`*^9}},ExpressionUUID->"f7600275-f167-4a1d-80a2-\
a23d5bd41b1c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "+", 
   FractionBox["1", "u"]}], "=", 
  FractionBox[
   RowBox[{"1", "+", "u"}], "u"]}]], "Input",
 CellChangeTimes->{{3.8999719755348597`*^9, 
  3.8999719922276993`*^9}},ExpressionUUID->"1f6cf60e-f4a9-491c-80df-\
7a06912da726"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"BetaRegularized", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"\[Kappa]", " ", 
           SuperscriptBox[
            RowBox[{"Abs", "[", 
             FractionBox[
              RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], "\[Alpha]"]}], 
          
          RowBox[{"1", "+", " ", 
           RowBox[{"\[Kappa]", " ", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              FractionBox[
               RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
             "\[Alpha]"]}]}]], ",", 
         FractionBox["1", "\[Alpha]"], ",", 
         FractionBox["1", 
          RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "->", "2"}], ",", 
      RowBox[{"\[Mu]", "->", "1"}], ",", 
      RowBox[{"\[Sigma]", "->", "3"}], ",", 
      RowBox[{"\[Kappa]", "->", "0.5"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8999723388723497`*^9, 3.899972416634511*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"85d399de-06a2-4007-996e-c2c80cc9ffb4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$2553555#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.5000051603730037},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {0.5000051603730026, 0.966503909082404}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.899972402512951*^9, 3.8999724182298517`*^9}},
 CellLabel->
  "Out[212]=",ExpressionUUID->"56d8f709-aa53-42ba-b407-89b3ff366981"]
}, Open  ]],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"BetaRegularized", "[", 
          RowBox[{
           FractionBox["\[Nu]", 
            RowBox[{
             SuperscriptBox["x", "2"], "+", "\[Nu]"}]], ",", 
           FractionBox["\[Nu]", "2"], ",", 
           FractionBox["1", "2"]}], "]"}]}], 
        RowBox[{"x", "\[LessEqual]", "0"}]},
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"BetaRegularized", "[", 
            RowBox[{
             FractionBox[
              SuperscriptBox["x", "2"], 
              RowBox[{
               SuperscriptBox["x", "2"], "+", "\[Nu]"}]], ",", 
             FractionBox["1", "2"], ",", 
             FractionBox["\[Nu]", "2"]}], "]"}]}], ")"}]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Input",ExpressionUUID->"2f1d8c1c-e980-484a-bcd9-\
1b8a26f727f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"BetaRegularized", "[", 
             RowBox[{
              FractionBox["\[Nu]", 
               RowBox[{
                SuperscriptBox["x", "2"], "+", "\[Nu]"}]], ",", 
              FractionBox["\[Nu]", "2"], ",", 
              FractionBox["1", "2"]}], "]"}]}], 
           RowBox[{"x", "\[LessEqual]", "0"}]},
          {
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"BetaRegularized", "[", 
               RowBox[{
                FractionBox[
                 SuperscriptBox["x", "2"], 
                 RowBox[{
                  SuperscriptBox["x", "2"], "+", "\[Nu]"}]], ",", 
                FractionBox["1", "2"], ",", 
                FractionBox["\[Nu]", "2"]}], "]"}]}], ")"}]}], 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "->", "2"}], ",", 
      RowBox[{"\[Mu]", "->", "1"}], ",", 
      RowBox[{"\[Sigma]", "->", "3"}], ",", 
      RowBox[{"\[Nu]", "->", "0.5"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899972540722679*^9, 3.899972549245105*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"a449b372-2da6-413d-97c1-53bf90073f4c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$2553898#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {0., 0.8986613215523772}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.899972551068973*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"d86758f2-ce9b-4acc-a46e-a79996234605"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"BetaRegularized", "[", 
             RowBox[{
              FractionBox["\[Nu]", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Abs", "[", "x", "]"}], "\[Alpha]"], "+", "\[Nu]"}]],
               ",", 
              FractionBox["\[Nu]", "\[Alpha]"], ",", 
              FractionBox["1", "\[Alpha]"]}], "]"}]}], 
           RowBox[{"x", "\[LessEqual]", "0"}]},
          {
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"BetaRegularized", "[", 
               RowBox[{
                FractionBox[
                 SuperscriptBox["x", "\[Alpha]"], 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"Abs", "[", "x", "]"}], "\[Alpha]"], "+", 
                  "\[Nu]"}]], ",", 
                FractionBox["1", "\[Alpha]"], ",", 
                FractionBox["\[Nu]", "\[Alpha]"]}], "]"}]}], ")"}]}], 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "->", "1"}], ",", 
      RowBox[{"\[Mu]", "->", "1"}], ",", 
      RowBox[{"\[Sigma]", "->", "3"}], ",", 
      RowBox[{"\[Nu]", "->", "0.5"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "100"}], ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900094733600018*^9, 3.900094855879036*^9}, {
  3.90009489012656*^9, 3.9000948922677317`*^9}, {3.900094952546679*^9, 
  3.90009501188974*^9}},
 CellLabel->
  "In[325]:=",ExpressionUUID->"e73aef08-a521-4a92-8a80-f64db9b1a9b9"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$2868842#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-100, 100}, {0., 0.96473271849091}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.900094748120162*^9, 3.900094802466124*^9}, 
   3.9000948583915043`*^9, 3.900094893653208*^9, {3.900094964970788*^9, 
   3.9000950137501097`*^9}},
 CellLabel->
  "Out[325]=",ExpressionUUID->"7a3c239c-f809-4546-b21f-08af472476df"]
}, Open  ]],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Alpha]", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["1", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]], ")"}], 
    FractionBox["1", 
     RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}], 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]], ")"}], 
    FractionBox["1", "\[Alpha]"]]}], 
  RowBox[{"2", " ", "x", " ", 
   RowBox[{"Beta", "[", 
    RowBox[{
     FractionBox["1", "\[Alpha]"], ",", 
     FractionBox["1", 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}]]], "Input",ExpressionU\
UID->"8ef795b0-22f3-48e4-8d7e-61aae382f36c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"\[Alpha]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]], ")"}], 
       FractionBox["1", 
        RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["\[Kappa]", 
         RowBox[{"1", "+", 
          RowBox[{
           SuperscriptBox["x", "\[Alpha]"], " ", "\[Kappa]"}]}]], ")"}], 
       FractionBox["1", "\[Alpha]"]]}], 
     RowBox[{"2", "  ", 
      RowBox[{"Beta", "[", 
       RowBox[{
        FractionBox["1", "\[Alpha]"], ",", 
        FractionBox["1", 
         RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}]], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]", "->", "2"}], ",", 
      RowBox[{"\[Mu]", "->", "1"}], ",", 
      RowBox[{"\[Sigma]", "->", "3"}], ",", 
      RowBox[{"\[Kappa]", "->", "0.5"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.899972624197744*^9, 3.8999726546539087`*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"aa121e88-b9fa-4435-8241-a4f7bbb31080"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
khn2SoifNIL/m+9B/z/f8z/KGCkz
       "]]},
     Annotation[#, "Charting`Private`Tag$2555424#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {0.0009707330018058186, 0.353552762303409}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.899972644829131*^9, 3.899972655537365*^9}},
 CellLabel->
  "Out[215]=",ExpressionUUID->"2af931a9-4e9c-4216-b7e6-0374c07f18c5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Work on qstatistics coupled statistics parameter comparison", \
"Subsection",
 CellChangeTimes->{{3.9000658565636053`*^9, 
  3.900065870039054*^9}},ExpressionUUID->"36a851ae-2a06-40ec-b4af-\
f1203509d13e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DirValues", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"FullSimplify", "@", 
      RowBox[{"(", 
       RowBox[{"x", " ", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"PDF", "[", 
           RowBox[{
            RowBox[{"CoupledExponentialDistribution", "[", 
             RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
            "x"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "1"}], "}"}]}], "]"}]}], ")"}]}], "/", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"CoupledExponentialDistribution", "[", 
        RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", "x"}], 
      "]"}]}], "/.", 
    RowBox[{"x", "->", 
     RowBox[{"{", 
      RowBox[{"\[Sigma]", ",", 
       FractionBox["\[Sigma]", 
        RowBox[{"1", "+", "\[Kappa]"}]]}], "}"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.900066135633779*^9, 3.900066142918406*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"3557b282-db05-4082-87f1-3dca9736fefd"],

Cell[CellGroupData[{

Cell[BoxData["%231"], "Input",
 NumberMarks->False,
 CellLabel->
  "In[232]:=",ExpressionUUID->"fb9894ff-9498-483c-9334-8a9810342d80"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Sigma]", " ", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {"\[Piecewise]", GridBox[{
             {
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", 
                  RowBox[{"\[ExponentialE]", " ", 
                   SuperscriptBox["\[Sigma]", "2"]}]]}], ",", 
                RowBox[{"-", 
                 FractionBox[
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"-", 
                    FractionBox["1", 
                    RowBox[{"1", "+", "\[Kappa]"}]]}]], 
                  SuperscriptBox["\[Sigma]", "2"]]}]}], "}"}], 
              RowBox[{
               RowBox[{"\[Kappa]", "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\[Sigma]", ",", 
                  FractionBox["\[Sigma]", 
                   RowBox[{"1", "+", "\[Kappa]"}]]}], "}"}], ">", "0"}], "&&", 
               RowBox[{"\[Sigma]", "\[NotEqual]", "0"}]}]},
             {
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Kappa]"}], ")"}], 
                   RowBox[{"1", "-", 
                    FractionBox["1", "\[Kappa]"]}]], 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"\[Sigma]", "+", 
                    RowBox[{"\[Kappa]", " ", "\[Sigma]"}]}], ")"}], "2"]]}], 
                ",", 
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox["\[Kappa]", 
                    RowBox[{"1", "+", "\[Kappa]"}]]}], ")"}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "\[Kappa]"}]]}], 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"\[Sigma]", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", "\[Sigma]"}], 
                    RowBox[{"1", "+", "\[Kappa]"}]]}], ")"}], "2"]]}]}], 
               "}"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Kappa]", "\[GreaterEqual]", "0"}], "||", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Sigma]", "+", 
                    RowBox[{"\[Kappa]", " ", "\[Sigma]"}]}], ")"}]}], ",", 
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Sigma]", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", "\[Sigma]"}], 
                    RowBox[{"1", "+", "\[Kappa]"}]]}], ")"}]}]}], "}"}], "<", 
                  "0"}]}], ")"}], "&&", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\[Sigma]", ",", 
                  FractionBox["\[Sigma]", 
                   RowBox[{"1", "+", "\[Kappa]"}]]}], "}"}], ">", "0"}], "&&", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Sigma]", " ", 
                   RowBox[{"(", 
                    RowBox[{"\[Sigma]", "+", 
                    RowBox[{"\[Kappa]", " ", "\[Sigma]"}]}], ")"}]}], ",", 
                  RowBox[{"\[Sigma]", " ", 
                   RowBox[{"(", 
                    RowBox[{"\[Sigma]", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", "\[Sigma]"}], 
                    RowBox[{"1", "+", "\[Kappa]"}]]}], ")"}]}]}], "}"}], ">", 
                "0"}]}]},
             {"0", 
              TagBox["True",
               "PiecewiseDefault",
               AutoDelete->True]}
            },
            AllowedDimensions->{2, Automatic},
            Editable->True,
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.84]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}},
            Selectable->True]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.35]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        "Piecewise",
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True,
        Selectable->False,
        StripWrapperBoxes->True], ")"}]}], ")"}], "/", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"\[Sigma]", " ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "+", "\[Kappa]"}], ",", 
                   RowBox[{"1", "+", 
                    FractionBox["\[Kappa]", 
                    RowBox[{"1", "+", "\[Kappa]"}]]}]}], "}"}], ">", "0"}], 
                ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"\[Kappa]", "\[NotEqual]", "0"}], ",", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", 
                    FractionBox["\[Sigma]", 
                    RowBox[{"1", "+", "\[Kappa]"}]]}], "}"}]}], "\[Sigma]"]}],
                     ")"}], 
                   FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"]], ",", 
                  RowBox[{"Exp", "[", 
                   FractionBox[
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", 
                    FractionBox["\[Sigma]", 
                    RowBox[{"1", "+", "\[Kappa]"}]]}], "}"}], "\[Sigma]"], 
                   "]"}]}], "]"}], ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"], ">", "0"}],
                   ",", "0", ",", "\[Infinity]"}], "]"}]}], "]"}]}], ")"}]}], 
           
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Sigma]", ",", 
               FractionBox["\[Sigma]", 
                RowBox[{"1", "+", "\[Kappa]"}]]}], "}"}], ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Sigma]", "-", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"\[Kappa]", "\[GreaterEqual]", "0"}], ",", 
                  "\[Infinity]", ",", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox["\[Sigma]", "\[Kappa]"]}], "+", "0"}]}], 
                 "]"}]}], ",", 
               RowBox[{
                FractionBox["\[Sigma]", 
                 RowBox[{"1", "+", "\[Kappa]"}]], "-", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"\[Kappa]", "\[GreaterEqual]", "0"}], ",", 
                  "\[Infinity]", ",", 
                  RowBox[{
                   RowBox[{"-", 
                    FractionBox["\[Sigma]", "\[Kappa]"]}], "+", "0"}]}], 
                 "]"}]}]}], "}"}], "<", "0"}]}]},
          {"0", 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}},
         Selectable->True]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False,
     StripWrapperBoxes->True]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Sigma]", " ", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {"\[Piecewise]", GridBox[{
             {
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox["1", 
                  RowBox[{"\[ExponentialE]", " ", 
                   SuperscriptBox["\[Sigma]", "2"]}]]}], ",", 
                RowBox[{"-", 
                 FractionBox[
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"-", 
                    FractionBox["1", 
                    RowBox[{"1", "+", "\[Kappa]"}]]}]], 
                  SuperscriptBox["\[Sigma]", "2"]]}]}], "}"}], 
              RowBox[{
               RowBox[{"\[Kappa]", "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\[Sigma]", ",", 
                  FractionBox["\[Sigma]", 
                   RowBox[{"1", "+", "\[Kappa]"}]]}], "}"}], ">", "0"}], "&&", 
               RowBox[{"\[Sigma]", "\[NotEqual]", "0"}]}]},
             {
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Kappa]"}], ")"}], 
                   RowBox[{"1", "-", 
                    FractionBox["1", "\[Kappa]"]}]], 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"\[Sigma]", "+", 
                    RowBox[{"\[Kappa]", " ", "\[Sigma]"}]}], ")"}], "2"]]}], 
                ",", 
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox["\[Kappa]", 
                    RowBox[{"1", "+", "\[Kappa]"}]]}], ")"}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "\[Kappa]"}]]}], 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"\[Sigma]", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", "\[Sigma]"}], 
                    RowBox[{"1", "+", "\[Kappa]"}]]}], ")"}], "2"]]}]}], 
               "}"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Kappa]", "\[GreaterEqual]", "0"}], "||", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Sigma]", "+", 
                    RowBox[{"\[Kappa]", " ", "\[Sigma]"}]}], ")"}]}], ",", 
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Sigma]", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", "\[Sigma]"}], 
                    RowBox[{"1", "+", "\[Kappa]"}]]}], ")"}]}]}], "}"}], "<", 
                  "0"}]}], ")"}], "&&", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\[Sigma]", ",", 
                  FractionBox["\[Sigma]", 
                   RowBox[{"1", "+", "\[Kappa]"}]]}], "}"}], ">", "0"}], "&&", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Sigma]", " ", 
                   RowBox[{"(", 
                    RowBox[{"\[Sigma]", "+", 
                    RowBox[{"\[Kappa]", " ", "\[Sigma]"}]}], ")"}]}], ",", 
                  RowBox[{"\[Sigma]", " ", 
                   RowBox[{"(", 
                    RowBox[{"\[Sigma]", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", "\[Sigma]"}], 
                    RowBox[{"1", "+", "\[Kappa]"}]]}], ")"}]}]}], "}"}], ">", 
                "0"}]}]},
             {"0", 
              TagBox["True",
               "PiecewiseDefault",
               AutoDelete->True]}
            },
            AllowedDimensions->{2, Automatic},
            Editable->True,
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.84]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}},
            Selectable->True]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.35]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        "Piecewise",
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True,
        Selectable->False,
        StripWrapperBoxes->True], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {"\[Piecewise]", GridBox[{
             {
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"\[Sigma]", " ", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "+", "\[Kappa]"}], ",", 
                    RowBox[{"1", "+", 
                    FractionBox["\[Kappa]", 
                    RowBox[{"1", "+", "\[Kappa]"}]]}]}], "}"}], ">", "0"}], 
                   ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"\[Kappa]", "\[NotEqual]", "0"}], ",", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", 
                    FractionBox["\[Sigma]", 
                    RowBox[{"1", "+", "\[Kappa]"}]]}], "}"}]}], "\[Sigma]"]}],
                     ")"}], 
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"]], ",", 
                    RowBox[{"Exp", "[", 
                    FractionBox[
                    RowBox[{"{", 
                    RowBox[{"\[Sigma]", ",", 
                    FractionBox["\[Sigma]", 
                    RowBox[{"1", "+", "\[Kappa]"}]]}], "}"}], "\[Sigma]"], 
                    "]"}]}], "]"}], ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{"1", " ", "\[Kappa]"}]}], "\[Kappa]"], ">", "0"}],
                     ",", "0", ",", "\[Infinity]"}], "]"}]}], "]"}]}], 
                ")"}]}], 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\[Sigma]", ",", 
                  FractionBox["\[Sigma]", 
                   RowBox[{"1", "+", "\[Kappa]"}]]}], "}"}], ">", "0"}], "&&", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Sigma]", "-", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"\[Kappa]", "\[GreaterEqual]", "0"}], ",", 
                    "\[Infinity]", ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["\[Sigma]", "\[Kappa]"]}], "+", "0"}]}], 
                    "]"}]}], ",", 
                  RowBox[{
                   FractionBox["\[Sigma]", 
                    RowBox[{"1", "+", "\[Kappa]"}]], "-", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"\[Kappa]", "\[GreaterEqual]", "0"}], ",", 
                    "\[Infinity]", ",", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["\[Sigma]", "\[Kappa]"]}], "+", "0"}]}], 
                    "]"}]}]}], "}"}], "<", "0"}]}]},
             {"0", 
              TagBox["True",
               "PiecewiseDefault",
               AutoDelete->True]}
            },
            AllowedDimensions->{2, Automatic},
            Editable->True,
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.84]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}},
            Selectable->True]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.35]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        "Piecewise",
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True,
        Selectable->False,
        StripWrapperBoxes->True], ")"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.900066149005657*^9},
 CellLabel->
  "Out[232]=",ExpressionUUID->"8f411182-86ea-45e2-a18f-4e7581737ea8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"%232", "//.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Kappa]", "->", "0.5"}], ",", 
     RowBox[{"\[Sigma]", "->", "2"}]}], "}"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.900066079695919*^9, 3.9000661151224937`*^9}, {
   3.900066167967263*^9, 3.900066170285406*^9}, 3.900066243384542*^9},
 CellLabel->
  "In[234]:=",ExpressionUUID->"7db818b9-0b23-4bb7-afda-86f539a16a5b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.07407407407407407`"}], ",", 
               RowBox[{"-", "0.11865234375000003`"}]}], "}"}], 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2", ",", "1.3333333333333333`"}], "}"}], ">", "0"}], 
              "&&", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"6.`", ",", "5.333333333333333`"}], "}"}], ">", 
               "0"}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}},
           Selectable->True]}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False,
       StripWrapperBoxes->True], ")"}]}], 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"0.14814814814814814`", ",", "0.21093750000000006`"}], 
            "}"}], 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "1.3333333333333333`"}], "}"}], ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "\[Infinity]"}], ",", 
               RowBox[{"-", "\[Infinity]"}]}], "}"}], "<", "0"}], "&&", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1.5`", ",", "1.3333333333333333`"}], "}"}], ">", 
             "0"}]}]},
          {"ComplexInfinity", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "1.3333333333333333`"}], "}"}], ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "\[Infinity]"}], ",", 
               RowBox[{"-", "\[Infinity]"}]}], "}"}], "<", "0"}]}]},
          {"0", 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}},
         Selectable->True]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False,
     StripWrapperBoxes->True]], ",", 
   FractionBox[
    RowBox[{"1.3333333333333333`", " ", 
     RowBox[{"(", 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.07407407407407407`"}], ",", 
               RowBox[{"-", "0.11865234375000003`"}]}], "}"}], 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"2", ",", "1.3333333333333333`"}], "}"}], ">", "0"}], 
              "&&", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"6.`", ",", "5.333333333333333`"}], "}"}], ">", 
               "0"}]}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}},
           Selectable->True]}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False,
       StripWrapperBoxes->True], ")"}]}], 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{"{", 
            RowBox[{"0.14814814814814814`", ",", "0.21093750000000006`"}], 
            "}"}], 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "1.3333333333333333`"}], "}"}], ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "\[Infinity]"}], ",", 
               RowBox[{"-", "\[Infinity]"}]}], "}"}], "<", "0"}], "&&", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1.5`", ",", "1.3333333333333333`"}], "}"}], ">", 
             "0"}]}]},
          {"ComplexInfinity", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"2", ",", "1.3333333333333333`"}], "}"}], ">", "0"}], "&&", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "\[Infinity]"}], ",", 
               RowBox[{"-", "\[Infinity]"}]}], "}"}], "<", "0"}]}]},
          {"0", 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}},
         Selectable->True]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False,
     StripWrapperBoxes->True]]}], "}"}]], "Output",
 CellChangeTimes->{{3.9000661011501627`*^9, 3.900066116357265*^9}, 
   3.900066171743312*^9, 3.90006624496754*^9},
 CellLabel->
  "Out[234]=",ExpressionUUID->"cfe68f95-c9b9-4cc0-97b0-4ca68d7a4e83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"CoupledExponentialDistribution", "[", 
            RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", 
           "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1"}], "}"}]}], "]"}]}], ")"}], "/", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"CoupledExponentialDistribution", "[", 
        RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", "x"}], 
      "]"}]}], ",", 
    RowBox[{
     RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
     RowBox[{"0", "<", "x", "<", "\[Infinity]"}]}]}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Kappa]", "->", "0.5"}], ",", 
    RowBox[{"\[Sigma]", "->", "2"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.900066332868639*^9, 3.900066342489259*^9}, {
  3.900066552049667*^9, 3.900066565986402*^9}, {3.9000666183537188`*^9, 
  3.9000666312013273`*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"416e4f61-f21b-4d34-ad71-15160b5b0556"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"1.5`", " ", "x"}], 
   RowBox[{"2", "+", 
    RowBox[{"0.5`", " ", "x"}]}]]}]], "Output",
 CellChangeTimes->{3.900066344022423*^9, 3.9000665715028143`*^9, 
  3.9000666326994867`*^9},
 CellLabel->
  "Out[241]=",ExpressionUUID->"e1b08aa2-b8cc-482a-b938-fa2e6ca9c37b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"%241", "/.", 
   RowBox[{"x", "->", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", 
        FractionBox["\[Sigma]", 
         RowBox[{"1", "+", "\[Kappa]"}]]}], "}"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Kappa]", "->", "0.5"}], ",", 
        RowBox[{"\[Sigma]", "->", "2"}]}], "}"}]}], ")"}]}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.900066354488194*^9, 3.900066400114193*^9}, {
  3.900066588554659*^9, 3.900066589012207*^9}, {3.9000666394815607`*^9, 
  3.900066640961451*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"ba3006c0-45a5-42e1-a3ab-09de5145a215"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.`"}], ",", 
   RowBox[{"-", "0.75`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.900066393752433*^9, 3.90006640088656*^9}, 
   3.900066590379629*^9, {3.9000666365855217`*^9, 3.900066642060976*^9}},
 CellLabel->
  "Out[243]=",ExpressionUUID->"30f92225-be6a-4522-b3d5-7dd9dc90d0d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"CoupledNormalDistribution", "[", 
          RowBox[{"0", ",", "\[Sigma]", ",", "\[Kappa]"}], "]"}], ",", "x"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
        RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
        RowBox[{"x", "\[Element]", "Reals"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1"}], "}"}]}], "]"}], "]"}], "/.", 
  RowBox[{"x", "->", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", 
      SqrtBox[
       RowBox[{"scaleShapeToBeta", "[", 
        RowBox[{"\[Sigma]", ",", "\[Kappa]"}], "]"}]]}], ",", "\[Sigma]", ",", 
     RowBox[{"\[Sigma]", "/", 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"2", "\[Kappa]"}]}]]}]}], "}"}]}]}]], "Input",
 CellLabel->
  "In[238]:=",ExpressionUUID->"18fbf7cb-fcc5-4b10-9f94-5dc47ac616f6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox[
       FractionBox["2", "\[Pi]"]], " ", "\[Kappa]", " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}]}], 
     RowBox[{
      SqrtBox[
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"2", " ", "\[Kappa]"}], 
            RowBox[{"1", "+", "\[Kappa]"}]]}], ")"}], 
         RowBox[{"1", "+", 
          FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"]], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"1", "+", "\[Kappa]"}], 
        SuperscriptBox["\[Sigma]", "2"]]], " ", "\[Sigma]", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Sigma]", "2"], "+", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}], ")"}], " ", 
      RowBox[{"Gamma", "[", 
       FractionBox["1", 
        RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "\[Kappa]", " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}]}], 
     RowBox[{
      SqrtBox["\[Pi]"], " ", 
      SqrtBox[
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Kappa]"}], ")"}], 
         RowBox[{"1", "+", 
          FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"]], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Sigma]", "2"], "+", 
        RowBox[{"\[Kappa]", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]}], ")"}], " ", 
      RowBox[{"Gamma", "[", 
       FractionBox["1", 
        RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "\[Kappa]", " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          FractionBox["1", "\[Kappa]"]}], ")"}]}], "]"}]}], 
     RowBox[{
      SqrtBox["\[Pi]"], " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "\[Kappa]"}]}]], " ", 
      SqrtBox[
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           FractionBox["\[Kappa]", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", "\[Kappa]"}]}]]}], ")"}], 
         RowBox[{"1", "+", 
          FractionBox["1", "\[Kappa]"]}]], "\[Kappa]"]], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Sigma]", "2"], "+", 
        FractionBox[
         RowBox[{"\[Kappa]", " ", 
          SuperscriptBox["\[Sigma]", "2"]}], 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Kappa]"}]}]]}], ")"}], " ", 
      RowBox[{"Gamma", "[", 
       FractionBox["1", 
        RowBox[{"2", " ", "\[Kappa]"}]], "]"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.90006651010179*^9},
 CellLabel->
  "Out[238]=",ExpressionUUID->"928ac26e-0b2e-43f7-850f-42a69197ed7e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examine Survival Function of Coupled Distribution", "Subsection",
 CellChangeTimes->{{3.900093482903575*^9, 
  3.9000934950100594`*^9}},ExpressionUUID->"bd2d772f-2c49-4c0c-ac10-\
0d4c650c123f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SFCoupledDistribution", "[", 
  RowBox[{
  "\[Sigma]", ",", "0", ",", "\[Sigma]", ",", "\[Kappa]", ",", "\[Alpha]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.900093501486569*^9, 3.9000935191704903`*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"48e4d3b9-3800-40e8-8219-10fe60e6c5e7"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    RowBox[{"BetaRegularized", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"\[Kappa]", " ", 
        SuperscriptBox["\[Sigma]", "2"]}], 
       RowBox[{"1", "+", "\[Kappa]"}]], ",", 
      FractionBox["1", "\[Alpha]"], ",", 
      FractionBox["1", 
       RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.900093520068534*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"a9e643cb-1a7e-41cd-bf20-849bca40c392"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"x", " ", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"SFCoupledDistribution", "[", 
       RowBox[{
       "x", ",", "\[Mu]", ",", "\[Sigma]", ",", "\[Kappa]", ",", "\[Alpha]"}],
        "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1"}], "}"}]}], "]"}]}], 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"SFCoupledDistribution", "[", 
      RowBox[{
      "x", ",", "\[Mu]", ",", "\[Sigma]", ",", "\[Kappa]", ",", "\[Alpha]"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1"}], "}"}]}], "]"}]], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.900093591202655*^9, 
  3.900093612755889*^9}},ExpressionUUID->"13ea5f1a-d04d-41e8-836b-\
610f66f948af"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{3.900093594987196*^9},
 CellLabel->
  "Out[284]=",ExpressionUUID->"efcbefd9-5860-4bd1-9369-9dbf74d9d947"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"BetaRegularized", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"\[Kappa]", " ", 
           SuperscriptBox["x", "\[Alpha]"]}], 
          RowBox[{"1", "+", 
           RowBox[{"\[Kappa]", " ", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              FractionBox[
               RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
             "\[Alpha]"]}]}]], ",", 
         FractionBox["1", "\[Alpha]"], ",", 
         FractionBox["1", 
          RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Kappa]", "->", "1"}], ",", 
      RowBox[{"\[Mu]", "->", "0"}], ",", 
      RowBox[{"\[Sigma]", "->", "1"}]}], "}"}]}], ",", 
   RowBox[{"x", "->", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900094461822782*^9, 3.900094471231147*^9}, {
  3.900094523791065*^9, 3.900094549378216*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"79687f7c-06ee-41e8-bf76-9c5d422d0a4a"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.900094518342407*^9, 3.900094672844722*^9},
 CellLabel->
  "Out[312]=",ExpressionUUID->"6c253bde-9d9c-4adb-bf19-beecc30499b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Abs", "'"}], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.900102927542533*^9, 3.900102933227709*^9}},
 CellLabel->
  "In[359]:=",ExpressionUUID->"90314163-ca50-42e3-af7b-2d1212385208"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["Abs", "\[Prime]",
   MultilineFunction->None], "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.90010293519403*^9},
 CellLabel->
  "Out[359]=",ExpressionUUID->"fd87b2e0-555e-4a21-994e-c27153628d67"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\[Alpha]", "]"}]], "Input",
 CellChangeTimes->{{3.900103536779759*^9, 3.900103539733486*^9}},
 CellLabel->
  "In[366]:=",ExpressionUUID->"c9e7dfbb-d8ba-49c8-87c7-a6f7b782357a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"BetaRegularized", "[", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox["1", "\[Alpha]"], ",", 
     FractionBox["1", 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900103983787869*^9, 3.900104029826096*^9}, {
  3.900104065276816*^9, 3.900104083787221*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"a80520cb-8841-4307-b59c-accfabe577bb"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"6.78594619862973`*^7\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 374, 47, 
   31774377331651416585, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.900104031703743*^9, {3.900104066603648*^9, 3.900104085400262*^9}},
 CellLabel->
  "During evaluation of \
In[374]:=",ExpressionUUID->"3ba60349-d8ce-4298-9fe6-bbb0e6f83253"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJyEfQl41EXydkQWZXU9WO8TMaCui64HyHqkUQEN3seqK7oqKqtgYI3+vRXN
goAowqAoBhUjIhJxYQyDELkCBkMQwySEJJOQzEzu+w4JOb7J9LxVUzX6fPv4
7PCm6tfdVd1dXV19nTd5xt1PDoiKivKcExXV/+uIjnV4Jrhj+n+jY+++Ljo2
amhsbJoB9rii80fHug3TY4dlxHkIu+pc60fG+ggXjI4teMFTTrh3pqd3a1wN
YUepa9HAqEZOb3BU9EWxzZzeyFjXbY5Wwjff7bg53tPO6b/gKVgS3Un4mcTo
uNS4w5zf1ri+YlcP4ekB+uG+Ps4/+Av5nKFfN2GPK67/P0X3EbbkcsIFwT/U
EO7t6/9fA+FFwd9mwuf3/5B8TrM+mF474ZuC/+gknB9M/zDhacEC9hCOsv8b
K8ubpn7dhKV8aUq+NCVfmpIvTcmXpuRLU/KlKfnSlHxpSr40JV+aki9NyZFJ
8gFDPkn3EYZ8wJAPGPIBQz5gyAcM+YAhHzDkA4Z8wJBPllfXm1vJ6VF/9xGW
9edW9edW9edW9edW9edW9edW9edW9edW9edW9edW7SxXlTuX5JN0H2HIBwz5
gCEfMOQDhnzAkA8Y8gFDPmDIBwz5ZHnRbzyqHjwkn6T7CEO+AsFXQxjyAUM+
YMgHDPmAIR8w5AOGfMCQT5YXdqBYtatikk/SfYQhHzDkA4Z8wJAPGPIBQz5g
yAcM+YAhHzDkk+WFXfOpfuIj+STdRxjyLRL1WkMY8i0S3zUThnzAkA8Y8gFD
PmDIBwz5ZHlhp0tVvy8l+STdRxjyAUM+YMgHDPmAIR8w5AOGfMCQDxjyAUM+
WV6MO+XKjpWTfJLuIwz5gCHfetFuGwhDvvVCL62EIR8w5AOGfMCQDxjyyfJi
HK1SdrmK5JN0H2GXKEcVyQcM+YAhHzDkA4Z8wJAPGPIBQz5gyCfLC7+gRo0z
NSSfpPsIu4Rea0g+YMgHDPmAIR8w5MsXeuokDPmAIR8w5JPlhZ9Tp8bNOpJP
0n2EIR9wgci3juQDhnzAkA8Y8gFDPmDIBwz5gCGfkifG/rmR5JXYTRjySrqP
MOQFLhB6bSR5gSEvMOQFhrzAkBcY8gJDXmDIK8sLvztJ+Z1Jyo9JCn1fQjha
2K0kc7PoB0nmGaFX0JsIW320KP42wlY/HYQXBn+7CA8L5t+tyttLGPJZuVLV
PChdzUOyCFu5ckgfwKBbOfKJDgy6laNI8XvVvMuv+MvUPKyCsJW7mrCVu1bJ
Ux/43bAmjupTzxeTVH07zXRP9NMeqm/wuyPaA/TX1+fqmUntoX9+He5XJSk/
ONVEZ8SdP5jaC9L3ET/aE/hvHhIVmDKXEj/6j25v4H9mkiMwha4ifjlf4PYI
/oUroheVUnsMzLfFfILbK/jtfL2J+OV8g9szlSc4n28hfjkf4fYOfjvfbyN+
OV/h/kDlD8YfDhG/nM9wfwH/sGB8oov45XyH+xP4U4Lxi27il/Mh7m9UX8H4
Ri/xy/kS90fZ/9Ii+iP+jvpC/0R9AEPfwNCn5G8jDH0AQ15gyAOM8qN8KD/o
6A/afsi/5xIdGPYF7V3mV0J0tG/QgUGHfoCRr7Zf6MfSnvM8FfYM+Uv7lhZh
72S/1nLmKvuXFmEP5fwxU9nHtAh7KedjmRH2U85nMiPsqZwPZEbYV+lPZ0bY
W+mPZkbYX+nPZUbYY+kPZZJ9Bl36D5nKX+gNs+cWa35dLzLdEsJyfHaq8dmp
xmenGp+danx2qvHZqcZnpxqfnWp8dqrxWZcnTZUnTZUnTZUnTZUnTZUnTZUn
TZUnTZUnTf09PaLdy/EqU41HmWq84XgY+qesL7eqL3dEv5Lt26P04lV68Su9
lCm9VCi9VCu91Cr561V8qJ7stu1/BYRtfzqo/AyHsvMO5VckKzvqUHbMoeyQ
Q9kVR8B/CbcbDhMr9IL8/YTjhF4cpk/oxRGSq5rw+UIvjpCc9ap8jYSt3psI
W/maCdt6aFHytBG29dJO2NZrB2FbT4dUfp2EU4L5dan8DhOeEPxHj8qvV+mr
L6K+rBwu5bdtU37ZTuUXZRC29fQLYVtP+1R7yCZss9tP2NbTAcJof8C2ngqp
vQGDrtunLS/PY6wevUpe9lOtHv1KvjLCVo/sp9p6qyBs661S5cfzJFtv1So/
9mNtvdWp/OqV/vrnkYXtfdTf4G87I+pT/j0prF48E4ZQ/4N/n0nfL4qOCrjQ
+USX9izQH4P+uJfo0r4F8g/632VEjw7ZT+ovwfW4aqLL8SHQH4Lrc/VEl+OF
I+RPN6nvuT9a/5nX5+R44gj5y+0qfe6f1j9m/1uON4H+FfSH2d+W44/D5AXn
E7y+J8ejgP6C84c+pd/e36k/ntdJO/t78/h09T3P86TdjZz3Rws7nKTGI6fq
j86I/iftdpKR8WpnRP+U/mCSilcnqfEvScV7k9R4mKTipUlqfExS8cYkNV4m
qXhdkho/k1S8K0mNp0nkv0n91gf6W+Fox82oDz1f7x9foobGUr3p+Xm/vY7O
H031oufjDjO8f72b9Kjn37a/rSE96fm27W/tpAc9vw70t5n9jbOW6HI+HWiv
gf42zsHr5XL+HJAv0N+e9vD6uZwvB8oX6G/vRf/e/NgRnH86aXzU82FHcP6e
6+L1djn/dQTn64f7eP1dznetPTk39vfmt+zfYDwAhv0Hhn3G+CpxaoQ/9Nv+
kY5nJdP3GJ/lvDBZxbGSI/qxjGMlkz+lMfhjQ/1O5u+PwOCHvwU6/C2NZT+v
Jjr8L41lv65X8jVGYNnvm5R+myOwtAMtRIe/prG0C+1Eh/+msbQTh4gOf05j
8MO/Ax3+ncbgh78HOvw9jcEv22cyYUlPVf6fkzDoVu87Vf/IIH5g0OEfAtt2
to/4gWV/ySYs/UUnYdDhP8rycdxR+n9OwrJ/+QhLf9AZgbU9kP6hMwJreyH9
RSdhWV6Oa0r/0UlYlreGsPQnnYRleeuVvWlQ8THeZyLXV9OVf5ym9JGp1ivT
lb+cFqEPGf/oUzg1wj5qe6jtnbZn2l5pe6TtjbYn2l5oe6D7u+7Pur8CS30n
k3zoX8ByfuWk/gEs509ONf9xqvmOU81PnGo+4qT2gfqT7TmNMOpbrt+mq/ac
qdY/06n9AsMfA0b5ZP7V5LdK/81NGO0B+YNf+nNuwuBHeYDRPoFleXJJXoy3
mg7/Exj9AfxIX+73SVf7fdLVfp90td8nXe33SVfxHMS3ypXf4FF+glv5CakR
8VmJUyPisxKnqvhsasR+B+gHdLnenqXis6kR8Vj445gf4jvMB2U9tqh6bCOM
+R0w5nOyHXWr+F6vyi+fxqPokNzQ782/2U7qFL1JtYsWxd9GGOUFRnmBUV5g
lBcY5cZ8DvN3yIHyA6P8wCi/pDcRRvklfxthlB8Y5QdG+YFRfolzaf6I8gOj
/MAoP/Azot0UUfmBUX7J30YY5QdG+YFRfmCUX+Jcmt9K/XuV/r1K/16lf6/S
v1fp36v071X69yr9e5X+vUr/Xio/5t8oPzDKD4zyA6P8kt5EGOWX/G2EUX5g
lB8Y5QdG+WV5t4X4ylW/L1ftqUy1pzLVnspUeypT7alMtacySh/jFdIHRvrA
SF/SmwgjfcnfRhj6Aoa+gKEvOf72qvG0hMZLlBcY+QEjP2DkB4z85HjeGzG+
I76C/IGRPzD0BQx9SXoTYehL8rcRRv6ukB+I/IDl+nS9Wp+uV+vT9Wp9ul6t
T9er9Wme59p8eN5t02Vs8+V5t82nTPHzPNzmW6n4qwjbclQrfj0vhzyHyT+F
PwuM+Saw/b6PsIw/ZNO4BP/VFfJbEF8Etny8rm5/fYThvwJr/9Xm16D8pEY1
Xu5U46We3/J8EfYEWK/H6fmcXp/T8ze0f2C9XofyW4w4cQLVDzDo9u+Jah6f
oNZ5mN/yreW4XJBvpZqHJKh5foKaxyeoeUoC1TMw/CSZfwFhOY9JCOVfSHhD
MIGDKj+v4i9R8voIWzlLVf7lSr4ywnLeivQrVfrVhOW8KkHNq5B+nUq/gbCc
l6N8jSq/RpV+k0qvSZW3WeXfovJrVeVvUfm1qvTbCNt22q7K06by61DpM7b9
4JAqzyGVX6dKn7G1P4dVebpUfodV+t2E84Lp96jydKv8mG7tUi9h2/76lLx9
qv6wjpxC2PJtJGz70XbCNt3Nqj/vIGz70U/KHuwmbPvRLpX/HsK2H+1V+e1T
/LxOb9sBr0vYfpSj8s9V8u0nbOvxgEo/T6VfQNjWG+8DsPXgUekXqfSLCdt6
PqjKV6LyK1Hpe1V6XlVen8rfr/IrVeX3q/G0VOVfSnRgmT/vY4C/Kstbpsbv
clW+CuVPVKjyMbbtvlLJw/6CptvyVSl/pEqVj7HtpzVKHvY3NN2Wr0aVh/dp
2H5bp8rP/oqm2/Iwhj8j23+D0l8DpQc6xmfLl6Dal16H1/tdYB/yCdt+z+NX
nPAjElR8MkHFJ2Hf2N7L+CTsHdtnGZ9MUPHJBBWfTCD/7bfl5XVM6VfAXvG+
AvuzU33vVvr/RaWXq9LLJizXp2Hv2L7I9WeHWq92qPVmh/IbHGq92UF+hGzv
3P/1+rPubzI+nqz8xaSI/q7Xq3+7/3H/lv6lI2I9+7f7V5WyT3p/Cvdfuf7t
UH6Ng/xpYL1/RbcfaffSiW7JOYTl+iTao59wn5A7Qa0fIj3tP2l/iP0VuX6H
/qX9D+1P9EbIJ/1uh/KbHcpvdii/2KH2WzjU/gnUn1fVB8c30J7QL/X4IuMd
22g8AL9uv3K9yqHWoxy0voTvtT31uMLnXy4aX4Ex/gJDPmCbjE/R/YQxvsr0
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
hP7k+kAVzT+gT9vvS0ifwPI+jWLSJ+jQJzD0KfNrIwz9Acv7NYpJX0gP+gKW
928Uk75Al/crlJC+wC/vWyghfUmMdRK+jwXzLejLpusjfQFDX3J/cS3RoS9g
5If4OtIHRnryva1aml8jPbm+1qTmf41Ehz0HxnxN+rfNNB/HepHcP1JC4zn6
L+br6L/AoGM8jg6VS47v0HcNzfdlPBvrAQ3UnoDleNOgxpMGNV7o9Sj2F/X9
IDp+rucz9numw58E1vu74O+DDn8SWJ8f1v6n3u8FfxHfY34DLOc/2TSfhD9q
68FH80kZT8T5txLCcr9c6u/QeX+Svu9Dz1c5fvsfT99N2F9J9/mG3q/F+SOs
p8Ub+ff5AXzEm9F0nwfu612JeW8M0pPpYJ/mcrUvcokpdMW6XX1bKT15r0B/
esPnRdO5XdzXnUJ0+MeyvHg/ay3lZ/vJOsI2nzVqH+g3AbzhvWg6B4z7jHdQ
flbdP1F+rrhYZxzty7z7OmtPdhF/VNSGnpm0DwjlzyJ6ocuT66L5AOh7iC7v
QeiXL2rhCtrHCf27w/Lr/18O8QffG6Zzm7iPfD/xB+9bp3Ocd19n5aN3VGJc
cY6UOoq74v7lA0S35c2j/Ox90IXEb8tTGJZf/z+KiH+6J27aJDo3ivZ4kPgn
Dom62e3i+9yDcTG69yAg75v9zqd+36kkrPy235D+VkQveoListA3vesYg34D
/sLg/dN8P7VtN7TvKKb/vvkz6Vwf5C1n/WTEnT8vukzVF72zGCPPVceH7sOu
UPVF5ypiZBwn3lj5K5X8lcRv5a1W8lazvEH96ver6D2UGLlPOz50Hze/Ry3X
BdJiZJwn3lj565T8tVw/QXkblLwNLG9Qv3zfvtxHmxZj7W4962Nb/33ZjSo9
ekcvZJcauXzB+7+Z37Z/5rf3c/N9/nYcaGL9Be//1u9zMd2OU02Un72PvFnp
m95/DtmXZuK394/ze17WvjC/vR+c3xOw4ya9Hx1j7x/X74HR+zUxVp4WpY9W
Vb+cns2/lfit/G1KfnoPJ2ZhUF5+z8COs+1Kv/p+df7eytOu9MH3rdv2wOnZ
/DuI38rfoeSn93lihgXl5fcU7Lh+SOlXv3fGdCvPIaUPvu/d9gd6rzvUHjqJ
38rfqeRn/pSgvHw/vF3H7lL61e+rMd3K06X0wenZ/kPvh4faw2Hit/J3K/np
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
2lugv4j1l76+PmEfA/XK9lC+l454l4jfR8c6hH0MtAMR33bFeYR9DLQLjpfK
99KdIb9LxEc9rjhhHwPtUsQP4zxh2O6LcCr9aRyyf7R/AvtLLF4Rtv5u6ydT
fP9E2Pq01T9jG3cpluWJWM8tFfUZG7HeWSXqwxGxHlgn9O1xCXsY0G+T+l6v
J7WI9FwR6y1tKn29HtEh6rOvT9jDQPvpEvUZHRHP7hb1GRuGrV/Tq/QbaQ/7
fzIoPol9dIztPgKO59l0ZPxvYBTbS1tP0n7e5uB4kq2nHJH+En5PMwb78oFt
vITjGfI+GfiTXvW9nq/7RX6uOD3fLVPpS/s8IErO1/hcJOZbPD+R72FivsL2
XL43iPlzvdJv6P7ZsP1Fsl64/oJ/jth3ac+b11Hc0qnqBftneD+J1Dv6D/uT
sUKv6D+8XyBO6A3rzexPyvcvnaG4Ea83y/cw0X+4v+F+Mdl/WkR+fX1i/TTQ
f9heyvvu0H8OifLERqyvcX+T72ti/YntpXxv0xma9/Sp+tPrC2mhfVAuVf+M
bXya4/G2eneK+i4Ni2frfbE2vszxYFuObPH9wCiOh+p9s7b/cjxS3keM+V+J
Kp+M380Ii4dZ+Rjb/lsm5A3fd2v7L/c3vQ/X9l/2N/S+XNt/ub/pfbq2/3L/
E+8R3pyk6kvjkL7D9s9Z/dpzaJPC9rdJu4n9U7z/S9pFZ2idgvdHyfc/4Z/w
fiGPsGvwT3j/TZ+wW85QnJn3n8j3QrG/oVGVT+/XaFby6f0MbaK8joj1fh7v
cB49vDz5YevDuA8K2PZ/9mdsvYr11kD/7xXyRsf+9vg3mOblGL8Y2/UrXl+S
9xClhfal8fqMtZP7RHolYesbtnsz7v+5KGx9QL53Cn+d5xfy/VO0f68orycM
2/Yv/fW+sHivbf/Sf48Ow3b84vFPvp+KeBWPd3I/cFpoXs7xEfm+alpoXVfO
b/i9VXf4/mFP2Ll79V6cGg89S9R9VGh/GyP4ce+f/H6l2qfuVPXuVPXsjFH3
gMXIfepOVe/In+M5tn/lqfSLVPocD5D3Q6H/lajy+lV5SlX+PN+R+9bR3ypU
+SpVfjyey33r6G+1qjx1Kj+eL9l2Va/qt1Hl16jyE/u5Av9qUvpuVvm3qPLx
fMv2K6Zbe9mqytumysv+hJ1/Mbb9uEPpk7G8Pwnzs0NKnk4lL2N5PxLmb11K
nsNKXp4fyPuPnKG4dLeSp1eVh7G83wjtKdK/se2G47tWrxuUv8D2Vt5vBHvA
8WBbjz8RtvWcodLfpdLn+LH93UvYrvfvU/xy/hIXFm+25WP/yfarXFU+GS9y
hcWn7W+eyo/tvbxfCPbao8pTqPLj9Vp5fxDyK1H6YizfV0N5vap8PqVfxrhP
WZbfr8rLdNsv2L/D+zpSXu0Psr+H82zA8v5EyF+p5KlS8jLG+AKM+4qkPDVK
XvYn5X36GP+0v1mnylOv9Nug5NXj4fdKnzLe138/gUzPrdI7oOTxKHqJKp9P
8Wv/QZ1nGl2l9F+l9Fmj9FOn6r9anRODfRHrIS4+x4XxTMbz+JwV7L2M1/E5
KNBlPM4V16r4Zbytr0+sPziiY2U8LdYh1hcC/mmfKu9awrK+VoT+vlvRZTyM
z6mBXqr0U6nkkfGsvj4Rz3dEx8p4VaxDxqfiPDIe5YiW8SdXXLfS12/71/33
ecj2JePt/fdlyPado/i1PZTxH76/CfZBxnf4/Uz0Xxlv5/upYd/0uU2nwtz/
bP/MVHS3kidXyeNR8hQreXxKnlIlT7mSh/ubfF8I8vE9mnZ/SD3h4M8kvlfU
rg/zvaF2vw3fC2r3b/A9nna/A6dv18+rFb9f8ZcRtvsJ+B5R+35mrcqf74HA
eCHzY3sksYPOP8vy8PlLiR3qfrv56j3PBIUd6r5myMfnNyV2qPlM6F7Kumri
l9hB75FIffH5T4kd9J4L+KcG7TOfD9UY7QHfR4fGI3wfNFtv8vu6EuPek+9l
e/Lw+7sS4x6RNOK3f+b3eSV2qPt3cM8mv98rsUPdp4N7Nvl9X4kd6n6c+cb2
fz5PLLFD3XeDe0L5fWCJHer+mpC8Q0qkvGEY/REY/REY/VG2X3U+OIPrF/0x
WJqwc9jYZ2zL9aqR+47jf+fctZv45T7X+N85Z+0hfrmvMt7I8RvnxH3EDwx+
q06W2/qx5cQPDH45/uOd5hriBwa/9A/wbnMD8QPL9JuJ3/pBzcQPDH7pX6De
WokfWJanXdVrO/EDg1/6J7ALncQPDH7pv6CdHCZ+YPBL/wZ2sIf4gWX9rlX1
u07V7zril/13heq/X6r+C8z3Btj2t5vSB5bp63sCcokfGPzS30J/KVb9pVil
X6rKWUr8wLK/8Lhi7Uwl8QPL9qPP+dcRPzD4pb8HO9Mk5R3SRPzSH4QdapH6
nNRC/NJfhJ1qk/19RRvxS38SdqyD+IHBL/1N9K8u1b+6iF/6o+hf3ap/dRO/
9FdD9iGjV9qHjN7faZ8/Uvu07fxHSkdih7pvDveG75J6I4x1vCzit/0ki/gl
xniaQ/zWDvL9GBI71P1u80P1ni/1QBj3UhURv61Hvj9DYgfdvwZ+W09eVY9e
VU/qPo0MdX/GEO1/1ap2xPdqSruRqOpluRqPNqp64XtL7O8mNb78pPSs7zFJ
J355T+D8iHtNcM4E/IgXy3al7znJUfYqj/iBRf/15BG/bTdFql0VqfIUyf7u
Yb8FWOrTq/TpV/r0q/L7ZX+P43mAvjfFylMm+7urQrarsHtUbPkqZH/vY79c
36tiy1dN/PId4vkR96zY8tUSP+LV4Jfxa9zzUk/89rdRtc9Gqc83G4kf8Wzw
y/g27G2Tap/Nqn02S/1nsH+CeLfs1y2qX7H9Rzwc/DI+jvGF7T/i4eCX8XHY
AfZnEC+XdqlD1u8kHi8QLwe/jJ/DrhxS+uxU+uxU+mR/CfF08Mv4OuxUl9Ln
YaXPw0qf7F8h3g5+GX+H3etR+uxV+uxV+uTxy/6d3xsAlvrsU+0T9wQjPu8g
LPvpBuKX8XgHYWk39D3Ye4kfGPzWruwlfhlvdxAGv/2zvgc7T6XPdtKWL4/4
bfn4Hk1gaWf4Hmzbr/heTWCR/ooSpU+f0qdP6rOO772W8XQHYWFnhvC91zKe
7iAsyj8a9CT6TsrP9zHCb5f6X0N0O25sJ7rNdhvR7e9upa8Mosv7cHEv+D71
Pd9LLtdXkmieKfMvILq8Txbts5jouM8LdPn+ViLpUX5fRnqCPi1eSXqW+p1P
/oble1vdL7lEybNEveOB8SFVpb+J0pPl+ybUrtjPtHzp6vt0+t6KmaXKyxj+
CfixriX7XY5KP4f4bb3ny34Rna/Kl0f89vuDRMd+F1meIuK3mP1M2y69Sh4v
8dv0/Eq/flV+P/Hb7znOaOUpU/KXqfJz3NDWR4WSt0Lpn+OA8r3y+eSfyPbD
/gn26wDDP5H1xXE87K8TdsFVr+qrUcnXKPX5ZiPx2/SaVHpNsvwrmojf6qNZ
6aNZ6j+jmfit3WN/A/v7hLx1LcRv9dem9Ncm5RnSRvzWX2D/RL73Pp/8E/Bb
fXcofXdIeSZ1EL/1F9g/wf5CIc/MQ0qfnUqfnUqfncRv/QX2T7A/UciT0aX0
2a30eVjp8zDx2zgyv4eE/Y1CniE9xG/10av02av02avav34PqU/ps4/47d8x
nqxX45dL3YvM/gnuQwC2/Zr9EVuOnepeZ03/mbC1M/xOh3wfcEmE/2L/zu8b
4bw+sP3Npu+1P4Pz8sA4Dw9s+xXfC679G5xHB8Z5c2Ds58T32t/BeW9Z3hKl
nxKZf5j/g/PUsv58Sj8+WX9h/hDOK0t5/MSv/SH7mxzxa/lXRvgzwLJ9bKPv
gPG99neAZf1m0PfA+N7Kz/4QsGxf/F4AML7X/hKw1O9++h4Y32t/ChjfY/8h
vpfvz6+M8LeAZX0dpO+B8b32x4Bl+/bS98D4Xu5XSSIMuv17AsWRYT/kvqIE
iuOBDv8JdMTtpL3iOJz9zSK63PeDeESkPyTTzyc6/B/Qbb0cJDr8HZl/pH8j
5Yv0Z2T5Iv0X0K08lUr+alX+SP8EdFtvkf4I6LYfR/ofIv8Vkf4G6HZ8i/Qv
RPnqIv0J0K3daCU6/AdR/tGR/gLodn0k0j8Q8s2M9AdAt3HMyPFfyhc53oNu
14kjx3cpXzfRMZ6DbteBI8dv0O26cOR4Ldrnm32q/ThofHaF7LP9O7+jgfFX
0vkdDYyvoNt2z+9oYPyU33N8AOMj6PaX39HA+Ae6lZvn/9bu8Hhm5dTzfZ/M
P4Pn9xivRPp1/P445mvAenyCvwL82+PPzyo9Hl/sL79Ho8cP+BPAenyAvwCs
7T/8AWBt3zHeA8N+43xkyf9+mpi+7Bd6P8D78pphX+3PpPvy+44/pS7qRdS3
z5z69ZeTshvc9P3Hp3nec92YTd833fxFy6m3u+l9g21x541/YEQ2pXfahonn
JKa4Kb1L3ptz8rerD1B6G39pWv3o5AP0XsKqZ+//PLvgAKX38McLZjY8dIDS
a33rxmFH1eSaR86Y+UxfyjYj9+/4zKzFD496/IDHvJyUeM+UYT6iI7+yIxuX
/t9CD+W3/txzV1U/V0j5VSSedNuWwx7Kz3H47cqT3/eYdzo2d6bmb6P36ONf
X7a+6iYvYZxPnThm5IN175VQfgOCyZRQetMclw3pfILuyzFpy6e//22mj/h/
8o4+8ZNn6L4a82jlNYPGO0vNuTVO/9vv4J3FcuJfe19aTc7QMqqPe7/7tXHl
jlJ6j2LJqlV3jLid36O4oWjVxGNG8HsU5buP/3nKAH6PwnPHmhiHr5z0ueWF
taclTq8i+R78sPWePxzi9yg+P/hrwuxd/B7FqxU7T7jnM36PYsVJdbe3v1Jj
dtdfFfgvTb/nEFObZ9MB7lp34449hxkfPX/O20s7GJ/yRGbslBbG0dcd/6cr
Ghhffso9WX3VjMc2LFm8p5zx7T8X3LfUx/ihL845Y8rBBjNsS+xjU+9rNfnv
3LL3mjd2m3cWv9XrvrrVPLrxggljPtlnhtxcetNNZ5WHfnNNzapT0x48rdlM
feGlUwpezjV/TZn58rqBrSbjRtejMdv2mwtvrp5z8b4yc+ui1759/vEC88dz
3zpQ39Bk9iQXPXlLaoFp6Bz31b1XbDf/aNsy8N1NxSYl+qQve+/LNzWjs/1f
th40/x0XvWngdT7TcK7ngpKWYjNk6EcVH5U1mQEdiavLxxSbQSM27113+3az
bcWBv+deFKinpZf59nd7zQWPXHd1T6DdXz/rzaur/9gc+vWZh6ZlXRh1RKvZ
PWHOEs8Gr/ls3vuTTKXXfPPqqHm5j5WaxUNGLTAvtoZ+S829lw9+7OiEdpP2
p217/WNKzVP3P9/wfGD+PO443+6Lo0pNfNINSbfu3WdG/pK/acOP5ebvz5/f
XHmGz8z98OfyO3YGsC9t2NzZ5WburafN/Lyz0uR3fDXriCeqTbpz26cbPq80
ZS0fvDYps90Mvu6CL1Y8XGOedj9U8uLhQ+Zw+1fxy8bVmBNu9t75wCWHQ781
5o3sa+ctf7zH1H7X0v7qGTVm3L0fbY5K7DNnH/OHpRuOrjHvBeszLeSHNITG
WzfhdGsQzeEQ/iTUj5pD+L1Q++0O4XNC7Rf8q4L87aYlhK8L9a/2ED4Q6l/o
F0+H+hdw5vysp78vWWfiX3ip7qXOCtO6f8yZjufWmcqBz17wzz9VmhVRT1/0
3tldZkrPpAcz5+0yI3pf9lz3ZrdJv/4Vx9jF6WZSZYG76etuk934Q8/uWenm
j3uuj717aa85uuL5qKjsn8yZrzzScPdNxebyQTcsax6VY75b1pnSdf9aI/cr
Ok31E2ecvzWGzomYqlD5rHpyTWvHn2avLcF8JNN8M6R8+EnPeUxhx+wNO/6E
9+z9JukPL3sy7sJ7MrS/08y7+6ZPzptRba7aN+6IxPUrjD/l2w8vObHMbHEX
TSkc+ql5ut2Mr55Sbt7N/fHZezd9ZtL3vr5152XlJiPhvJor+r4we16+8r5/
T6swV3Wefe+TFV+YUSc8sn/nfyrM8Lv3r/0g+kvz/uq3v4peWmn+e0PrLe+f
s8K8nlB16t9WVRnP5BWLTx30pVl5U/nt//BWmwnfZydcflqSef7eWTNe6q0x
jx35yAW1DV+Yo++6f0fGgFqz74m7ajo3fWoOfDj47QZTZy68aNznce7lZtrU
dxcVnlZnzpn+S9YTl35qok/silp6cb05e8TGvy5v+ZzeA7py8sNH//P1T+n9
srbDadFxMz4n+7b6z9u3HX0n/AGsSyaZx++e8+0HbfVmwosvfH/9a5vMHed8
1f7KyWVmyF3rki8o/tHsSlhy2aPflBjfBzGnzCv40Sx5dW7B1c0+E3fO/n9e
VrSW4uFbm0rOGXzV9/S+7iVZwx+d9twmc8TDA1yjv64yxxxctGpYoZPe1z11
yMmrlz7xoyn87l9Puv5ebzy3j7s079RUc8KCt79Ov7HeFKwpCvy3ico/6ODF
W374fB3FB/Y/ff+qo6v5/Z6GK747Je/vu8z9r994sOnecmovbx7hOfKo/6sx
hemX/ys7M/J9n5WX7jkr/ZxKc+F54697+bJcc97iJ895/S+VZtNNn20elrff
HD/94zs75lXT+0pnTnzxxv/+OYPGs1f+5Hj9gZZdNJ4tv3mYf3xvujk8eOGj
U34+TPl4Qv39guWHB5jb9ps/zlqx/o7v96k4eKaZuvWouY+dV2J+veak1699
ajeN56C7bh3xytyzfKZ5Xsxpe0ZupP5UNOqmzad27qX2gPh99r/GbTz2uCrz
wbJPXz+i2kXtI/XmKX98/cIMI/cDZ5qJrvr24z+vM4//95LKsuF1pv6OhtaT
Du41j76a9cVzn9Sb07ft+ejXMXvN2Fnv3X5gY4d5raN08l3vBubBW186N+26
LjPomS1XvuD+1fzBPf34V+7vMn+Z+PQxq9N/NYVJV5Z23tJtKqbM600r32se
7xzfs6uy23TGXPbpwJV7zdzrd0UnPdJr7rjjfxv2nbDXvPLfTY+XPVJpmu/v
Htx+335T3zPzl+4z68zKaZNmTe3INk+taPvztxvqzYVv3vPGS4uyzb6HCl78
yz/bzKQJt5yQHNBv+bazWvoOdZjW3Zl/jJ2VY1bW75xz3eBDJmfa0SfvnZlj
FmU9NXpNb6cZ8cW+Zx7syTaT0ya2/GtVl3njT+9PzsnONre/8fVTQ/7YbV79
/sdvPW9lm5XXfff+E/N/NV3fX+nqubjAZPqXpbreKTaXDGxZWVeVZ9oWbfAv
cpWYe6LinoyanmdiH3gruqG70ty0Z1fcqFvzTc6l1UfF7aw1a8vv959/eZ75
8tijfN5Fbabg0lmPzp6eb04b6Lz+1KyAPj+Zu2fbzjxTv+f5vsfMIfPUoasn
7v0qz7x0+nEnXbK/05z62ne3fnVtnnn2rcbn167MMROf3L7ntWWFZtOuZRe+
flSxiTV/GPDJ1UUmusvcmlFRaW6+0f2fIa8Umeq0y389++Mqs3v1qoo7biwy
j3W+ccPpH7eZtz4fsfOR1iKz+M6Hntu1t8MseW3GvVPvLTKxZ64uf3HsIbN/
xeTlNaOKzBXLRt43NbfTOHfPbJuyr9CcfkbpkfEFXebBxjffGftBoXnrhs9z
b3jgoKmavKc3aVOJ6bhg3b6c1EoztGjqe1c0lpjHVv/r+eSyKnPt23O+/8PO
EnN7Ustlt/2jzUzJrJg19G2v2TK+42+T2zsC4/PI0/52idc4Lhr/8lcnd5mJ
Hw3925+bSsyDEwYNGTMvUD//+XfGG6Ul5rn0Mfm7L+w2S4/P7PlzaomZecGh
l84a0mNqvt/SumVFicmuXDd34cYic/xln/ScUegzGy5c6zvRXWmGJFyx6oVx
frP43fJBPSlVZv3Gd197a7jfPHvs1jvfDui3c2/HWf/w+s3Pp356+4j7us2V
lZPX5X/jN2Oiqq9x/9pr7o9+5L67X/abM34+LnV0acDub9t+5eADZWb/gBWL
Kk6uM+fNWDPzsSll5qTrfx7TuKLefHzhJUfvM2Wmfl7H5LGeWrN51SOzf4mr
NDO3bO15aUiT2ZX9xC2nD6k0F+31vt09tsXcdurzyeOzK8zVQ286NOOrFvPZ
khH+CT9XmDnnber5KKCv0yccufDHzyrM8r9F/an+4vZAfboerXunwtwz5vSG
d2d0hH4D/rSp+vsxNx40057f8WhFfpU54uOx5120otgMO/+Gwphvas32V85P
nnVBqWnyFlSUP1RrrsrrXXTtOWVm6RGFcXfcWmv+dXDOni1jK80lDTdOeWRo
ralcXvyX3ddWG/f2lCtGDqo1F9xwfPO0Bd+a9Ippp3i3+s0DS35ce+vO1WbA
vH/cdcsfys0bD2xauLlntTnmydWj3uwuM3944p4Z7bu/MfuPvm/qT99UmBdL
9uaPei3ZrGs/9uh3+wLj19ajnx193HfmtluXfTj0ylrzS+bArlu+7jPVy+o/
+/Sln8z4N7+4dOyDOWZh4pzZh/0HTGrdXSOz7ttl1n967FNH7PGZt05eWnpv
/k/mUMqGsh+La8zV8zZ+Wn14I70Hau1bqjnv6CmLzi0rMddkLf3Cn7mR/AfQ
v17x1+czL6TzIubXZXu2XfRTpZkwdMew7V/tMDjvDP7BSdOHJRzPePY9X41Z
/FmtuX5sXJ7nk1Vm/IWPTU19pNR8nVfy8LN3f2xevKL95LhjK8yk5KcS4ob9
z3y5qXZx7aAK82TWNXtOf3eNOenI5Ednj6owJ7w0cOuCnYvNpp+fPiXjxwoz
KONSz4Jr5pv1l0+/+Mz6StM9vm/kxhPeNd/dVL9k6u5K8+ra+94eO3uJKf0y
ecS/aitN3bwVDzlXLjTDHfEZn9xQabI+/HHrcbMXmsz7FlddeWel8ac55p3w
0mpz7/ipVWf4K427OeW5ufPnmJHdxzz4zT1V5j+rZ61b+63DpP3cuPrCZ6rM
ncc9vfbvA942dw6+ryv3nSpTMu7JDUnVK03sc7dd/VlslTl25rvvP/XYAuM4
5i/bHzu22jz6wv0j/z38ffPPd068dkRblZk9/lbXrTH/NR3PnX/UA0VV5pf3
0zfN3bPEJLd9sfBPQ6rN0uFrruoufde891Cvr/aKGjOmdf6/m0YuMMtmr16a
cWqN+e9F82c/0vBfc9Ss8v+79cgaM/2LE64u/s+H5uq1O6647LIa4721ZcLY
vzvMjqYnFg92VJsPh9x/+uBP5pn17ldXPPBatRm5+vGXF492mGOL255aHKBH
neusv3f7HPPC4N5ja5KrzQ/tCdnH5yeb8deWnVB3QY3Z92Zm7QOvfGvav1w6
ZuRZNWbIQw1LV+YtNBOf3/9/p6+rMcOzXz7xsVVzzMzVCz896tNA/k0TS5su
TTSjc6aPGbu4xnzjGD8xceZCk1KV6zhiS43ZmN/217fnzTK3nLSypTa3xlye
cPtXP/zfHHPOtzd9//DjteYVR9Nbxz37jjnff+TZvkD7f+DcH8eNnuQwrzYO
yX8mttak5V617MY9883maW+U3zCzzpz9+qTS+uULzNjYuhE5j9WZgVf/O6b0
6wSz6dEvTvTF1pmUHVPHlq5613xzzp/rPsmsNVG5c/PHOZeY+ulbRmVk1JoZ
S55++eXt88zpWy+77/imWvP48rFDrir71gy/Pboo/uU6c/LChBMnP7jQfFvW
3TbuUJ35ON7xxnkpCebOqJS1NxbWmffe8k367PwF5r1HFv2j6Nh6c+mjFw59
5oJFZtSeBwdlLak3bUctW//W5kVm3QfnLj1jYb25btORD9994Dvqb9Nf3fzl
8R9+Se/ETnz8f+U3nriG/PdbylaVvnggifYBurqnPbtvzDwjzzclmS9nDPz2
+I2VpmNQa/bABV/Q+2lv/HXDgE+2fEjvQR44be5j9xz/jpHnoRwmb68jdfNL
NSZzQcYnlzUvp/fKPvrw6ur3q5aqd2uTzOEbzfIV/ipz8ejF//s+8QvaRzhs
d+xr5VvfJn8K6V896dQnp+6pM0Pnv5E39Qp+5/bqPz81Ydelc1X8wWGOCc1/
vsq/YuvUD5bSu7d/feq76WMu32CWT/760+HnVpi68yYen3/9UrJH78bds9tV
8rF6f81hjszZNOG84+vM5GuvjHs5N8Wc9Nwn4+4Y6jOv/KshOWv7evNHc9el
U+q95tXss08o9LjU+orLJByR91BjAB+75N7U+374wVTcPKPo2KV+8/TXn/7S
Pnm9ufjm9ed/elkp8be8NWPZbTV+076t8pWZFatpfQ5xzSzH+JkXBej3nXJM
0+S715u5XUn3zKgoM6tO+OzTuR1bzdHe/Hkv9ZWZE5+bs3JzwyqaT+D7YWe8
GNMRX2Hi/3HM/HXL1pu/PXNO61u7Ks3bma7Nn/51A+kD5ZnyaOnF5y6jc5Dm
zH8/EzflvWrz0wfO4uThToPzvR/umfXfrUeuN/989q13Hl1aQ/7w3r+fsePl
hRXm79mL/7NxzR5qT0g/N1RfG1qe+uTEP+eYXS1H3fBqPN23aybUvP+PX52V
Jv+GbbtOvzibynfsmFsfTizeY+ImP5q/9+4q89I70UfufyvHlKXUzTtqfGB+
/Mk5X/3kb6Zy4D6xpyduWt11XKZZ9uJP/3uglO5lpvdGT/J/f8L/jnSbgSvu
OnCwq5rmAfj+/BtvvfZ27z6az4yuOnG8OyOL5jMz3zl55Scjs8y00xcNL7+k
lObhSP/yCzyHHnbmmtiilWmzK6pp3w/uQ3t40JxR/zuYS/G2EW8uuvz29/dT
fovG3d58Xm4OzYcKF5w2quDsAsrn8f+LSt+5Hu+Jl5unLyweO2dAAeX/+Juf
JPYVFVB+cYXn3uA6zkP5Dfvkoe/uSss3x6aMbMt5s53mV85r9pv4GDe9P478
e2Lzsg6OP2je7Lnmibzbioj+2Jur/vr487nq/fFcs/Di26o25BaH9FpiXjq4
5raut0qovK0bOw+tH36Qyrf9rrmPfTWrmMrX9/UW37oJB80RBX3vDv53O+W3
6+PjUyeafeSv1Nx002ODpngI9wz625hlP+bQfBDluX/Ix19s9nmpPP98eOUz
4z/wUXl2Tt34efzVXvOF7+SW2U9UUHofHX3euwecjZQeynvskY8sSL3CR+W9
+J//qr0iyUv1d27SljM33+U1znFDZr2xPJ/sOfK/6C/Hn/XKjlLK/9HUURN6
3/GbgjE3zvavqCB+tMd5Le8uzVnK8eGWlImnDmz203w6u+TeyXds9lN8+IXm
HclXLfCb2RO7ei9+rk/ln2UOnnO0Z+BJFVSebSkLyj49l98zHrJi1exbTyk3
z55w575/Tkij8Qfta33nhDPXXszx5bPmbvhz9bxKipvdM+7ZI58dVWm2nz2m
K/btNhpPcJ/fo28VnX7JNDpva5qnPfDXiy+uNTsmpe8+x+wk+4/2d9KyvHuL
c2upvD2hfHA/IeKFSL9nxMbP2tdkmKpBI5aftjHLjJ368xTvGwfNkmnDOoYO
/NUUX5j47iMfeY333TuXruzOMsfNyEp6qqzS/OeDohkfFP2q3kPOovSbWufE
/OOUjWZKffPkoyeWmYOe689vdm8wP5595bBLXy8zA77c9dRPd2ww31zrnbXp
UJWZFXflf47qdJnD73+YmH9EtRnTsSX2GH+rmdu7acJ3f9lteq5bs+RvgfnK
WdffNPOYigxzie/joSP/2WE+Mvsenub+2Yx7b/HaZekVZsG5P3ReUpNlquc8
++yQi73mtW83HXnV8/ROoll+/5qWS50+sylt87ASt5PepW/tqvqLb8rX9F52
ve/urNnnOEP1TOfgjdPj+vCs/ys36c+5Ktb+uI7eX01oL60adM0q8icuuual
c68cvo7epcf4meM+9Pzp3XTvjSm/5LypeQU15ofb7jhu467v6Z36BzZOW3XK
wQ/ofeoDH486Y24dxudas+nLawL/rVbvWSebzpD+sT8K8V3Ejfb/ueumwYH5
70PXPP/BxpFfUX5nTGi68ep58D/qyD/xeS8vmdxeaxb+cekJ9xV9aXD/BPIb
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
8wK4/Jf1AZEE/wdJSTOA
    "], {{
      {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkjlLXGEUho/LCCliN/feUVNYivvamYCWbhBLi4CFy+jMCCr6G9y6NElr
bSe4S1JoQkDNuGslFvoPBEHweTlfcTnPd+77ne9staOFr/lSM/vCV8bXH5v9
xeawP/kGK8x+YIfTZg+VZm81Zht8W+VmhcisHv8x+hT2qcpsE38efxd3Uimz
VXgbLuKfhxfgP+gXseWfzI7gdexn7veXmHXGrpN+hHdmq80ycF3kZ/nn4Ff4
A/G7+Z+t8bdWIs9JuQ0R5xsxH8nZiP8SclbuY+R5gruZ/9Pwf7gNnoKnqHc/
9rwVU7Gz+M/QtKJZi/zd5SqvU/UOoM9zLqJpRzMDn8MdcAHOEfMQTQ6ehg/g
STgL78Hj8CS8C/8m5nfi/8IuhTiKtxj61oed4HwKtxB/J3a97uXC7Brx5+F/
cJNyiH1GM9hKdPcMei3j7+nd88T7qLpU313itagm6aT/GPl9xdHMLxLPQbnc
JN5D9fIq8V6pZ8XE+6x+Z8Jd5fIc9kT7sh52oCIdekQ+94nXqXob0t4j9eoS
/0C156M6tBPajd7YZ6m3djgPhtrVA81SM73mbk/sO6Zd0ww0i1v870fScAE=

          "]], PolygonBox[CompressedData["
1:eJwtkD1OAnEUxIdd9p9oQUcWVinowYhfB8AWNfEINgQBKbyF1FSew0Q5gcZE
BQQ/qIjnMPJ7eRYvO7PzMv95U70YnF9FkspMntktSq98o03pL5MOU6mVk5JE
OgLvo0/RE/RoSzqAz+ABHsMb8Dd4DBd8Dz4xb3gOPitJnSC98G8KPsHzjoef
4C3w77a0KkjLGI39D3a6wT0X4C+mF9zzE7xk+sEzfYN3eO8ZfMq/W/xUkX7w
K/PGNX5DbtpIPPMNuMb+o2VBf2B/jsdl8A7eS96BdWGZ25nfZLfZTgd+nLq3
ddRM/Ua71TJ3M+/EurGMA/gZO/f5/4ypd2hd2k199HrRuxiRcYy+BiP6NGI=

          "]]}]}, 
      {RGBColor[0.21100000025930882`, 0.3650000001440605, 0.5990000002428448],
        EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
4A2Oov5f6Xhoz2ouddpvc8rBcAv8tspYIy9Rt5HfscF+x/xbVeWeC1XVDviB
8QNV5aeLVeX2ovMmd6Ym68PZi877R+rSp7uu83b5zJ3OPeSRb9eEQe40YP2F
27lnvOz2cKrcTY1JHid3tftcnIc+tiV2rjh+4NKq5eg/5PtjV8h+EM8a2opq
qa6K1t/kPXrj/Vshv7esGKU+YS5c9E3zETn9Sef1D8frPnx5vGK+1f6ZnNM6
7NdT0fjPlMV/q8yBa2riT3j0lnMxNiG38J1Y2mD+229OKZp/2CPn/stl8duB
WOfVVHXF8VQcyN0K36x03Y/diH36YPZIqjHd0falyr9HU2GdftYYuebx3RGT
00P/bXVxIHuhx4lUtftJ18ZbHav/vaOV5AfuPdvMod+piYe571Jb9bqmBwOd
rkVfTnUH6In2dLvmPhXtsVR3hn5/p25A38m2Nzn7hLkYm4GNOcYm86i90H1K
TlyDj6kHyCvg9rrrE/Lwu22qdU77XjnP94XTvntQV8HXbf6ngZ1aXF8tcFxR
c36lLBw2VSXbaPnbVdV271S19lzvRVwT63DjrZqw/VhdshbLZ/v+Ap/cG2vf
l5Ptkc/y/RfugwM7Yv+XUnH/krpw/1Y8ixpke3zw2bLWecYYebSuGpJassdj
8NFT9gX/CeDFya6TmNflueR8aoXtrvOnuNYf8L5gh3rg9Vblbvgdnr+nLK6q
GNsL68pP1FBgmm/I4avrjknO3Wy9qf+oA7kfgLkB74XN8A12A08bjHfqmguu
f+DhKUVhkO/rPYa7J3d41uUOzzt4wo7Yc3pZtQHxTWzPMc8Q/+u9F/j9TV3r
/Kqu710egz0u2Be/rEuHA+06J/rCYw/VZavldeU58t20srA4zf8WyLEf+Y4J
jjqsc5d9w15vVHV/+GNV/yfQDxty5+N+BO5GzaHsi83GbDf4D36GAzn/Os9d
aBln5F8J/E/u41znbX/suM7rv1nVXeV8VXtutJy7LHXqDv/PWGj7T/X/BexD
TUNMkrM6/A05eWXMOR3srbRucBL/XPAPPDRkLvpyXf66M+JlXEU5c35FHAqX
HilrbfRjr0Nl8fKZ0Hl+XXU5tfziuv8V1lTbZFxz/qim+uDHNdnwunXjv83t
fzb8Z+B/Afz0H+IGGlU=
          "]], PolygonBox[CompressedData["
1:eJwtlVtsVGUQx6fd3Zay7RZNTne7Z7cKFUpR8AL6pg/KiwXaCohRQyBYudpd
olRI4IUHjVEETXgwSlAbjEqhgLS73QJFxEdB8AJbMNFEbpGgPEG8VPz9GR8m
Z+bM/5uZb27fxGX5+blKM9sMRaHBkG/E7J/xZkX4BwOz5hqze6DVabNC6Lpy
wqwC3bEGs3zMbCP0FfymJGeqzF5HngB/kX8l+J3jzH5tNDvEvzj2J2JvBfZ6
M2attWYvgBkAOzOFL/Rd1WZX4QfxUYk8u87sN7A9yL2VjhH2Q/611LqNAuen
oS9yj1vY70Q3E7kFfiqUw18U+TyxR+PEy11akAfA/4m+Dfz9yJ8Ty93Iy8E/
hryJ+1RAjxP7DOTP0Dcj55BP4PPTmN95I3KUmHbBp/gXgW9Fvw1fX5OzV/C3
Gh/XkP+A3kb3Jf8i8OeIKYLtEvLYeK+BatHKvwLxjRFPO2ct67aWkIMl6EbA
GOdj4Ifh96U9d/spZj/8VDCDQP7m/FzOHwVTFXGfx+ATxLAO/g1szkN+HswZ
5DLUg264yWz0TrP11G8b9RvLOPZqhdkCbLdx5xL2l5H/IrpCxvkKMP/iP4/N
EfhFxLs48BqqlruJ7xT56UCfJFdbwHTCV4IZTXgOhpBfBt8Xc8z2Bs+RcqU7
H0G/MPCzITnvIpaV+JzEXTvIwQ8pz4lycwvMYfg5YKrBzoA2wD8QeC/qjM6q
Z9W7ulM9/GX+fYvuFHQFvgg+gr0+4j+IvffBFKPeEx/AHwi991Sz/aH7kK/p
0Hr4ezm/HH4KtBZ5X+i1VY364fuVH/L3E3e8CX+h0WdnDJ8H4N8hhjk1PlOa
rY8ynlvNwMfw07G/EtuToG7sLwr9bJkalpq8J9WbsvFu2mdWs6szw+AHkbti
nvOd2LsPeyuqPGfK3XMZr61m8Fn4J5I+G+px9fpabE7D9mzoTfi9ofeeZmwP
/FHw9cTTyr88+lmB8zqjszvo71e5b3mC2SdZn1nN7nzqeY7YXyMHs+rpEfR7
0a/CZy/5/4V4nySeEewnIj7z3ZztC322D+J/N3wd+CsJ97EVWw/hfzL6KdBL
aSfxT+GvjL88+GsJr4lqU8i6b51XrMqpcqsZeQb7R/BfF3Gba2QrcN+K8Rts
HQq9F9Xj6nX1gHphMpSH/x6f7dW+I7UrL6b/nxXyuzDjNVVtx0Fz4RdkXHcX
/l5M+wxoFrSDng58p2q3qqY96LYg/x73HaRddDrlvawdWwCfQ3867j2v3t+V
9VooZ9Gs7wTtBvVECXvdyE01vgNPNvjO1O7UHb7Ddgyb22Pe8+p9xXg7VuQh
zh8PfRdrJ2k3aSdqN97gzCPo1yGfjftO0m4aALMn6jM4FHjOlLtL4Bvhb2T8
bRJG2EehpeT7Z/79he4kMbVVe8yK/eGk+9KO167XG6e3rhPMGbDnU9576ln1
7tmU61Rj1frHlO+aWuTDyKMp7x31oHrxjqT35u03J3CMsHpTV+GrA7mmyntM
vfZW2mfnOvfdivwF1FzrOzTHXd5r9F2sGRjJ+hukt0g22pPe0+pN7XTt9nlJ
7xXVVLVVzpV75WAgcB/ypRwpV3oz9HbI5w7y9R9p8Bx5
          "]], 
         PolygonBox[{{7589, 4312, 7588, 5382, 5383}}]}]}, 
      {RGBColor[0.35225000028817466`, 0.4275000001012755, 0.6119999998305938],
        EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
QshMDG2KvP1fphJSGg==
          "]], PolygonBox[CompressedData["
1:eJw1lklsllUUhm+nv/AXSyT+nb6vVUAEMWFhXCnOIwiCiCagkAgooxCNoKBx
WOiGhWVQKLRMhQLSQgFpQaYCDlBaWgLqwqiJoAuoUSktc/F589bFSc50zzn3
TPf2nTRnzOz0EEIlkAmEVAiNPUMYlh1CU0EIe6IQriVDqEW0G/wXoDgHHF4j
ugegu8C3I98P/nQcwiHkF+F9Cb0VnXYcLMf4Uew9i/x75B3Iq5G/BX0NujAj
hJa8EK4WhXAd/e/gDUdWh8624BjqhQOd4F3oXEe3IbLvdPQPReZJ1gj9HOcH
pmxLPuX77pRlx4FR0IOgj4IfA0ZC10Nfwf5lYIdsA5fAb2LzBra3RL6bYlSs
NZHvcgP6GvTeyLlSTvaB35qPHehvsD8sto505XNEbJ/yrTttjexDvprgjUa2
GIh6hTAmK4RS8MEpy9pyQ0gUh1DFmQuc/QG667YQnkDngPJLDS9jaxo5PZhj
3pPIjkTOlWI6DF6Bzjh0eydCGEusT6HTgPwSvCvIenN+HvRcIAPZn/CakY2g
P1qp52jiqU2zTiby6Xm+6xHgGei1+Pib+E4T3w3iW6N8ppu3LnINVAvluBZ6
Bue/ha7ivk3g6+H9k/QZnV0N/AXdCb0SfANwOd052Ai+GWhPmifZeOyfxl4r
/ddF7LXEexFZGfTnyNO4Q4q798FfAN+p+iNfjfw4dCZQibyNO76IrD90A/QQ
9PuBd2D/p1z3zE7szQEOgk9EPht8GXdoRz4F3sPQb6PflWOeZPPhHdMsAQvA
/yDGpp7OsXK9K+VcPwu04O+ulHOjGdOsbQSG0B/vwNsA/jo2z2P7V+hc6nmT
nP+Y65xsitwj6hXltDLyzGn2BmBjFec/BHqADwYqwT8AhmaZ9xH4auA16EHQ
a8F35fms7qC7qEfVqzG8peBLYuMd8DpT7gH1gmq4Cv3nkZ/IcU5mYutOdNZQ
ilZ0LiC7jv4p8HPol6H/b2zZI9jcEjtGxboX+5M5Wxe71glqVA++I8+1mEY+
y2PHoFhehd5AfqeTo9sTrtmElGdAs6AaT4W+Jd+51E7Ubjyb515Rz6v312Hz
noRzUofsTfQHJjyzi5BdVb3IbzbyeYXkWzEha0XnPPXcVuTYdsI7V+A76C6q
aRW6C/Jd2/7YmA++mBycIdb95Gsq/lai0w/dCejMQjaP8ycT7vlx6k12xCTw
d3swG/gvxd+mDPf0IvC5KcfSAtyL/4nQexLOiXJTjY/RWZ6R9eh/jM1hWe6J
VcjqsV8HlAMVwElsjMz2TGg2hue7Fr+h3xt8CTGeTXonaTfNiPyW7AFmgp/g
/Gbql0aMX6WcE+VGOVPuqoFHe3lHaVe9xJlNSd9vO/cbm/KsLoQ3OrJN2VaO
VqA/C58tOe459d4r6O9Lumaq3ZrYva0cKBfHCrwr9IZtgy7n/AO9uT/Ql/tu
BWq6c6BcfIG/FZneMdvRXxG5dzugl4EnYu9S9UQW+OGUa6uYxkA/FHlX6I3V
W9uMv5DhnJwAfzx27dfCHsDZydSkuKd3uHZ5Wb53l3hToN/Pd+5l4z3wF2Ln
VjtmbGwbstUO/VjsHlIvKSdvgC+KLNNMlkbeUdpV6vm52CuHbkt6RjWr2sna
zeJVRJ5Rzap2knZTRXevbNDbVeydpt2mnqkjluYC/z20gxvB1xa6tqpxC/oH
gQPAJ/A/BaqKPMvq0coiv1l6u9RjNdhbmeddfT/1ukM9mmc89AnhwZIQfi/y
30Q9VRP7zdTbqRmr5nwZPpYX2qd8y6d813TXflTkXtMfZim2d6Rca/XAcmQv
42N8iW3IlmZMs6YZ1ayWwvus0DrSrerOTTayHin/QfQXuQrshh4aeZc0EP/C
Et9Bd1FPqjf3Qn9dYpuyffb//FHzM+D9it27muHm2G+03mq9uXp771P9k94Z
bej+XGJf4p0C74wdi/5kacTzH7vYrhI=
          "]], 
         PolygonBox[{{7725, 2728, 6999, 7866, 7867}}]}]}, 
      {RGBColor[0.5087500002542721, 0.4825000000893608, 0.5199999998505238], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFmHmQXFUVxl8ykxl7unsGkn49nX5vQghqGQ0klBtqIhZ7uaCA/mEJ2bAI
GgRlFRUEIZgFyD4JWUgQCDABWVUkERSFACFhk7JKgiIGzUyGnsVCCAbx+/md
FH903/Puu8u553znO+e+Q2efd+q5I5MkadNfk9qlxSRJy0myUM8DhSR5QM/X
Jm5/EfLH8iSZr/aQNEk+Lfk+9X9K7Sf0W6D+8ervkfxL9U9Tu7w5SV4elSQN
rZlpzV+r/3r1DRU85jrNWaLnXRrzusacr/Y1/XoSz3uw6Lmfyz33aLVTc+v0
GbWn5h7/qPZ9vWB9FmluqdPzi2qHNeZWye/XmG9J7teYBdUk+bKe7x6RJK+M
TZI5eu6WHsuyJPm81nlQ42+VUfYWPX6M3vUV/Yw81G75EunW1mn9C2pXNHuv
gZF+33dgTJvl0yS/KnlL0WPR9/7Q+cyWJJleSpJBjTlMui1V375KktTV95bG
fE39L8k/LXo+cYTbVv0uU/+kkp8PyIeXbMuJWnOu2ivVP1dnvE17niIbTNQ6
+ziL3g23W8YWzJsU67SEfLnkNzSmIPmnI922hsy8t2Md5LdiHXB05Chj6Yrc
4y/HX7LtlILfsdfk0PMhvfuG2v/kxsFU9Xfr/AeX3Y/+O3Of5UGdY1NuHc9M
7betRdvtO/LfFtn3nMxrTCsZr6doz8mae43GjOhKkm0a8/3MPjhDY5ZpzOwW
y/iur91z0WVPwWuxzjG59/qA9j1beqzS/OVapzk3Zr6i/s2SV4KR3DqxB+sv
kjxD66yX/FCbbTYoeYX2vUj9tzQ57nZKbqjdUbJM3A3q+RnJaxO3z5YcOwfG
rZG8Xe3TJWOJWEDuL3jujlhnv9qF+k1psq/YF3/RXhxyQzZ/t9kYa8gOs9S/
UbrPLFlGf/DMOui/QO/WBCbxbc5+ES9nl4x/4h2d0eVo2eswnX1V1faYGWv2
avySovfGNpWwz8ia5S9oXrHNa7I/WGYdYuqAfuhyc2Djx2rHar/nS/Yt/PNi
yXG2Te0TJXNWX8HPyL0F9+NzbPck9ooxyKsl75X8VMl9cNj8ZvtiT6yzSvIJ
2ntYOtyZG6OXhV5glRhfHnbj/GDycNligt5dpjO+VBfGtNaf69YZvmT8b2uW
X67bvnDrjYkx+3xgGDxsDwwMad0XJK9IPO+Pse/usuW9I92+EP3o9WLIxAAY
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
          "]], 
         PolygonBox[CompressedData["
1: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
T7Q3PQJbi2a0ZvXowM5Cez4c3/8BXpzZGA==
          "]], 
         PolygonBox[{{7892, 4962, 7891, 6956, 6957}}]}]}, 
      {RGBColor[0.6652500002203694, 0.5375000000774461, 0.4279999998704538], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
j1Vfgg==
          "]], PolygonBox[CompressedData["
1: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
dqtmzoP3P4enBbg=
          "]], 
         PolygonBox[{{7566, 4309, 6517, 7545, 7546}, {5624, 5623, 7157, 2912, 
          7158}, {7858, 4822, 7857, 6519, 6520}, {6504, 6503, 7565, 4309, 
          7559}, {6607, 4794, 7811, 6613, 6614}}]}]}, 
      {RGBColor[0.8217500001864662, 0.5925000000655312, 0.33599999989038415`],
        EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFmHuwVVUdx7eXc+85l3svBLL32Wefc67QywpfUCmmUlMWGqkTcDGFHNNM
HQMVFG1MoVKExECU1BTh+sgHoqgoVtiozXARsBIVQZzJR4mjMxki+ECz74fv
j+mPPeu3117rt37r9/iu79rDTjt33NSWJEne3idJ+qm9oJQk/duT5Dl1zuxM
kl/qmSk5rSbJa61Jkqldru9L1T9F4yc3NFZzLs6SZLueNRqzUn27S577Q81d
VUmSut5TPV1d/kY/338V+r+u/uskn6Fvl7TJFj0fl9y3KPqx53I902XrFSEz
d5baX+g5pcV9fOvW+DzWZK1pbbbzbdl8VOo1Nmgv1+o5VvJ1ard3Whf6Z6lv
iuQD5JQtNY3THlZrX2ML++eZhm1nD+xnYayHDbM7kmS95CWSLyzZV5skD2+1
DTNa3Ncb/fe1W8avW+vyn9bO8iTp6bI96NxdsS/webNqPT+TvwutdX3F9o6S
nSMHJsn3m0nyTclT1H+05GbT/RPV7ie9qzX2X2pHSs8O2fQXjV2n5xqNn9qd
JJu17hY9x7f4nf6/6/sKyc8Nlr8kD2x63/vJ3vvQVU6SB9Uul87J0n+z5GWS
T5Y8V/I9Mfdutf/VnOmye5d03K1vB2ruG/LnGanjOUPzFmjN6Zr7gvz/ib69
OkDzGo4zMj55ImLwKWzRPh7W87zGfxj7Yn8fNByLzXXHk7wgpg9UrJt8+Khq
eYzGbI5Y93Y7jviB+QNLjh+xo+/F8A85g//f0/yjw+cnqL2yw2PQUdUeH9Ze
crXjFePBekZKV6H3Veqvq/28nicl36j8miidf9YzQ7b1a7eMT19RvB/RvFfV
vk8+dtq/Tzac8/3kh/Gd7v+p5m6VfZdRh4lt3hx7mZe7np4qXFvkFfn1rMaf
rv5zNP4Y6f15zH1J/ZdKvlDy+0PkH9nwuGzoLHl/5HmPdDwW+XlK2TlGze2p
0ahT9ozOeZLndthH6Hgx8g1d3Zp7l/Z8lvr/Ubiuzsi8JvNv0dxrqt7Xs/p+
sp6ZkidlxouBUV8v1B3ntcqpdXr/ifqnJsanbS3WM1Rr7qdnrr4dVrYefL62
1Xaxr8cj57rk2/m59azTmk/IX890Wt9XZE9J7VWy4Yiqc/FItbs6HK9BrdZB
LZMnq6qOA7k5v/D3BZr7jNY7T/0XJYG7gZ8H1qz/S9rTPhp/iOSZdduPPLnF
eT0lsIt2asjkJjL4MCt00r9Rc84Ht7XWMvl7/7LXJhbEhdx+vsXnAblETIaW
HZcNLW7PU/+d6m+q/0zi0bBPNqo9vjD2/SAz1iGTG72y95LIq35VywvUDpGe
W1udZxs09xuydx5+arHuczX+aclnSz5fchtnkMZPK/msmhZ5e6/6n2/13r5Q
9jtyZ9O+ryiGc1Xbp2iP78iHbZkxY4TW+pbGnlOxrw+tWT5M7T/Vf5fGl9qd
Z+TJyIbxeUKXfQqGgjlvKt/Orvus5Mwcp/EtmvftyJk1kcN9bc4zcoyxg6Wz
KjvyNushJ8h78v/YqvfAvqjRHervk/wOtkvvSunfpPYi2ZSAG8RB7w+of6Pa
fw9xnNZLfj81nm+SvWtrxtmn1D5YsR3YcLDW26YcGaextzecW4Oatgnb+HZQ
wxhyHPHVuIPk63vk25amMRlsvl3vX1T/HWpv1ZgRkpdLfkjPVyWvVHuH+kdJ
fkTyRNm3r+w8MWp6YmBgM/WZ+z31j6kasxtV51RPYA5n54RO1/oifVsrPw6X
zkltHkMug3MTYvytufPjtty4Ad8AOxZprVT9v1b/dbnxaJHaqvZTJae03xv1
Pkz9v8uNv2AuOUjdzIna+VzgObgO3vRF3MFgahFsatF+VsvvrxTGRWqDuhhX
WF6vtdZlzvOG7Mqoz8CvKwvn65zCub80cqOeGqffUcx3Kq7Lpf+thuuK+uJM
+KhmTvZxzRwCLgGPe7TN+TM8zlHO0yVqnys8t1u699X4xdisua9Jvk3fT5e/
R7YZo9nj6IYxdbPm7RhifHla8rLgAPAI+AL1TC3j184u41gaMrhHvnMesa+1
meWxmWNKPMEl8G17YNoBZePFuZEP5AKYD+5tD+y9Knf/b7WX3+Qef0NqezkL
8O3BZWMc+HZ/1WsdV5ijLQ2elsV4bH45MAQseThqGb+tkv7DpetPapdo/iQw
Tu36qnNudhbcpMv5QF5sDl6BzT2BLYtznw03pc43cg2sQzc4DoZjy9CwB/91
hQ8HhFwN7j0g+PehZevkrJkY/BD+OCz0zI2aAKOoiy114wB48IfYF/t7qGp+
cFJhjoJM/qFjWJxPPKyPbSuq5rwnRO4/UjFvBkfz4OpwEbgEcUYnOPBS5EY9
9FweXI64r+8vm+KOcXWHa4T4rAheCj8FV3qDf5DL8IetgQncPcCF0V2WwTVq
eXbwk4ek+9Sy40qNDA+fYDMxgovu3QNyd81jz6o7fhMiFtiXlf4fozTkvWuT
l0+0mefAkdhHX9T7mDbHBLkS/OfkzPi090zu7vJZBWekttg7OXxJ7BVsub/d
9w3qgnxGJh6HaOyKdtcOuIUd88I28h3MZOzymHtz6vwhN8kl+BNY3ejwnYQ7
DFgI7z0+uB86wQfOCmqVteD+94dOzgRwilj35uYkS3PzSPjkjOChcANybIxy
qBXcz8zX4e0vyPeXd/t+0T/zmc0YbMUv+Ac7OXOwm/znngFnZR040P5RV1v7
+xyBo4MT2Iydi1NjAthwS2r/kdeMezTOEfgBZ9jksOHQ8M+XG/bV7anXODxs
mFyYcy+smufBQeZ0+35FvXar3ZEab9+VvH/mmuJcejl4Mnx5Tm5sGFU4l0dH
bsOhmoFr1HRf2HlDbl53fe48Ghq4zN4ZAz+5NvfchbnvSNyVdld9H8bnx8mu
Dyo+N8FkOBZYW859ryPGS1KfmXe3m8M9kBv7d+p8+GNuDHtviLnMqPAJ/j4w
fH5T7pgfXTinVkZebQi8JpfWNPyN+xZ9h0T/vbnl3tScaETUBe3BIZP7B8V4
YlWKnGE91uVc7UuN09wtpsa9D/zBFnIe/D6q8N3syMJxIl47U9fxyMj/sXGW
HV74jNtV8Tv3Nubiw7fqPkO2pb4Pc3/6ceo4rw7M3F0zfn5YM7Z3Bs4fUVjn
1wqfC1ngBnMYD+7wz4N8AxPg6HCpO+Wn2YV5L/y3p/BddULh/wjcbY9S/1Op
6/yluv+DwM3gaGD6HiyBhxbG5E9qvg8z9z+pcQCd4DB3I/guvBIsA9O424ED
3Aeo9Yp0Xay1ympPzHwf+X1uzrGnFqTzxtT1yXkOxrIue4b3wH/erfmOAQ7O
r5qDg6f4ZEth+dOp/wl0dTi/4VPt7eYe67TPTvU/lprLgz/g6YAOj4czE7cP
InaPxX0azARvSoE5GxrGoO8UvtP3i344MvcZeBw4xFrgHXwBXkEe/Kjs9VgL
u8phGzbD3emnrtkvZxb1Dw7UUuMudw9yD37Cecb5NCzu8Dtqvl+gkzqc12G9
8OyukNH/XemsaExP5rGVGL+28H5Hqz22aezlHw8xPibOkb7AUTCHu1Rr+IV4
jo//FWfGOUYNghXgBFgEBoNHYBE+mdzuO0hvYd+8ntpPk6L/gsJrTlJ7Q8j0
9YUe7KB+p8S9+LOZ9zykYV3opP625T73X8/NkafFGTQ9/m3gH3Jlesjw3/Hx
b4d5xAy/4etTQ54d/ymGV40f5DZYyb8YeAf3Kv4FUBOTqsZUeBD+ISfW9LcN
Z4VvwC7wZ1bgYdowB8rUnpaZM8DHpwWPJid64j7OGTai4XP9r4XjcEHcp6c0
/P9iqtqL6rFu3XcmcoWzi38QcLvL6s75nuBs86PWTtL6rzTMS15V+5nM/30G
NYx14+P/FbUwMf5x7ar7fso9dVP8k/xb3FfgefU4/y8NTrO0cD4sy3x+kI8l
rf9Gbv+/WfWZvjG47vXxP4h7AGvODL7Bf531cV+gHvf+VyjH/4M9OFB43NWa
O7jpf278e/sflmMjEQ==
          "]], PolygonBox[CompressedData["
1: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
Y2nvpf+A/l7Kccp1qnH9kf8/imk/zQ==
          "]], 
         PolygonBox[{{6997, 6996, 7849, 4820, 7851}, {5618, 5617, 7452, 3890, 
          7453}, {6473, 4820, 7850, 7847, 7848}, {6615, 2195, 6617, 6125, 
          6126}, {6626, 2205, 5651, 6488, 6489}, {6126, 6125, 6455, 2155, 
          5615}, {6608, 2193, 7158, 7649, 7650}}]}]}, 
      {RGBColor[0.9125000000243711, 0.6512500000609279, 0.32875000007555055`],
        EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
          "]], 
         PolygonBox[CompressedData["
1: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
Cxpz7i1U0xtyrgmqDcJ8Yf9/Mj7b6gG/gB+Qs2317KNY70KoAdlTxFRCbLVJ
9+L69y76j0TOjXKwMnINUi0ShgvLvx2799cbYQv5Wp7020Q1VrVWPZJ6JWHg
7Vn34OrFe2Dvl/ANSfdu6tHUq61OulapJ1Nv9nFPvz3U8+5irbn8Kyp2jVKt
GpTHz/XI/532ndfd178ObL2SdC+vM7Qn6zeN3jYljBfAz4/MqwaqFg5G55qs
a7BqsTBZ9rSfh1N+U+htIR/mRe6h1EupB28hH+mM3xaqIRH8qKSx6xVy1BX/
j0Y+65Ifg69O2nf5e2XabzK9zVr4V478dMZvJdU01bYE/35T5JrTvdyYJGzS
negKX4p8S5FrzGTiyEW2JcwV9hbn/DbZzL9Ezpgl7NqYP1uvxd4b3cG22DVf
tV89pnrNy2Of1feJpy/8F2nXSvVM6p1053X3W5EXw38jtq56UvWm/Rh/kPAb
cVPabwK9DdQzq3dWjVet1x5oL4SBwkJhrLBWb0C9Bb9KPGOwNTo2rzfYHPiJ
KfeKwmxhtzBO91316BS5Lortm3pS9abCJGGTfOqPbEDsXlc1UrVSmC3sFias
i1zzVPtUg9rhvxu7t1RNvC52TVJt0pt7qd6ikXOtPdPe6Y7prmmPtFcfp91L
CTOEHVfHxj5hgLDgfMZvN/WoIfYZ0lnSG79n2j2leku9sfTW+i/YC1X3
          "]], 
         PolygonBox[{{6955, 6954, 7816, 4799, 7818}, {6137, 1692, 6138, 5938, 
          5939}, {5613, 929, 6791, 6792, 6793}, {6474, 2158, 7453, 7510, 
          7511}, {5939, 5938, 6595, 2189, 5637}}]}]}, 
      {RGBColor[0.9375000000189553, 0.7137500000473882, 0.40625000005876133`],
        EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtmHmQVNUVxp+z9EzDIIjT771+3Uy5RVFcQSQlichgwqayuBEZwBWVVFxA
ATWLEUHFCG4pEZcQU1GjpixBqxSJQnTQJKUpFVOlRFwijkYNbjGiIvl+850/
uu7t+84996zfOffuecYFU89vSJLk412SpFHjlKYk+Xtzkjyhxc5SkszX73bN
M437ar2/fq19k2Rpa5JUtOGxuudHVJLk5DxJHhHt1ZrfL7rrtP6yaA4tkqRL
fMemSbKhT5L8Wb/polumvVlbktyr9Wb9Nol2WKa5+JT1/WTxaW4xzxORUTKM
b/L/a2pJslH/DxDtu2XzGaszP9PaBNE8KpqHxbNLa+eK506ND+n3uc5YqfGd
Vuv4ouavaz5Je/YpPN9b4zPiNy303aPN+sDr6NS0e4lmh856S/RTm8zv7eCJ
vZ7T2jzJ3Cn6EzX/seQcPShJDuufJN+pJkkPNhPfE0q2OXu7RD+8zet/avA3
/k/W+m1l75mSmN/woCnLF12y0UrRDpB8CzSOli+P0rhD9C+IZm2Dz4D/kML7
kWuCbLhYvhgquS6TfK3is1Dj/oXl2U/jbP2fLPr1mg+R3OdpfYToV8mmU3XG
5Nz6oNdRWt8oursl67MaB+qMr2TvD0W7VHI+pL27NjmOBut3heRp1t7l4rNV
NLeWHXtTQj/kRPd1DbbxpMT2xn/8f0rx86jkny09ji6s7ySdeYe+z9T3p7Vv
jsZvW+2L/yie5mi+qsN+x4/PiOb+zOPh4nFMzbb8QmtbJM+bop+uvUnZfLDn
Gu1dpvmDsvN6nT+yzbrMrTm2L6qZdmecuz1zbB+qcbHstZvsvEjjOeI5u+w4
6yxMP1nyby3bRvBcofmINvt+RMQGc/TGpthzu367SeYvmxwLxAS5uUj6rpa8
NfG+KuZ3SYaBde87R3Iu0foaYi23f+C5OnIcPtiip1+STNTveORr9fy4Buc9
dOT4JM2PDZpL2zw/Rva5UvzfI8Zzrx0XNMcrVv42QOdqbJF8T2qtWeNt0n+n
eF4iGSeXjTvk4KDc85mSf6R43NDmuHxA+9Zovb3R+ckc2fAbNPiuj/j1DZuM
Ev/N+ranzvqi3f5pyIwrn5aMG12559M1jm2yfaYmtkdr8NnUar2Iz/1zYxGY
NCNz/l8gvcdUreNU8qvNumObLzPbbEzNcfrvVsfq7/t6Pls8c+25UzRbKl77
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
jNDQV2woXEOppf8HftEVOA==
          "]], PolygonBox[CompressedData["
1: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
M8O7EFgOngbPdzOsZ1TvOBS4CN6gnlD5EP2vZJsMyZJNZBvVKNUq5STlJtn4
v+BrVN8iVlPWR02GZCmmHXhttvXiY5T/kXUeHudyrMdUr6keUb3ibcAh8AbO
judYzVPtK4LneeRVwa8WvGsqH6s/0mxR7NksoJnkImf/9q330/o/4BWB5TrF
4JLAcpZy1yDsdRU8PTBcNgmDv+2bL9UCeZo9oDkWMh+WLx/wTVfF8G7svwCY
H7eef1SqZ1Hvkg6E9c1jxks9oHrBXaneYn7q7njfYrME/lXIWp+wWiAfWws+
LGa9TTU6LvXMh+XLTdjKJSxHKFfcQp9H0f8l33LpRvi9xzoB/JWzX6JzR+g9
z2ypHKxcXOmb7ymGv86yGUqzlGYgzUIjwIfHrcdXr7/Zt9qoHLcaXu0D6y3V
Q6iXUA+uXlz910DPYlixrJw2NGo9j3of8RAvvVlvlw/Jl9QDqRfSzHIk1fOr
95cO0qVTYL2qfEK+IRvIFupZ1bsqhyqXjsfGE5JWwyVLPfByz3oY9TLbgR1J
qxGqFfJ5+b5mHs0+yhHKFR8oHpE1GLgZs5lJs5NqWp5vMiRrA7RvAK8lLder
p3k9aT2nek/5vHxfM5hmMfm4fP1U1PoX0as3kgzJUs496llOVG5UTl3hWQwp
ltRjX/ftDXpLP3j2B4LAZq3HubOR80c8qxV6Qw7vyw7Ml+QT8o26wGqVZhDN
IuGU76rHVq+9KNUbzID3TNVi9t7JtH4rhO5XsszXXsceMc9yqnKrZgTNCh0S
5nvK+cr9aVG7Kx6LkzbTaLYpxWfrFOup/xc0o/7DsxqiWqIaXB6zN+ltylmL
PZvhNctrRuqn/y6ixkszfbfAdJbumik0W3QIrBdXTCu2ZTPZTv8h6L+EIVGL
JeVM5c5ZCZtV1QOt5u6Xces99R/DXs/+U9B/C5qpRsdsJtFsop5PvV+XwGYD
1dx9is+YzXqauV7UPMremoj1nOo99R+L/mtRTVNt656qR8rpyu3qGdQ7qGdU
76ieSL2RZlLNpr1T843qTz7r1lGbdfUfzynW8cByfQny23r2zfTt1LOrd2+V
sF5WPXdO1GZMzZrqoR7i/FaO1Tf9x/Bh0niIl2Y8zXqdEjZr6E2dE9Zjq9fW
f0r18hff4kP5+LJv/znovwf1AD+OWY+qXlUzxSdRiynFlv4T0H8D/wNDoq+G

          "]], 
         PolygonBox[{{7887, 4961, 7886, 6946, 6947}, {6458, 6457, 7506, 4299, 
          7502}, {6436, 6435, 6985, 2693, 6986}, {7507, 4299, 6467, 7493, 
          7494}, {6590, 4793, 7809, 6593, 6594}}]}]}, 
      {RGBColor[0.9625000000135395, 0.7762500000338488, 0.4837500000419725], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1mHmQVNUVxh/LtDNMg7J0v9evewZRENwSt5QYRUAHGA0OaAiMuCSxIqYq
FqilsbIobmhUxMSFiiXGxLiAxjGkElE0WiwDYhWU0SoBGRjcUGSTlOICWb4f
3/GPrnv6vnPPPfes371DLpt1wcyeSZLs65EkvTR2902SLfpNrUuSm0tJ0qGP
E7IkOat3knxYSJLn9P8qzS/X913lJJmtuZroI7R4Ymae72mcLZ6toseL/qiS
JH+sT5JM/J+Ifkz0do0r6kz3kuxK2ePHmh+cJ8kGzTdp/DJNkoclZ6vk3CKZ
i7X/nzTXUbDMY7TvCNFD9ZsmeaMkp6shSYbVkmS/5uaLPk/neklrB4p3o9bu
GJQkF2ruP+Ltoz3bD0mSp3t4vFC/u7VuddV0t/Zt1/9HJed0jaOCvlzrt2r8
wze05M7Vty80bpP8Ns19LflXZKaZe1+/8aIv0twe8f5Oa8fp/4eh61zpuFPj
bzXfovnFOs9DOuMz0u0GfVuks4/OfI6nND9R/w+PM5Sws9aeLfqvmj+nqP0L
Pvuk+DZZ42DxN4inS3rulX1btcenuXn3Bz/77C5Yt1z8vcXfX2tT6fCw+I+V
voNEPyR6iNaep2/bxN+m8U7NL9H6Zs0PFd966VkT/abkdIj/LY1zGq3/Lslf
Ln/PFf2Kxl9o7UbJOZM4kq0ekB3+qbVd+n6edHhBcleljrVl4p0s3u2cWXK+
Jb6LxDNe8ifp7G367dS6u8X3otY9rnW7xLsjzoWNPynYzsQN8UQsDZQeP9a6
LVp3V5zlsjjfvAbbF3s8p/+t+vajqu1/QDyZdHhLa9/QuVdrfF46TBLfBdp7
oXh/WXL84b+loqem9uH0kv18T8G+Pr23fYCeazS/PuKBPTti3yHEMXmX+hwb
ggd+aGzTqW/XEVe587Usuq/GRsV1Ub928X+uvRLNf97L+zwi37wuGZfoXE2a
nyEZzXWmyfORDY4f9CbmODs2+E3q3LhT45bMPMTaTMmb1Whft8oe9xadw0Nq
3uvwmnmIB+xydFOSXKP/ByTzlmbTvSXn66q/k8cbys6Nefr+w6r9saPimtEY
53qh4jzeLH2mS5+9oi/V+I/c9t0nGVMzx/mFGjslZ4rWdom+qmB6lsbnxX+G
+Mdqvlv/79b5R/W2z7DBp9rn5YjhK6XP1+J7UHqu1fdO8T8Rth1M7GvduVqz
RDLHip4t3W7MXIsO1qSSvw/Q3BR0b/BZbi85dn+g+cel93ua/0B2O0P0eMk5
UvQb2n+j5s8X37dz+/c+rWuKfDtUPLeVHCsXZK49u77Jcc1fo3GvdOgOOdSB
o2qupdRUdOkKfYbovFeI74Qm1z/qIDVyX8Xx+27mGrk1auOUzHVtTsn5tzPy
DtvvCR0elO1eHyC9mr0PvmSve3Ln++rUa4lNcum11LF7i3RbJttOa3BsM7YH
/XRu+gnxnCh6l9ZOKLs2Yn96G7ZkDedfVXIN2C19zy+aH/3zJteE/hXHAP5/
uqfrGvWtSozQI8XbIHqAfhNF9y+5BlALqFHkUFOd8+i70qNFcm5KbW/8h837
5ebvq/EU8YwUTx/Ra7Wms97/yVPsgA3J9TVBv1MzfWjIeC32LeZe25g7B9GJ
+fll69NPut9PHZes+zQ+WTBNzNb1U3nQr5/ozX39fzT9KHOuzdZ4tH4LZI/F
OktL5Mm4zLWnLtZeK3plwT2Uvt8ZefFOH9OsL8i+b2tuXNUYhH3Zs6vs+UPK
zkVsTx+l/n2h//fr27Dcdf4V+k7E586SZbH2gWb3EHoJ+YZ/j21wj9hd73F5
T/e33d/Q0utm6bdN5x2tvdu0/ic611+0x9WaGyv5LVXznI3O9ZZPn6IvERvk
5/Hin66xRTJO0b4nF51nYJPu8Du9dEusxa7EP73ntnrXWPDJuN7uL/T308v+
f770+bjRdZl6RN2FxibXaN/jRF8t3qVF5ypnnlx0j4SG97Tgx+bYm9xZHv7G
14XMdewYjacV3GexD/UVG2GfdrCi7HBp1ViN+VWix8juF0m/7yiHPld8PKT5
z1LrgG7YZZf2OrXBviSud0R9wM/UbXx9iWRO0PiBatS0wE93aM/LM2OXn4LT
MvOCs/pHHx+ufWfSd6XbHVXHGjHHeagd1JDB0uf6suvz9blzmFw+TOu2l1zb
wSkHNB7fYJuw/smI4SRiGhrcvCVsSP5tDHzSFviFukDdp/6cpj23Sadpss9r
yt3RufdoKzvWiduPxHtv2Tm0VvSZot8Rz+G5Md2/6o1JjogeUNb8yyVj2X9L
52fL1mm+vo8UPUa8g8RzbtU5Qq5gA3Sn92wLDAnOR8aMPo69suy4gHwtOS85
IzrdJZk9NR6f2o/4kP53Q+646FFxznMu7AY2IoYHlhy/xDK2xpaDw4Z8g6cS
+JTaAObZWzFO2FPxfQQdwdZgCuoauYZe3aHbYZkx086KcQDx+j/NjZAOj8nm
wzWOyYwHwAVnZ64v9Hx6DPPjAg8zT2xV+rr+UmfpX4uiFvWQHb4EH6XGJeCT
9WXbqi7qGP5Dr4W571T0n5t01mdy36PW6fvK8BG+Iv7pNcQ968lJ4oo7APv+
OvrpwsCKxMLv6+y/exp8F8NO4Na1MU+/oe+8CAZJHbuva1xSdPwQl+Q3dZAc
b808B2bhfJyLHk/OdYT9V5fNn8b9DL/iU76zPzznlLwOjEBOczbONaHk+Hqx
Yt1bwq/HRZ06NmrWpMDzjMwfrBv1ruPMH1PzGmpeW9Q3eDgX/Z4aCxaYGjbs
iPsiccW9BJqajizWc3bwDTkyuOLzIoczUUvZF2wAvm8NTEv8tUZvHRr3liMC
v9DzwRjgjXLRmIMewRr4mWsPLHJWZvvcWPIdaF2dexd2aQl7ris5z8CbYEHk
7s59lyNnnpJP/paa5p43LLDcTtGLctuB2sC9uTXscFLRdYoa9bOicT96/73i
PvRl1TGEn9AFjDcqejr2WBr+ujbmyHdimtiepz3/m7kmUBuoK+1x126S3O/r
/xmBl1rj3vSV+Ceyb2AN+iG9G3uMiXpKzC4J/4IHkEMNog9yX6AngkMfDYz6
59TY+jGNm0quadS2OcrZl4Q/1zb7jkpMPJv7LsA9gPvL8MCBh1bcw7EXeJue
Qe/4udZtSt1L39ZYJ77p4n8/9TsI7yEDc+M9+j5ruZeCW8Av7IMc9oKX7/iC
dwj6KbY6sWj9wcboAJ5gPXcP+tSrFfecydF3sNGY8CnvJsRprr2uLNrH+GZ1
3Km5W2+IezHryUlys7XknoGcU3XGlZq/V3ut0rg0dzwMKDl2wDHs2Vk2zTsB
tWdk1Hr8ujhqPmc5oWhMQU9jJO/mpM5dcNOawPngfe7Hc+OODLa8NmIMfxMn
2H1Raj8vTI13lkaeHqX/u6XHiNR5Qr7syX03vSr8S52+LmSCF1bGHu8Ocj19
IfyMn+iVb5Ysc3jq2rAk7hW8FxCrvIWQP02R+8yRx8Qw+TSn3jlMjLQ3GhtV
08Ahst/HVc+vl5zuJuMo8NSj+q1TrJZk/1vLxn8zan6j4S7MnbhXvFOQ12sj
tm+W/stSn3d56vO1R65+VfU9fH/VWARM8lHVdwP0v1j06NT5sqnst4RlUUs3
Rx7xHSxJHuKLBan9PUoyXo27BneOusCThbg39Ao9x5Xde3jLeS+zr3lXWyl9
bpdtV9SME/E1PkfH2X1sN/wGD/76ouq4pbeAF2bG+8OamrHCFo09K5bfLfmb
a67D3KcXhG0fbrZ/wDT4iP7A3ZAesSLuZdzPmD9YQ6X//rjTcbebkfk9jbe9
ZfE+SgzMq5n/yagxI6IPgfFvi3gAS2ITbNOcOtZ4G6A3LItYIo7WRa5tzvxe
wRtGKff8V/E2S47XQvfm6HHcO8A/1KDtmWXOkvyL452E95KT4p5CbWEdclhb
qRjvgfsOlJ2n5OvQwH/DNBaDZ0jVuJNe01F2rvMugY+Rd2XIfCRsTlzzJkt+
HJlbv5OjxnIn5wydJfcgagr1BHnIPfiWFe8s2GtTzVitq+a3JN6RPmvyGxx4
6bDc9Ya16HMreEh2mZNb7sjAMMyROz3jzroi8Ch3He7z2Ab9sNfEwPknhd2Q
fWLoNiVqN3u+G7XsPY2/Cn14I+RuAcaj/vwfEZ42Lw==
          "]], 
         PolygonBox[CompressedData["
1:eJwtmHl0VdUVxg+QhEDCzHv3vvvyHgSQUZeKWgJBIGGUIYxCEMIqtaCtLqZW
OyBQIHFgLCAuWCK6QGU0FNHWAUUkQWEVa6WVKSGCTGEsrCoBFPv7uu8f37r7
3L3PPvtMezjZv5g6Ykpt51xuLedS+J5s7tySes6dSXNuiO9c/6hzl9Kduwju
CZybH3NuHliVcG41OAddh47r4J+H7oP8I7TvREfHLOeGIlMARoJRYELcudL6
ziVTnbuC/t+jswX0EORXQH8bwQZQjdx5MAB9l9H9MjKfQY9gjOHg5+iaCNZ5
6MXWrqAYeiMohC4D7dFfH5052FOOjkzoyfATaWZDIeM0RWYgCzCVf82ga2Gz
AzXovgE+Ajs1DlgPejF2TzAIejD4JfSj4NfQT4AiMD5hNsrWN7G5jWwBMxj7
Sf49ARYgsxA0TTrXBKwHr4PR8B6OmQ7p+on+k5ztwb3YX4rMW6AfMv1BDWtU
DG8z+3cdOp8+eeAOeG3BDfp/wdq9yPqeZm8foP058p+Bhujrja58cB+y94Pp
Udu7TmA6/N/wbwYoRmdJOEfNtYh/E2SDbAGDoAeH/8Sbhsx08Bpz/gvre5Dx
fPSN5V8h6IZMLpjKHuzGvijrU4Tsc8zhCHvzW9rPQtfGnpvwt4Mj0OmMVRcc
BkfA88gcRX4NY3Rg/z5G5yLGutaUPYd/Fp1f13FuKf/K4Y1mvDfR/QZIRf4N
dBYy12imc4vZ9yrWaCHtKvh94Jcj35H+r9H/LP27eWbPZfAVvB9BSbrtwTvw
D0XNVslItjpmd2OP+sDLYe5dQHv+dwDtPdMlec31NrwfwT+w/UvtC+gMPgG7
QRwE4F3w16TtmfZOe669L0ZHV+zPATNZ7/9oX1ibDdhwNWY2yBbH/PIYuyn2
r6L9T/ge8jXwD6SaD5AveAWZYcgeAX9Atj9j9EvYHdBd+CN9uiB7iT5tkP0v
vBkZtv57dLbRtzrd1uQw9Db6lIK/I3dA94c1LuB+vo+NCyN253T3PqfvPrBB
dwj8i3//Bn7U9qIUexrR96L2rAH7iv5N2FIL2TPchUXwa0Pf4Zlt2iPtVWud
QaZfQbsN9CH+FWLvI7RTkC9A/w/QuTp/mg9YDT2HMzYc2V7wj8Nfjc5y6FNx
40vHOeie2NgDdELXnWCS5piwO627fRodp0AWdALEZQP6qtExP2I+Qr6iVOcL
/Un4f2NtDiPTAvoSY4zLsDNeLXlk7qpnNveE3441axv6CPmK1qxPvxQbow10
Y2Q2om8/7SbQg5AZmDQbZesx9K3hvO9n/1bwfzn/loFZYDYojdpa685spv9w
9qAv+rejcx727MW+l7F/bF18DHQUmS8Zazj/XvXsjOmsnaU9lL4vJu1+aryV
0ItYk4VgB2O9Axohvy/dzqDO4vLAYoXusO7ycPoMA08j+ztwAp1bwv0/CZ2H
DZPZu4W034tZjFCsOIrOHswlI7DYoDOvs9/Xt7u/mfnkQ99mjKms9xRwA11/
ol0KL485D4Dfjz7joDOZ793o+jiws3w//mQj6901arJag1a0Z0dMd3f+9ab/
Mtqf0i5Afgf8PNrTsf9J2u/TzsHemlSb00Pw9nt2d7+j/z7oZ/i3if65tHuh
rzHtfGcxbw9j76bdqo752Gr4i7DvKfo3pL0U/tPgYIrFYMXii6zRNvgp/Avg
LUva3uhMHEPXHmx6NtN0lHvmo//vq/lXBm+7Z754APre9uwMqb/2uAJ9QWBn
ZSny+5CvALEGtsdHs8xny3fIh8xLmg9RW+d9J7Ydz7K+OtOV0K0Cu8u6k7qb
LyGzUvkB/SaCOcw5o67d+dnQV5A/yfmZQTuQ7wYXsf8CGAm/DfNpDZ7SmQIp
UbNlIvqbobejb7FDMUexR33U95LWAF2LwC3om2ASvB6++U7FXMXea5zRq+Bx
dP8KPIf8FfiXdZ6RPRqxta7N+mUyXiPmWML4l2Qv63krbmexGTI3oas8O+uL
wQnoA/RfCe8663MLfa34dyHVYoJiwzidWXRdRX489AH5YsVrbJkOrof65EO/
9+zO6u5+Ix8YMRtki85MHPqDiNlSj/Zx9F1DVyHrXZ92y6jlBMoNFPMV+xVj
FWu1B6/D3xC1s6IcaQm8F9D5YJrlPMp9boIC6D6aD3Q7ZNYx/5fo/wl7uQTM
SbMzvhi6JfxX4B+C/zPkE4H5zgrabeH95Jsv0PxuQ19tbmchgQ27lF/y7zz8
PyP/IX0vxOwuKMeNKTb4Njet8RfMvQv/eqVYjhXR3Q/MVsXUD6CbIDPYmUwZ
srv4V5Vuc2iPPQ+ib2ia3dnu0A/7dpaWMf5OZF9l/LWgjLUrBxsDu7uKeYp9
ilGKVVqz5z3LKReEPlu+e3zc5qactwi6hWe+QzlvUrGGf+1ANbLnE+Zz5Hu0
plsYq1OW5d7ycX2j5tPk2zQHzUUxWLFYPqMx9Fl0jcmwmKjYqBxSueRaUKb4
hY5PUy1mKXZdDGxvKpVD6G56dpaVMyh3UIxSrNKeZmeZj5SvVI3xA/wrMctt
dEcS0k3/aWnms+W7u2FD17jdOd095UTKjc7Bn498LLDcVDEsN2o5pnIV+dxa
Om9hfqb4n4+etwKLzfLRW1VPZJku5VijkT2IPV+BU4x1GmQHlisox+mJvrVh
PqUzVhyxmkq1lWoc1TrLIxZL5LNm+ZYDKheUT5Jvmg09K2lz0tyyoVuGOWE8
zBGVK8oHyhdGoJuHNYZqjYfQmZ9iMWwuY+UqFwcOXq0wp1ZufS+6O4c1mGox
5SzKXZTTKLdRDpsT5nDK5ZSjKVdTzqbcTT5FvuVRxhuSYjnMAvla8Fi65TDK
ZTSmxlbOq9x3QMRqGcVsxW7VEKolNEfNtRFoGNYA6WEOrFx4JmM9A3rTZ259
y0FqWOv76Ns5YWugtVDNqNqxI3QnsBqsAlWM+03EahzVOg3DsZSD7AhrQNWC
Vb7lNvJxO5H/PmqxVznVzIjtufZeOYlykzzfYr1i9KyI5SjKVVQzqnZsEFgt
Jh+wxjMbZIuPTCxhNZJqJdXQqqVV06m2U46pXFMxRLGkArpS6xRYbqOcQrnF
+rB23QK2ggrPfPUKxXPPfIp8i3Iu5V5bQ9kG9G0YsRpdtbpqoL20K2iPqmt3
bLdnNbNqZ/2rhL7Ls9ilGFaJ/AMJ22vteXbMYrJis3yafFsNfQanWw2hWkJv
CnpbUI2sWvlrz2yVzA1k30NmcT07wzrLilHy5drzPnGroVVL303fe2KWUyu3
1p3T3dMZ0VkZg0whmIu+D8kv8hQfoR/3LXYr5jzmWwxRLFGOcizL7oTuhu6g
7mKjmOUGyhE6YPdA+mxj7U+jYzD0IN9o2XyiucUsxS7lCJPhNQsstipGNIXO
jtv6yaaSpMUAxQLlCGN8e3PQ24PeKPRWIZ8p36k3kPXM76PAan3dOd29Yb7l
2qrBVYuP9S3XUA5QqNrLt7ce2Szb9WaitxPV4FMilvMr99cbgN4C9sasllY+
lxazGKlYqRxqlG8+Xr5ebzCbPPOZ8p2KCWegJ/iWe/Rn/CLfcg7lHvKZ8p3a
E+2N3pj01vStZ7WZ4sl3np1xnXXVkKolleMo1xnJGAn059K3W1gzq3beFb4H
6AxWJayGkz3y6W29sAaPmQ/MDWOgYqFqItVGJYGdDe1JLGZvWCPDGli1cPeI
ja0cK9szn9IxrMFUi6nGU603Qrli3N5s9HajN5P+YY6pXFMxWLFYbyB6C1GM
nBaxmle1r+akuelM62zrzUZvN/8DVhTZqw==
          "]], 
         PolygonBox[{{6421, 4814, 7836, 7832, 7833}, {6404, 2138, 6405, 6117, 
          6118}, {6788, 2369, 6787, 5602, 5603}, {7449, 7448, 5598, 2145, 
          7450}, {6431, 2151, 6986, 7474, 7475}, {6118, 6117, 6597, 2191, 
          6596}, {6995, 6994, 7835, 4814, 7837}}]}]}, 
      {RGBColor[0.9875000000081238, 0.8387500000203094, 0.5612500000251837], 
       EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFmXuUltV1xl+G+T5mvgsg8H63951RKmAvabTKzDAYuQnkos1qiqhJ28QL
dgVFmqw2qzFRVEQhLK25qTHNzaAmWmw0xjRNa2IEZUWtyp0igshFCSOkQRho
jOnzm2ez+sfMOd95z9lnn733efbljL/i7/5ycVuSJD/Vv+FqJ5eSZKCSJOeo
va6VJLM6kuRII0m+2Z0kD2psXpYkN9eT5B7NvzZNkvX6u0cL064kaWsmyaWa
P0ztvLL7X9O30/Xt4+qXNN6uv69rbKvW/anGF2i8pbHV6m8dnSSr1J5SS5IT
mvO69lml7/fp74Pa7wcl/6Z/TzFJblN/jObNFE8r1P+AaN7e7f6PRfN3+v2C
vk8UnUrTPGzX2FU631L1B3TetcHPfs25Y7j3mjUsSYrtSfKA+ndqbIfmPKSx
OVq7OffaH2rsP3LPma3x3QXJp8PrLh6RJA93eM0pkuHz6o9We1j7/pf6F2jf
lzrcX62zPFfwnKlau1Xn6lV7v8Z7JId+9ac1PLZWc2Zq7Sp9261509W/W2uf
1fgDbW7XRn+bvq9Rv0/rtqQ+4z7JaX2nx5jD/i8GP41qktSr5uGodPe2/g7o
20uZbaKqdmOn+XlQa2+QvCarf454PFVn+2/N7VY7Tb8v1PgyfU9bpt+nsXsK
PjPn3Sw609vdHyx67QX6faP4fERj39bae6XHKzSeNi3b+SOs696aeTxNsn9L
9J9Vf0Dt/Rqfo3l3aLxf59iiPaYl7k+pes9z2t2y7yad6Zj2/pDmHC+6jxxo
B2O8JH1t0vxfhEzmqF8puEU2feov177v6vvvpKOL4BMZqR0pGherP0v9R8Xf
qeL9KZ1vlua9qm9zGtbh66HHz6L3Ttvb9Zq/V7ZzTHOujf3Y68v6u1D9r4v/
i7T/eZ3e+3Oav0fzj2v+nqLpzhDNDzRM/6bU9rQ3xl/UHpeM8B5rtXadaHy6
Zdtb0Wlb29mwHf9Uax9vWdfo/AnJZIPmTBads9ttT9jSY0XrCPtfUfRa7L+g
3/NG+M6y9kcVr5mss5QL1vsrmv8FzpiY39s7LZM/b9jeXx+XJJerf1TfLmtY
vvR/LJq9VeuoR/N2amyl+lPUn1C1vT4Yc3ri975x1vOJmulC/7j6u8dZNheI
/ocaltWH1c5mP43v0vfFGnu06LO8qfswXzaxV22n/vbrHB1qzxN+rROOzVDb
IRsbUTLOjNK3PvXXx30CXydKPtuL7sNzb8lzzhhmG+mN/lS1/dGfpfUvS39n
SBd/KN7uFS/fV3+vZHKD1vSovVoyXqi/Jfp9l/6WF20fK1LL7BNatzj1Wmig
n8VxroMV7ws/z4jueO21Rnfq7XbbKPY5t9O0+bYxcHOD2uuKngN+/qLu+7qj
YX/Cmb8i+v2pz71J53hP07KaLll9NjWuTdb8laJxVcn2M07zDmB70lEPWFa0
LSOn3pM0Gx6f0rCdQgf7AQt7A+tGaq+zRiXJn3SZDjTQ95U6y+Wi8ynuj/jc
VvK5DlUs96+2WRfIvz90xG/kQ7sz+p2if6boTxT98xseX6IznVsyHXS3TXLs
VP8djX9yhG3jM2222R0n6ZRsN0O+KXO/kNnndMY4slkZet1dt4/dpXZuapnh
r2bKDjaUfKewsfVhb4ytj/HR4rNNshil9u6wFezk/g7bOd9ulNx/PVJ7d9lf
TAvcrnf5vJPUfk5zDmtOh/oHwLuSceDWzDi7lJgB/6H+NakxlvEe7TVf8/9F
v/9IZ1hddH9OmzEKH48NgXmPFI178L4xzjKp6vH3a/xrRc8H0zaXTB8M35n5
XLvUDhR8Ts54Y9n7sdfDwrertMe/6hyn1z3vtcwxTr/mXpIEtpXNzwZ9G6P+
z1PbMbxMUf/lzPb4n6LzsmhMLXot+mc+tjTYMD5uqztGQI/oDDxeEfzPz42t
Z4nO0oi1iLn2Bua8oXZzFtigfcfKVrdqjwWJ9UacxF2+NLVs/lZrPyx+Dovm
If39jdY+ojl/ndneWQsWIEvGWfPeLsd7E+SH2yuWKfIc2zDWj2lYHsiF3x/J
HLPd2e3Yoy/ihAWdli2+eWTqGI9YDx+AL2Ae/u1oxBv8EXsgO2wJOwJzwLNM
v5sF+8QpBfti7IZx7u+3a/bZS3PLF3lur3tNq2D5DFb8m/6rZfOALzsSMQ80
v6D1YzS+Uu1Oje0qOwbIavZnm0TzrpppXqpzr4345pTU+AdWgoH4Z2JgfDS0
j8S5VkuWedF8Ezfw/bS448SmYDHxETS5a2tqjvNGi/5+9K+/Yfh98Tdc869T
O6/gfq/a3zTMw80178e+2CF+80ic8Zrc9+/c1HaxWmPvi9+MLxM/CyrmB8w5
C9sIuR9oOQa4OPcZ0A3yP9hy3HVp7jOwHgwBP+AbrKPdF30wkD72Nklr7lO/
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
D6zRX1s=
          "]], PolygonBox[CompressedData["
1:eJw1mHmUVNURxh+D0wwzwzbM6+7p190wKqLGuLHJog4754AmgoCYCDKCJwoa
NS6gMCCICIIkGkGNcQPXiKBxiUlwYwAXwGEbkE2RTRbFBQXUaH5fvpc/6nTV
q7p1q+9S9dWtrP79wGsLgiC4uUEQHMfv/kwQrG8cBMWlQfBoMgjaZIPgsZIg
6I/yXOTiKAhKEkGwB7kx/NZUEMxEfq4oCFqhH4jcBPmDwiC4LQyCN6Eyxncp
DoIW2M/OB8GKsiCY1zAI1qDbz7dh6KuYcyfyesYX4ns2+nXwR5m/nFhGEVsS
/UzkMuTu+L8Tvkk6CJ5nvkn4SDL/WVA7xq9E3wr9XCiP/UjmX4juALQP/Xn6
r/Ct+b912A7QN+T7sc9hPxGf5zPfVvyXEUsC/8sif5NuF2NSxLeEMX8u8H9c
i74GeSd8L+ZLIZfibzLyz/gI0X2Hv12s9V34OAL/XdJrNYP//wqx7GTMYOwf
wr6euZ5IObbl0Hz43RVBcAq6v2kP4A9A81n7Rcw3grH12ExPeE+2wE/G/178
7YFGE8tR5tzZwDbH4C/CphT+bMZ30l7x7UXkxcjDkH/A53WMXc2cx+C/xH4u
+oPEfAJ8CTF3Zy1riaEUvhPfjqBbDG1g7p/xcSe6eYz5Ct0vsdmH3AV5GvIg
4h8IjcwFQTX0DPorWIsa9KvQVzLnpcQyXP6xewGfoxt7T7W3r2E/C/lT7PsR
+6laH6grvrrlvKZa2y3oq9A3ZcygRj5jWXw1Qf8U+9cZuSn8aua7D7k9c34I
3x1fVdAAfF0AtWZ8F2w/IJ5KnS3GfAR/BP8z+K/T+dai1GuqtR3B2OHQ9Yy9
AZqS9d16Gx/XMf99fLsXqoEmQW2gM5r5/5Ywrj02y+Hnsp5L4YfybQh0GXbD
oS7M2Zb97ES8zYn3Rugm4m+EfBP8OYz5UOvP+Fr4BN+K0DWGNmW9J9qbB6Cv
4U9BfzK0H98HoCL+Xw/GDmENH9beMXcP5nscn/vhH+LbYHTV0NPwBdzvBtBP
jP0Z2l7OWUe3Ef9dWP/6pM/GDMY3hO9H/HcVWX4df3/JeK6m2A8inmf49jS0
AV/10FRi20Dsx7GGt2XtQ2Pl4zXsFvOtT6lzmHLZixnf1Vac38XwL2EzBdtr
8f8W/uczPsS+JXQ3Y1ujbwW1Y6720JPoexf6zD2XcYyaT/+hL7G/yreZ6Lbj
r6fuDj764quebwcyXhOtzULsq0LnHOUe2byE7SFiuD/hO6W71R0fWxP2Kd+j
mW8UNIZYxkKfYnOM//IAtAP+dfydiX0lNBY5GXntlONC5WpoL/wO7nA1801N
eS3mcUamwKcZX4D+Ku7EXuaJsD+EfCHxZuHHpOz7eeS6pHOacltvKA0/Gn1W
euShoc+0zvbHzDeC+R7lLHxIvn8K/V/hb0tatx0annUOUC5QDv4R3T1xfdB/
3IR8lDmuwXYl8svE9y5j7mHt6pD3oNsYOlcqZ36G3JjxRdBH0GaoJf53FDoH
/S8X6WwS3yDsp8OPzHpt3sDmKvSPxPFWY1/OfJMY3yHhHKNcszJ07lOOU67r
RIyrsV0l+4z/k/7boaZBcCu6GmzaJ1wTVBs2IM8h3iex/xz/r0CzSx2/cv8o
xu8q8R5kkG9hvvnKR8gdOBuLsV8EreIsrIaaoW/PeVpLfIsYe4w5+geOKcy4
RqpWKifdlXWNVq0ewn5vx1+v0LE8BX2B37noB+DrXsa8CT+RMYWM7Yg8Lmsb
2WpNy/gvU7DpiP04/uO7yM0zzo3vo78V381Zz2bxnmhvbmT8H6BpxH5nzphA
2KArVAa/Ht06aDe6PVBj/C3F3yb8dyPeicjnMt/FfPsJuavGQ19j+w00GLoY
6gv1Uy4lvrNZu/eIJ6e1IIYqqAO6jtAh1Vz89UH/BfyOyGdD92sd8a8gluVQ
AmoE7cLH6U2cExbguw8xnI//hezRJOz7I1ex/ruIdwD8B6GxzGFsvkZOVvhs
nUmOP435/4V+aCPX2O+Z+zRi+wXUFjpZZzh0LVBNSGJfXGFZNfFE5H+G3kvh
iY90VlUzlKPR9YTOUc5FN53/uI1c3Al5QYG/dU57T7W3DdnjW+E/q3BuF6ao
4P9N0Z4UO+eOZa4WOoOMXYA+g35y6Nq7A+qLriZ0LtwG9UD+Avod8V0NLUf3
m8i5ImLOz9HdwXxToQeJ9SFoQuhavVn4S/UaWpjwmdTZnM74TYx/kP9wLbbP
pMyvYH2fFZ6InGtGEV8Ov91Yw65QO6g9lKmwTjan54wJhQ2FOZ5l/zsyX4fj
fOfGhd5z7X1v/PaJfMZ01q7C19XQIugFqC82/aB34N+G5sLPq3ANUS0J+ZaE
ehNjQcKYTNhsd+h4hIGFhYWBhIV0BnQW5EO+RsJXQ0vg/w2Nhb8GasOYE6Gb
4W+Bfgu/sNhrprVrgO0lRb4zujvfpFzrhUFbw18J9S3wmMsYW4Z9C6gtMZyc
M6YUttSea+9bKgcW+czr7K9WLhK+Ye4boHuhP0FbhJ1D50TlRmEQYZGJ2E5Q
TNgM03pg8yyxjGaOKuaakHRvsYTzcbmwM9/WoFsLXY1tM9VU4k1zBzdnfcZ1
1k9SzNCv4X8V54DBcQ5QLhCGE5a7JnTtexVqS/z9tHfQAHQXQOOwvSXnmqva
qzulu6U7qrvaC9ueed8x3bXeaZ/1ztz5XvAbY/ytmr49MqYTtlPOU+5TDVct
FyYUNrwSfnTOmE7YTphO2E6YWNi4m7Bshf+T/tt5aWNVrcF44umaNrbSndbd
rsg5tyjHfBJ6D7WXzfDRXP9fMUB3822WMEXWtbwDezAG/lK+Dct5Ts29Neu1
FubdAl8fOVcLc26IvGfaO/3nLapl0CzoZWFvaH3oXKp63pDvTSNj6zaM74zu
jJzPvu5AFO+B9kIxKJbmYYx9i1wL3md9xyeMQbvDt0kZG6inORF+c7xfOlN9
GPsYvh6FluFrec49nHo59Tjb0saAwoLqCV7Hvj5rbCyM+HdhQfT7Cl3jVOtU
I1QrVANUC8ZnnTvVM6p3fI2z8WreZ1xnfSnfKhs6Z9XCX86c3yaMmYWdSyP3
XsJowmprImN59SB1kXsK9RbfQdWMPUv7mzNGFVZVDVMtq4Q/HuqsnJ9zD6Re
SBhZWFk1fAL8c0ljO2HeOcgj0r4Limlk2j2Xeq8+xDdHvXTS2EM9gHqB65PO
tZ2Qb8i4hquWq8ar1qvHUa9TCX983phd2F05WLl4DVSXd85S7nof/r28c4hy
SS380rxznHLdJPiavGu8av12fG3LGQMJCynnKfepZ1Hvopyo3PgmurcqXFNU
W8bGZ19vGHrLeJwzcFLWOVW5VWdEZ0U5TLlMGERYpBf2C0rcs6p3Vc1S7VIP
XsvezMp4rbTHy1i7Jxm7ADqTsWdVuOdW7/0leHASvm5PGgv0wN/4jDGTsJPO
9Hvwe+P+XxhXWFc1VbV1J3R76Dt7d9wz3vf/M53zndPdE0YXVheGvILxA4nl
orxz2rgYMwo7qqdSbzUAXf+8c5By0SVZ9y56QxmadQ1WLVZPMpH5cxmvnXre
Vhmvsdb6Y8Z+ApWk/TahN5nStN9k9DZTA5Xgry7024/we8C4b5PGZuoR1Sse
RH6r0DWyF+tRnvTbib4V6yxH7m3Vw9bqviTdW6kHUi+0L+naoR5QveBjyFWF
frO6I+sYFIveZFLo3kn5bUNvPG8Lz2b8FqWctJf/0xmbR0rcA6gXSGaM9fTt
eHwdzPhtRm9keitrEbrXVo0sUz8QGfuoxl6C7qtyY2thzkzonlO9p964nkga
Mws76w1Nb2mqkaqVwkjCSkeSfttST/FJuXtQ9aLqkY5EeiTz2qqnWJH1HdVd
1Rk+FXkJ8tGEe4TdjN9f7re1DDZvMHYM/tYVu+aq9oYxXlVPpF7uhLyxk2T1
Sj/kjEUPI69Evj1eP8mr8n4D0FtAXXz3v4c/lvOd193/R8ZnW5h5B7G05FtZ
fId0lw6nfVfUM6l3+paxh3POEbUxpmsXYy5hr3NC1xb9h3XEX5zx25TeUPSW
0jbl9dEZXBsak4XxnJpbd1Z3VzVetV5nWmdbPUP3OKcpt0VQNu+aqtp6Cjan
xj2LehfdOd09YUJhQ2EMYQ1hGGEZvWHOyBrjt40xpLDkstC9uDCzsLPeYPQW
ozuqu6o3Ob3NqSblU44himuOas+5afdKetN6OOWaodqhPZ/J2Dsi13ph+mmR
38j0VqY3m4K4Z1bvfDa6dpH3UHupPZ6W9x5L1h5PZm2Lcu511YN+xvq+nHGv
IQwtLK2apNqkmqXaNSTrXlU92WDV2pxzo96sBhPvf5jzx8h7rL0WxhbWVs5X
7p+TN5bQG8EfFTM+GmR9pnS2hkU+y3qTuDT+D/ovqiGqJdoj7ZXm0Fwbkz4L
8qe3hwvT7t30pnmB+plM3GsS7/Sk3wD1Fqg5NffHKeMbYewC9bVZvyUo5zyO
/cEK90p6Y2mOv/8CS3dKKw==
          "]], 
         PolygonBox[{{5596, 5595, 7446, 3887, 7447}, {6439, 6438, 7487, 4295, 
          7485}, {6982, 6981, 7828, 4811, 7830}, {6413, 4811, 7829, 7825, 
          7826}, {6582, 2184, 6584, 6109, 6110}, {7467, 3888, 7450, 6417, 
          6418}, {7605, 7604, 7613, 4311, 7579}, {7488, 4295, 6444, 7480, 
          7481}, {5592, 922, 6596, 6598, 6599}, {6110, 6109, 6399, 2132, 
          5583}}]}]}, 
      {RGBColor[1., 0.9100000000086652, 0.6750000000162474], EdgeForm[None], 
       GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNnXecVcXZx+/dC2Z12evdey+7LLtgRaSrICgKmteusYCCirH3riAWEATE
bqzR2GtMNHZjj8YCYo29t9hiATWWRPP6avL+vvv77Yf8cT7znLlzZubMmXnK
73lm7kp7HT7xsIZCoVBdtlAoKb2xUigMW75QmNhYKJzWUij8Qfc7L1covNm/
UDhL98sqfXGZQuElXWuq/Ng+hcJIpe/WC4UVi4XCK8pfS/cPVguFSXruhx6F
wnZNhcIOos9TA6eojssq/u0F1XWm7v/Tr1BYoOfeVt5nenZqr0LhSF0nK292
z0Jhlq5RqntgH5c7tHehMKVWKMzRs9vomT1En9rifu4u+uQW13+S0rPU1kTR
D1Sdfqf+vLyM34F+rlA0zbs8qPJnqPwslfuT6Fmijxf9dM3p4+r/2n387seo
DyeqzByV2U6/7aYy81vcxlZ63wlKz1T5ucqbWnE/d645/Up96K/fXhV9oQZ/
M5XfWvR85W0helvRp4r+Zc11f6vyu4qe1+L7kzr87HylX7Wpfyr7d6UHqU/n
qb45yn+6uVB4Stcc/faC0uebXX+ryrxTLhT+1ak+6BtfqXr+rvyvVfcM9fNq
3R+l8R5b9LcYrTLXKO8blflWZU6t+P4F9eda+qb86WrvMZ5T+qP6/wfRF6kf
wxtd39cqs6Pa3Vh5+6qfU1TuRsZD6T9V54UV18Vz5FPuPuUfrvyZul9N9VzF
uKme/+vltiqiN1Cdh6mfF+hdTtI3ma/r97o/o2T6fdEnNvk38g/p7fGep3bX
Vh11/TZQZff6WaGwjspsofd9Sb/VlL+Oyn6jvj7H2Cgds4znHmPynMpUVOZZ
pb00H/6tMk1KF+q+p/J7KD27p8t0lNwGdfYtue+Uof835J1532drnndPlvz9
+I4Hqw+ldo2T3v9l0XdoPG6v+P5x5e+i9HXlX6F19IPGaxWl36sfWyr/O6V3
qeydFZdbRu/fqr6vqusZrYVHVX6e2ttMv23R6Dk0SOt+PdGni/5Hi7/JeN0/
oftxjR7X81TfuRXfD1X5zZWeW/K8OEXXGN1fp34s1PM1pb3UrrpSWE3XsqI1
lIUBBfOY7VX2Qj27SP15mLVEe8ua95DPnKM+1sLqy3sunlIyT7qh4nIv6n5r
pb9W+nvl/a7i+22bPA7wnCdV/79U/3Wqv6Bxm6z85zVuD7R4zHnnW/TczRX/
9p2e2SrP/pa5WfH9c73dr3fbzEfGZqzgGafrWkf3T9adnqb8h7Tm/qzrWNHD
9O7rq/nhui5R3y7WNUJ524n3HaLy66tfbaJ3F/222jlYv62pa6zKD1G6HmOm
6zHVt1DX8cwlzZkZ6v8C2tK7XKw+zOa+xd+e7ztOdR6gOgeq/kdaPEaM8xM1
r63H9Oxo1f+J6t6c+qv+nXF9ueb6/iL6SM3na1RuXNE8fWPVeU7W2YaNXmtP
6903aDTfY01fUPH94OU9j5g/8ONfVTx2Vym9srJ0Dm6WubRAffhOff2t2h6i
ZzdJW/Tj56LPKvldL6r4nrU7Juv3mz7uz9Mawz+3uP88v02T26B+5M+lFb9D
Vf3uq+dWL5hnsSbHK+/7Fn97+jBX/PIpXb9V/vFKn9Q1U9cTod9V/nSli3Rd
KfoIpY/pOrzsdf2XmufYwuS/pjLzSn6eZ7vruhoepfwHRD9XdPpg6J1C75h2
Htf1lvJnl3wPfXTy6cs+uh7RtbeuGSW3TbsHKn1U16WiR+jdhutaRfTeutZY
zuOwWDx2TdHnNjglf1X93sEc0piM0JzaS/fDlD+w4DqGpZ7Nmn1/jp6t6b0v
1f3uav/oktt9peh0Qeg7ld6l62nRByWfPo7Q85fp2fdU/+91/ztdozOmvMvl
Kv+LPLuVrm103a3rfOXvWzLdQ3U8yhpkLiu/rPvtlFYyzxdWzYOY5y/VPE8q
mkcf6dnBmu/7a870U97Den5bze1tdD2sck80O+9V1bUhc17Xncr/QfVOUJ6q
LbSqrYmh5/F+Zc+j7wvug6ZXYYYY8t+0lnaT/BqrOtbVdYvqOUH53yh/X+Wv
rDFfqA6P7uc5SD3v6fkD1P69ov8i+g6lf9TVoDb3LPkemnFhfM9TmS1SZnPm
Rsn5jPnJJddLnYzZPRm3CWXX/2vl36/0T7qWUf4OZd9foPyJSu8rLy17X/pz
YMllKM98ZR5fqPxJqYc6tk1bfLdHq15n8F30MXSxVXRdqPG/QNdKResk/9C3
OVz0fVrbLSr7cJv1TvTPf7Zaf/xHZPR+Kre6rqGiO5QOVqrhLPyka8WCv8tw
1oDSlXStrb6O0tWGvNL8n7Ksed2+0g3207WEedjX7V+idP+f+Tdk91ENpinD
HFih4O+7r77di/p2x+rbDS2a99P24KJ5OeWWL1o2IiO3Uv9/sZzbvU3PvqNn
3+3n+m+InvC/LdYDkGXwroEWaV1yFrnaFjmLnEfeI/cZSw1Z4Z26dd51osOe
vKzH+pK81x7K76N0EGOmqyR6ZaV6rFAoepxq1FU0n4BvTuvpsdpI6Qk9rUvB
h+usf13f8c76Vluqv5MLliFb5h37qJElmudtSpv0EvfpvQbofau676dnWjpc
dquU36vT/KgJ/UvXOqLH6sUmq1NbiP5CdY3pbV41QQOxesllOpVWVf+Dqn+I
6t9Ec2rz5awbbyR60+UsT1mLZ6vPK+v57VXnZsr/vIftmrWiOx0kejw8UfSW
4gMbiL5Az3QWvbal8hQG6X51XU08Bw/VVS+apw3X1cK8VDpEV5nvr3SArkbR
KypdQVcDulKD+cj/MtZK23X9KHrD5dzuGiqzo97rOb3Xfv2cNz75/YvuI99v
Fd5JV0/l9aOvuv7DeujwfOtQOlwfeZiua2q2B1Zo9JisJPnb0WgZgu6K/g1v
/KGXafTYyc2+h2b8Hu7hNQtfY0xnti595ndFj9fCHtZ/LoLHi36y6G+L7EHe
7Kq+/JTyPPe/oT/r5TLIJspxz1xs6mWafHQyyn+g8kv6uq3b1Zfz1NZfRT+u
/DNFvyv6MeyFZt9Dn6r0NF0/MlZ1/3ZGvtHpot9RW9cq3V586xql65T9zI95
9hRdp4s+SenJuhaIXifzg7lB3js9nH+1xqWsfp7UabnDGH3dw/KBuYSc6lt3
vdR5YIPrZ54U6Fcv61rYd9iU6BJndHotXtvqNbFyo9fF2SozVOm/VeZglflG
8/4QpdWsUfjVJiqzabNl955F37MWGI8hPfyOyHnKwHdIN0t5ZD40v2/R7LXB
d8Y2KujZTRtcfpM829Tp/Fb1s2ez5xDzh2c3b/bc5buTz7dcu+wxZdz+o/t/
97KOzZh+H16Kzcu7ogsV+aa9rCsyjxhX5g9yFXrDom3xwY0eO9Z630avd3Rs
UvSlP4j+sId1sN+K/qCHZRy6/eIe1mGeEf1m0fobddPeX0Uvt4znP2N4hcq8
38My98Vm83T0yXd0HVe0znlg0e/Oumir+31Py1yaH3rV8An4/G5F8/dVI8MK
4dfbF03Dqy/VuF2ia9Wy+ckhqud1+Ht4ALx9UupBRlzLvNa1hq6VwjOQIzsU
LQ8of6V+uwIdSVf/8Cqe3TVlkDe7Fy2HBkQn+iFzrHf4WTXf7IfIxOOwk3Sd
VLRuWY2MWSO8E3k0pWjZg9zZV/mHN5sfwtN49s2CdYq7o1eMjDxnqg0MP0bO
9gkfZXx21I8vaS3s1Gnd5P7oJytGV2BcJ+m3F1VmstLJeS/GBP3up7wLfHu2
+vCW6J/r+XObzWdIzwt9kMr8qtn9OKHZ5U8R/Ztm80F44KC678+OjLgQnqU6
1yubF8Gj1hI9D54r+pdF6ze8476hh4jep2hZjt4zouz2HklbF6b+XVKGsaW+
ubpO1f3hane0rr6iD2hwPvMAOcI8fFvlNyu7Lvp8VrPf60zkV933Z+bdz+G3
omUi9LvIo7p/I/9g5Z/fbDk4vuxn/506zw7962aXOQs+XPc99CF69uJmy9Mt
mefN1nvH1Tyeu2ntD607/5zUc4GugspsXPY9NL9fnDLo9ej8M0tei1uEjyFb
4Wnjg9/BN7Dh0N/QvwZGL2Is0Z+eEWM6XRP+/ySXN2ywjf2x8u9tsd09pNG4
JnY3tv2A5Z1HnY+pz6uLnovdJCEwHUy20fjXwEbrLaWsOdbaqssbIzuhZMzs
sIqfB3c8suK+tkXXmt1qDAw8FTyiUYvpUf0+UvnHiV5butxc0YvBAJe1rf+s
XnCc+v2U3mlOX78X7zegw/gtOC42N8+CAzyo8usrf6HyNxf9o+hbRf9G9L9F
P9rf2MawvPu4BuMdfxO9sOR3PbFk3AOdmX6OXMb9XCM8km8CnwRHAVtBj/+q
xXgjuONqyzulnoGiRzba1rlRz45psD1ynWjAb2ycmaL3F32y6Omi92OuF81j
4DXzRLdEjn9YsHzoG73op/ASeAXyB5mLXf59eB58buXljbcyr1hPrKtTwxer
4YELwNCZFyXz73r0twP0DfdHN9ZvGzUYm/20YF0AnQDd4ErRhzbY1gMvXivv
+2WLsVPmx/0txrEZi0Vg2cHT5qvuEyu+f1yNrqH0pJLx4OOw9xuN4ZKCIXfh
4hWXY92wDlk7rFHWM2sTfgC/gw+sondfJWPyTYvxY7A8sPMTKu7royW/H3N4
fHQIdIB6u7FNMM41240rgi8uo99/pusplf+i2ffQr3c6f5kOy+LGZst6cIjh
PcwfjmtyPjKadNmUgQ9cGh6yTtGYErYk9hrfh7k4PDKWvm2oNi5QnzfRQnyk
ahp8qX9kILbVa6rv1WZjmL/nnXrYLr5Z9Jr0T/SMJveBfs3V1dBs+/bzZtPo
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
FJmMrMIHMjl6EH7dOXXLRvw56GAHh4cgC9Dt0OtWTH/o26jkMyeRp09FF0FX
/Ck+39HB41mn4Kbgp9hcYGLMM+YY+D94Klg3ei7+Q+z6T7VYH5DsbtQA3VBz
PutqsfIfUv6SVtuYNyl/cckptmZ3XD80ujR6CTYFus2DNevV7DNARkyo2pY8
gv15VfuQL1F7r+p+frv5/8Sqx3Wm6O2r3oeHDwRc6RjVM1v5O1TtB4bvTara
niVW/1aVubdkO4mYfez3c3paXiIriXPbp8GxbuwFQ4Yhv5CxyBLu4c3Ih3PD
A9CrGXPi08CywdjBs6HB/1nTxFdjB7A2wXfY20Bf6AM8646afSkHRlYhs5if
v6u5LfYHfN3k/YO0h52FvQu/gp9PrvrbniZ6x6r3I14i+pdV+9vvqnmvA7wV
3w3tLSmZ/+9a9R4KdCCwP3A8bBIwa7BN9GEwAfR5xhEamcu+yCnZG0ne0ynz
ier7tOp9GKTc42snlo86wTlnZi8T35p5iq6NnszeUOrcOnU+mbawCcHiwUbA
0PB3sT9riubGM+wda7cc3KbqtfsoPri6fXHEnROj3Iu4J5XZqeq4A+TalKrX
7G/Yb1f1HlBk7s5V7/1BfndmDmCXEWeNnQ7PZZ3gXyO2k3EDmyX2Ep8H+CQx
lpRhHRGfyPfF7sYexveDz4h4Tmj8GsgDnsWvwVphzbB22BvLvlz24tK/oS2O
3cBWOqCyVOYfWLEOQMzRgclH/rOuhkSHOqZi3WmuxuXtunnMW6HxHVMP48gY
YisdnRg2Yknw8+Ff43tPTXwaNun8xCDR1rSKdTy+7+GJZ2PMGW/sPeLapuVZ
9sTOqSzV4+ZWrJ8QWzQ3+egOl1esn2AvvJV+Xp69YOSzt/KP2V/J/oo7QhMr
cVf2UaJfo2fv2Og4uyPSN+KhZicmipipmYmboj/wDub7SYmzQl/Ctp2V8sT3
HVNZqp/Cm7r3zs5IPXMTK8V7EQuDHxo9YWv2BbEPrt1600mpH9/pHnXve6XN
kypLdSvW+eiUwc+KP/SZ+Fuh8beynxOfK3s6TwuNrc1eR8afPXxnZx8fMUu0
RfwP+yDPTBl8t3umD2dn3x/6J3uzL8v+O3TDs5PP3umzKkt1RtYPa4f9c7vH
3sfuh8be774nrvv8iveloluSt2vysc3Zs4qOye/nh0bG7hX/Mrrn+XkWHIZ9
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
B/CbE4tK2/jLmadd/+OiPvw/vP8Haw==
          "]], PolygonBox[CompressedData["
1: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
PeKti7xbagfXLv4/g5gPww==
          "]]}]}, 
      {RGBColor[1., 0.95, 0.75], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxN3XeYbEXxN/CdOxdm7y67Z2ZnyTmLBEUExUBGkhgwIJLDJcMl5yBRMgKS
oxmRjIhk0Z++JlBRQRBJggEEFUEyvPXZqnmuf5yna/p09+nTp0PVt8IsvsOs
zfaeNjQ0dOro0FA70sv6Q0OXxvVgZ2jotkg/Mjk0dGFraGiXSNeL64JW5q1f
+TePJb1vVL416pwadT7RzjIbxHVnO/NOqfwrxpM+Kere3s8ynnPXZNZR/vvR
5oZBHxD0dUGvHfReQd8S5dYJ+vyoe8dk0rdH/kd7Q0Nzxb1DZ0TdSNedzLLL
RvqOuG5u5zuhL4n0xrF8l33a2ca61Q567Wp/tJ9tHjYj09FqfzzSJq4jgv5Y
L+nDg9446BlBHxx0J9LhuN45fWjoyyNDQyd7ZifLjlf5VqTT9CnKHDyWv9FH
xr1u0Fu2M+3FtWLkTxTtvn6MBP2pKHPyWNLLT890tOgZ1Qf9kfp9SNBnRvmx
oFeYnv1Abx7tnDuWz/OsseqnMseN5ft4lz0m87tcFOOzcaSbxHV31L0o0iau
G4I+Kcr2g/5iP68JdCtT+U9FmUsm8zdavfG4Tmwl3a123O9V3bkiHY3rhKCP
6edv9PH9rKPu3JFOTua8Mr/mLvrrkS4S11+izaPHss2PBX3sWJb/eNBHjGUf
Nmln22Nx/TnoCybzN/rYfuZ7/g8m8/29+wn97LO+XBTX0tZFpL+OdLdaLw/H
792DfqifebtX/uD3duM5H62xf7Sz/C5VRju/imvXKiddPRbsH6LMzkE/GOnM
yaSPiPJ39fO73BnpfZN5T/6g3OejjUf6+S19xysjXSquv8Zzr5rMNWO9qHtv
XDtVHWm3nrtjtflC0Y+2c4wXrXHev+b3BkGvF+tiKOh9I+/hiaGhP8b1nchf
LvKvCHrDWB/vCPryoD8S9LJBXxb02kEvE/SlQX8o6PcE/e2gd4p9apWgrwp6
ZtBLB31J0MtHmZWDvjLoHSP/jUjfjGufGfnst4JeN567RXzrhaI/v5+e6cJF
j43k71WizHujne9E+Z2jnQUib8G4jo82PttL+rig5+/nvXdH3X3Hsv1lp+f9
BarMItW+tleNuldHmV2izUOHcyzsabtG/rlBzxvpDnGdHXQv0omi542681WZ
hYNeIOjzgl406Mmgzwl6/qD3DvoCZSJdIq6L9Cfy5wn6y0EvGPTORc8d6U5V
tx/pzO7Q0JJN1It+PRV5f47riKA3jfzFIn/uoD8R7/Hxfn6XzSN/8chfIPIP
iPoXR/klI90y8peI/IUjf7/qw+KRLlVllou6b0/kfNhvxuxx3CXGYe5IJ+M6
OvI+0cv9zl5nz0MfNSPv9YPeNsr3oq0lgv5A0DuMJf2g/TPo6UEvF/RikS5u
fY5kPe2vND3vz1FlDpyRv639OStfXrv25/1r7rxd31ff0ebU53vZfhPtf6SX
dZTfsJdtaUcb8g+YkW3LP2jG7HPC/vPpKD9f0MfMyPYWqza3jXdZNOgH4rmf
6+V8MpeUm8faa2e9efuz89Dvmp7vaky/MCPnoLrjUXezXuYbS2XVP3ZGPs+z
3h9t9oNeOug1zM+xpP8QbW7lW/Zz7KVL9md/hyVr/Bet/uvzspEu08/2tunl
b7Q89ORI1tPWRD1zmXrWWZEuFPvJlyL9cj/3lnN8z0iXiOu77dzr7HMHtZOP
wE/gHw6Otu5wFg5n3h2Vf3Ok34vr1nbukerbwy+O8jcF/Uqc0W93stye1f7d
VaY/nL89a9DufkG3h5Pn2LudfAQaL/G1SL/ueUF/M9JvxfV3bY4nb4LHOHAk
++OZ6t1S7fxgPHmiC4tHuq2edVCUv7Wfz3w26nw76J0if+XJfIb2r470mrie
Cfq8yJ8R1/XOvsgbCfqoSLeLb3FWzOHG3myM43o78i8aybrPR9tvRHp65K8Z
dadFetZk7p/uecbMoF8K+rqgdw36gKh7fT/z9hvJd38i6Kc62bft29nfq7xn
0BeO5Ji4/97JvCf/xn5+i2edIyNZ3rv6Nu7t1s5netb3gz6z+v9EO8fw1hr/
lSbzGxj/86Odi4P+dSf5QDzgVs7Z+H1F0Fu3M/1KXH8LevnJ/I12pqvrfHyw
6qu770jyyvLujev8oD/XzrmJNj+lFxR9T6Q/jOueoA8dSXrB+I7PR/pcXL/v
Z9vadP7qq2dv0c5x9C7btZO/uKj6s89Itn9vlb2wyh8ykvPWnMXzXlptnhf5
5wb9k05e1tVn2pmeU7R1d7ZvULT19+l2rsWzKn/WSJb5UbRxwUiOm7H0+6wq
b71qFz9wbpQ50zqM+/NH/hlBP93O3+hPtjM9vWj1zq26xvC8GtuvjmeZk1tZ
/sxqZ+9o/7R+yh/zTKa8cWPJHacVfV4n54p5Yq6j1wn6zaDPmMz5fnWUubD4
z4snk0/Fo+INL/wf/vCC4ke/28lyAz72ouJl5zN/4pq3+NxLipd1XVz854VV
3rMWiPQrk8nPL2MtTCb/L72q+LFli16m2r08rs0i//7ow7eKf5NeWfRSRS8Z
1w862b5vJ/1q0b/r5DO0f3n12XjinS8rfhptTI3hZfX7xvpevqXvob0Fq03p
QkUbf3Xx476jteFbfnMy93HrYr56H99UW/MVrf9L17t8z7qr515afUPrn9/O
0Ls6+Q76/0y0c9xk8nLkFbzuc+3ke/cO+o/1nPmr/BX1zdDGyzh+vp191NfF
4vpG0fr8mnkV9KuRHjqWc2FjskCkJ/pOQf+rn/Q/Iz11Mss/btw6ua9e2857
6qxqb+8kre4VQZ8T9JPtTL9c9ByT+fsj7dyPz47rOnJKJ3+jtX1Gtf9stH/8
ZI5Hu8rby8+dzLPBuTBcv/Hqc9azPOerncxXxlhq50/2vU7+Rv8n2v3iZPJg
59e6ICv9vJPjZawGY0fGvKqT5ZQhL5DNFo7rp/a3yVzvX6v8v9RcMrcWqHLu
fda+F+fWhXjgXo79+TX+/7U3BP3BoF8O+pTJzNPHk+J6LPKP7eRv9IwaB2Nw
Wie/k2+kDXWvaec3lo8XOr6T9+S/2M82jcFi1Z+lYx9apPjwJYPevXj1+d2P
65jgjfeI/MP6mfpeBwS9+0h+r3OizFpRZlf7dNDbB71b0OcHvW+T5a4Lerlu
8gJ79/O+/hzQyXpXmxtRZuMov0v83rWfqXn1haD3HCl+gAwQ7WyEn4/8o3pJ
45XwT/ilIyPvs1Fmg/h9eNAbBr1O0J+OMkf0Mn/t0ZQJDmmnjOD+M8G/zRNn
z2VBPx/5N0TZ93WzXWeFM8PZ+jSetpv81zXFf+BbnP/y8AB/jjLj3bz3YNDX
Nomp/DXo90b+JUH/nswY+ecU1uL+1L4dfbh0JNf+nMNZlnz9RJR/q0ke5I9B
39fk2eicxyvYc5yfU+do0H+KMo82ec+5pKz56fxxttk3HooydzX5G1+jbfzY
Y5H/fJPvfItvGn0+zLPwYE1+j28H3eomv7O2MYxrmaDXjXS9uJ6M8dwg0g3j
eidZo5+//zw95S/5y5UMuGY/595yVW73dt7foMqs0c8yS42kfOgZO7dz7q4V
9A5BbxTpxnE9NT1lPt/VN/1k0b73+tU3bdw0lnWU14Z3eGJ6yuTyp3C2yvcc
63edoi8N+isxDnuNZHvafQd5P9bNtBiTvzrfosy/m+Qr8cv4Zjw8Xs86wO9d
Qxbr5r3vBN3rJk+KD52q106eUR6+EV9pvPGc34jyTzTJ0+EX8BPOl8sj/4Ym
f38t6N80yXN9J9b91ZM5h4e6+e1+3kqZd/0aE3yc9pyteDT17Icn9vNdnft4
KLzU1Lkcde9p8vfPgl436NODntnP1H57c+R/qpv848ygv04Gr2/h2cZt30in
d3P+rF3zyLdYbTTH2/ddr8bYvNo/yk9287dv4tuo8/7RfA9zY83RxGDgse/q
5zP/SNYbTXnUOUvGJF/CUsia5FW/zT1z1Lz9YJQ/IWTNPaL8afF97x3P3/AS
+Aos5d39xCY8Y/NI5+/mvS2C3rTJNj8wmnPZ3P6YdRr3Phy/d4v0/6LMIkGv
MJqYB15rlX5iHwvF71X7ef9P8azV+7lHL2a+9fP+I5H/nqi7+EjyANaKdWW9
rNZPvEb9lUYTj8GD7RJ5322y/ga1Rq3ND4/mGjD/D44yK8S7rDCSa0tqvWxi
Dvfy96xIX2zyWQd6Zjfbeu9orult2rl+3X9c/0cTQ4GffAb+3E1ZftXRlO/h
JPtG+S+N5Llm/R7Wyz360Eg/0M1x27Sf6d9KZierk81/FeneTdZ/52jiTM7Z
pUZTjncm3htltokyZ8bvg6PuWSPJYx8Z9NkjybfcZF10cz8l95i/5KBfOF+i
7hnxe2vnUZM4wBGdzIMrHtfPfR3PsEc/n+Ps/m2UP6PJZ/wm6KOafDY8QRuw
iCVGE5/An8AY4BfuwTxgLscW3gLHgREtPpo4CAwEhiEPjgEnURau8qko+2qT
uMr7RhN3gcPAW+StVBggrNC8vXss91D753L44WjzoaCXibpzj6QMsm2UPaDJ
MYd/SGEgW0b+R5rsx/baa7L+O/spw6N3hOlF/nxBv2M08UL84Yr9xBPlr9DP
9OFoc/exlHXI9ebCJ2s/d54712Gw+Ax8yVnxHfbvJ40/Gfxeq51zwtw6JfK+
FOt4P+8fe+Bb/Syj/F74jbg+1M68/aruPv2sa06+3s/faG2hP2xvjDYPDPoY
sl7Qs4I+upX3Z1UZc8Gc+EIn+SD80BdhBf189jXVh72LPm08+3NUK8vtVX17
Rz+/je+yez/bNMd26uf+a+89NMrvEvRq7UzxVXiqf/fzN/qgfvZ57aC/3Mnf
6AEfpg1z2Zy+MugnYg98PK7Dgzc5Jfq2W+Qf2cr30Y/V25nuVrTn7Fx9+Guk
O1rPUf4f/eyrfu7dSfo91f8dix6cJe5b7x/t557+Uj+f4X1PGs/2D2+lXoNO
46PaHMsxMj5PTmS/9Zke5O64Noprr5jrr0wk7z1zLOmlp2f6atF7RP7rQS+D
jvIvTaTsI++Nyn+z6Flxf6uxLLPU9Ez/W/TLRWvj+rHE0ukUFoo5fP5E7t17
Fr1gL9vyDHP+kdJBwODX6GVb2lmnl89Wlh7hkSrjOcrsOSPXq3GwZl+r9/Le
a/XyN5ru4OnCz12w9EPbmffUxOw89F3tHMsnS5dxx1jOhzvaqeN4ssb58Rpz
+Y9G+ljpQbzHI6XvOCzK/Wki9bDafrr0F/QOfwv6yLi/UezBi9pjh7Pv+rz3
jKyn3dva2TZae3QujxU96MeBUeZ7Y1lH+dZkznN7Ph2ZuW2vpis7tujl+7kH
2X/sT37bo+StWHuT9ffO2h/tbWjjvWLVVc/5s1I/zyB724qVf8BYtql9Z72z
fKDvWKXoD0X6wf7sufGhoj9Q+Y9F3ZWrLh7g7LG8J39QDj+AX8A3LFo8g/ad
++/vZz5eQvr+KoNfwtPgZ/TDM/AkeABnv3Pf+Y/GK0g3Lhpf87Fap9Ys2jnt
t/V7QMlc9nBnun3cWUMWu3UsyzjT8TD4BjyENjatNvVL/4zrYWM5tvg6/Ne7
K/8LY9lnY7JSlVfmw9UmPsT4Gc8lql+b1nM/1c8zhZz4vhqTRyP/tLH8jcZD
vbeffBS+GH98XSflIvLqNzqJXaPJrTDso4v+cuxXhwR9bCv1zvTNm0b+xVHn
0KDXC3r6ZNJkbXua9vHel42XjrqVemn1n6o5TMe7UdAXjSdN12y/PrbytXdI
tX/JeO6TdND0wCdU+97hhNo/tX1ytc8O4KTq5wAL0N+zin8anBsH15patMYO
7oF3xYMuUjzAcrVGyO5keLpU39i3wSsqq44xxreuVvSJYznmeOD3Vhm0b+Wb
4QE2LMzMHOsEfUQ/ebnB99iwnXmHx7V+jclhNc6XdfKefPwZXvCyqndU1b1g
POnjY9zOG892jmtlvSPrWXtFn59qcl7BafEteAx8xJtF/wfPW/q4x83boF+P
Om80SU/pHyL/Xc6MyLsfbxv0qU3qptV9Idr4VvxecCK/25l0nhPJTzkXjgn6
X1HmpbiOm0gd38vkkonU8T0W9L61Tz4e9H61bzsXvhD085F3WpPPNQ7/7Ga+
8+LVoE+YSH3gv7v5rFmlQ9T+f7upW/TcF4N+Ak5Q58gFkd8P+sQmx2Ei6PON
c/zuTSSP+Wu8rf5E3lxkhKCPqT6MBH1c0Ds0SS8Z5bu9rHsu/QB8zTkS97dt
si6e+qLInzfo8yLvErznRK6P85vMN0fOxqvS+Y6mLtt4Xm4NNdnPZSP/i032
3/w3tsp/JeivkmuDXj7KXB70/BMpf/yul8+6uEndt/xvR/lfBj0c9JaR/1y0
c3Sd6U/CAOrsWzTo1SdSdnwqyr8fbxB5V8Gmgp7H+MW12kTKVfN2M58+a6Fu
lqeD2iHojwa9XpSZo5fl/91JnfuqQf+TnU83aTL0k3CqoEe7qQfXh1ejzFzd
zKdPu9I5FfSckbdzXJv6FtHnTjfz6b9gITARMke7lzRs5O1455UnUr6HQ6Kf
7iRvYxz+EfX2iuvjQa9fdU+ZSLmFjH560MO9lMXJ5NHc0IzKJ9vP2ct8cjo7
qxPxDd2cS2dOpHzF9skcfiXyX+9mGTZKW1WZ0UhHyGsTKV+RjU4Nenovdf0n
Bf0WHCXokydSdn00fu9TPNhmlT8U6dvdLM824M2gvziRdkxssdBvdPO7aJ9s
/Ol632n2yHi5zkTKeVs1OWfw2ntaGxMpf2wW9T8d13zDKad+qmi2DVvEtdBw
2nB8vpt2Duwdtqx8dhGfiWv+4bSp2JGdxHDifXC/xYbzLISpsp1gQ7F5lYeV
fiLoeYfT3mPx6M+d0Z8f2v+Cflc88+4m82EP23VzLmoTZrNv4TYwLXjU3zqZ
516/lc/6XDd1jvq4efXB99L+3VF+66C3xSNG/uXwhqLJ7eT3btDr2Y+Kxk9u
EFevbEU2iWtyOG1GNi16TRiD+TKcvOfG3dRL4k0/2k3bErzvGkGPBb1Ik3WU
V2/Nytfmx7qJK3880k/WWBn/rYJeZDi/z5b1Xcwnc+W38V5rR7puXE3hwesU
7VlrdRMn1vdNqz+7NLnvkRGviPFbMuifRN7/a5Km5yRrLBf0b+jDYT8TebY/
AocL+o+R90iTNF3uVyN/2aAfiLzHmqwLZzKHlwn6Z1HmwSbL0Oe+3OSZRfd7
SS/Ppm82ee7YG78T+edFfhP0QU2eHeNBn+7sbXLPx0s8GfQ7g14lnnVwk+XJ
8ff1cs7vAVdtsu7SUWZW0GMTifGM95I+1R4Ll5pIvbFx1aaxpe9Y0ft20tZo
4aBvCvqOKL/YROp4r2syHyb3QC/H6juRd1nQiwb9vSbPwUWCvjnKP9zLZ/0i
8v/Qy3ZuD/qWJsvT897YZPkVo81fBb100O8O+p9N9gdm9kLQK00kHmZvQf8p
6v418pefSN3913tJ/yXy/hHXChOpy360l/SzTdpcaf//Rf79TX6vlaPNJaLP
H5hIXHPZoD84kbYc5ulHJnKu/jTqtoL+cJPnDp0H3YbzxG9nijx0Z1rOH/oG
uob1os60icRZ6R/kv91KnYL+taL8Gk22T663byu/T9CbRP70oBcbTR3L09X+
Gt61l/oQKT0KvYh56tnm6sbOjV6uqecj/WdcV4xk3nO93Bucs9o/MMpvGM9q
T6QOap1I/9bLNaWP+kr3QcdC1/Jm9H/tKHN9L+1o6LnwGd9r5ZpDW3f4CHzG
FC/RS90Y/ZZ69El0SXRcdF03tvL5yunD+tZiL/cZPCC+EB8opfuhm6FTolua
Y1rqZx6r8fTN9dscMN6P1Jgr+2SVd26jnd1S9+intO0Z7WmpX3qi6C/1sp9w
IGPz917uQ89E+mwv935z3Fy3Xui46LpebWX6QNFSv+m3rCG/7Tnq0T/RPcFr
4bb/buUegP+zD7iv3Out1JXRmb3cSp4KDZfCG8NVB5iquv9p5f3fVXnvMke0
+/HiZ9XB08Jff1PltSH/pVbya+riD7WnDFnHGjcf6NLoO6yT51q5L+k/fPHn
vcSIYcHOanye8xrmjP5nK3VuD9V7ae/hmmPuKwcjtBaNtfVoX1HGPuY599VY
2QvReAB49r3V/nd7qXfBC+DLvtdL3kxKn+dst/703xrcaCLrLFhr37vB3sxH
OLizdM6JfDc4Nz3Pz+rdjavxPbR4b2sDrkkPfG6tEXsmvRSdFJ2R8+mHrdRh
2ct+0sozxHnjHKGzorv6v1bq2pwld7Uy76uVL/Wbjso5oww5iO7Ls37Qyjz1
yeh0Zd+oZ9Gz0bf9spU6uKuNaSvPSX37Ue2xytOH0fVdWn2w77pnH/acy+pZ
9ni0fR5/rn16O/qxr9T7fqLJ8TJW+JH1gl5rNHkc38D442U2CXrd0eQR7Gv2
NPzdhkGvM5p8wboTqePCU2wwkTptfIp9xB6CR7Cv2dO8n31+GWdgXB8K+kNR
/v1BrxX0GqNpC4Dvom/7dJPf+4jiJfSfju9D3dwH7YGr4nMmUl/U6eWZ8nqU
XwnvNJH2fu/p5t5t3/Z8/XDW0HleU2Ou7LW9LE9/RO82fyv1e/R887TSJpeu
kG7PfeXomNzfr8pI/aYTZLerHH0bvSKeEj/JdhvusGHhD+wJ2A/Y58xhezJ7
B3YPt7VSziOvkvXYM+Bdvt9KHdeB1U/3lYeL4FOUwavIu6Dakac+HQWbiPOr
HfoL9gr4a/bjdBvwMHbl7sE08FOwgCcKE6BXphumW0b/tJW6ePIYfa68b1a+
OXhVzXP89berjO9g/OmdyYvKkBnhcewlYK30/PT9d7RSntM+mY7dOuxvgPXR
ycH39J29hTaU9Sx8PVt45WB32ruo2tTGlH5xJL8/GxF6cfeVg6Xh0zeq/uDD
Nyq+3TdjB8L2m6xn/pl7ZENy4QtDyd/IJwO+O8q+i4w1nDgqfH2slWXxH/uU
7LlmLzFzGMv6vbT3JneRA8mAZENy4UtDyd+oS95cveTqgexGbhsbmi33klu3
aLJ9fksD3o7MSJ5UlzxOVpSP3/Mc8ircgyzrPcm55FB1QvSdeg88PX5e22tU
++v2EgNi+g3jgYnDecim9ATkU3L1crUW8J14YjgcLEddeI79YNFaO1KyOjl9
t+jI2r30vVLW8/gsGDNjN8dQ4kn0ATAl2A8dA/wHtgHfh2+Q9fUZ7qG9tapN
qd9wfpiT33AnuJf24WaHNvlc78h/QP/x88bemMMZ6ITH4nplKPFh9gcwbbpH
Osi3htKfwD24sfvoViuxemXmK2yfLhPOz7/BPRg+3ab814cy3a5o84RumN6W
fnjrmjNsH2ZW+/TvsP7prfRvQMPaPXOH6tuXJvIdBrbodK70rPSu29Z7sYn2
XJiqvG0qH+Zl/sA64HDwOBjgyU1+J9+IXoCd10gr5XMy/AB35dvRaWW/5q5+
koXmqX66rzx53xiTu8hcyipDnoJ/TdbY8tlAw76Mcb/GgfxDVoEZv6NwN2M7
8CeBv23Qy/7POZRj06vxYQsO+4P7LVM4oHEYyIH9+nZNfRdnBN8O5wX7CPOm
20qZ1jqiM2mXvSF8fp+xpNctPSm9EV0p+3P0E4Uhw+sPKXy9XXXnLJtE+PD+
Y0nTH7HxY99Hn6vs9LKBZOfYLpqvFX8qvlRsP9mA8nuiF6VDZS930FjaALKB
HNiJ7t9OGz/6UbpRv9mN3h91dxrL536w9LPK0NF+bixtLdnDwLbZFx5fmDYM
HcZN//xy9Zkemy0pvbaULpwefK+xtFGmZ2TLCeumT2eTqC5dtry3Kn//ouHi
7Exfq3aUfaXK7zKWtoxsNth4zlk2pdJO0fo3Z43zjLKL1H/29UP1jaT6Ri8/
+H7HVP9frXfZq57rXR+ocZ7SU7fzW8xq58X/7detnGvWnvm25VjaxdILs6FF
00ezP2XPSsetTXbzbOatUWvbuvGbLf3mY5k+X88drzL94nn4KuE3pDBZeCwe
kR8aPsG8hufCcge4Kl7uc9WuNj9cvmfObrwjXzXnMt6RDxveA/6rHbwW3Nmz
8FH08nT25iB9+7/qHdkLo9kSvK+dPnvfbeV7P1PP5efHB4//HfsYtLLy+fc9
WHPaGL23nWPwQNW1FvgbPlT3jNfNrdST71lr1ncfKbvfZ6ufxpyt64u1FqTs
Xtkq6O+/q8/e59l6lvXwYpXZpcp41+3Hsi6bnG3G0oeQvQ0/whfqvfaptWB9
6Bc9EB0QXRAavzEfHU3wIf8pGQF+jzfrdzP/xU7K5OT8f9lXu0mT35Wdt+ou
U3ztM4XbK+e7LwD3jeu/nUzZoeETPFddPB59Qbeb/Ia0V30gq6BfiPy2Z1b7
2m6qP/rYrz7QFTT1XDz3ZPXffbQ9dv4m+6Q/8zTZ5t87qTPoFM3eSD9frj4v
UDSekq3XSPAJy0e6YlzTgl6wSRmDvDDcTfsxvJZ8ZVrDiUvRk8CO2EAp81y0
OdLNOv+A1TT5+x+ly9AnvDHbSHoLWLT+tqufUmOOF/Iu+o8f1t5Ita9NOpIB
xjJa3046Vz0Lv7tCvYvxn6gxXzjqftD7DKdOArYIV6QjoB+IalP4HeyV7kAe
GgYLZ4eJH1o+3epHM1M6D/lwcpijNuns6KhgsvSA9Ij0cHRw9FvofUuXR4+H
LaUTmFn8Np9LNB0B3YpnRPGpstqE8dKf0Y3hN5SnH4I/OMPpA53jUmXozuij
JmpO4u/0CX9Cfwkjhg/TR9L/0f3BB2F5+EY6LToz/CS9kfwDi5/3Gz9MR6gu
HnL1bo6zeWXMybSjpff0jAFP69l4S/I2/SXe9WBtx7XCcMrP9D146f2NWVzL
DScerc/45z26qcdadjixyD2LJvPTueKNyd50sfjz3SLdJa6lhnMuL1/z+R3d
lNt9VDLSckVv1Mvv5Btd2CSfZGyNM5r/Jh2XOXFwzY1NeulTT0+rrjnw8V7O
M3Ps1ibLmD/uewbfz4eaLKeM+xtXGWuXzat9hv6KfHJc2b6Sx8hi2lb3iPJH
Vt66/2QvdWkxBFOp33xmv93kc70XPRq5aK6hbE+77GnpzbRrLWzay7loHuJX
8dbsW/gx7F68pXSPXtq6/K5JGt/LfnXv4gPZw+5SvC5/CPlkIqlybFjZ6+5a
vDH/5l3/h2d2j50DnSH7TDIjvaK+HVq6SH0Vn+FnTdL6rCy7STaTbIF3q/bJ
DWQJsgOdJBo/r++7V//ZF29R40z/aYzIpMb4s/VdyPuwH3jLwt3E1u2N9Lp0
zHgJ+L781zqZt3Dlq0dP8GYn93N6Zfg/PcJi3ZS7F2iyDGxnoSZxn4HvAn+H
znDmr2xNDacdGJmcPC7vXZVvz16ozgtYOf+L4chfrZtYFdraXb32SfVWrnZW
6SYm5Vn6vmi9iz4uXu++ZKRLx/VWJ+cVu1j2r2xjP1VzjJ7WXKSrpYMlz5Pf
6XLVIbP/vcm5at6qt1nVdc6waXYeqYd2/jj/9yweQN6nqwz9Fr2UZ8Gzlqq+
Gc+la8z1WT7ej531rJqr7i9ZZbyj7/FGJzGdxYv2HnSK+gmfW6K+FxtkeDes
mx0UPoXNGFnMWmG3I56GuBt8oMTYEGuDf584DjcE/eehjHPClhG/J96DGCU3
VIwKsSrEsthqPMspw+ZReTEE3Ben47VW2qmxXWOrxr9cPv847fHT+E0rbcTY
JbMTo3ugR+Wns0P059rIfzH6s+141lGejRCbITZa61XfyFPijYg/wm+RjRK7
Lu87ZcM4lraC4qnoM39n77PNeL4vXeT0uM6MMbw0rk6T9kJfxwc0aSPEZkb+
JZ20FZkTnhj0lzpZly3xRZ3MZ4t1Dj6jSZtbOv12XCdF3uE2vyb5ZHgs+rBO
6nmnxXVCJ/vlnb3v3eP5G63v11b/T+5km2yPT+xkXfbD36J7a9I27OigW03a
67IxQB/VSZ2svp3dSd0P/TNZc5eST/9RMhp/+1tbKUv5TZ5is73bWNo7TcY3
2jnoB4fy/s5Vhu+8uuQ7dlK7V/mdpmXdV6P8vONZ59aSx2eNpXxNLt+naP6r
4qGwZ5OKp/BKK23/2AiyvWQDyyaYfMr/Uf7dUWa58fyNFv9DXBsy9WLj2f6L
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
9zB8fALfATyE32LyiRsAOxCnhP8pnEUsk8cLp8Zj0gPiM8UdfLL02fh3mAke
XiyTJwrLFr9kyv+0cG159vZu+UrZn/E1+oW3Wa32Ybi2+BhsCsXJfLHkxME3
frz4Z/Ew4GL4abiysTNu9A7GwjhcUGPLJ/z5kjGVE4uJ7aP4nCfX2PJHgqOz
xVJ/5ZIFViv9KD2ps96ZoY/OlFVLXnPvPcXf0gH4X7vNyg8FjyuP3DGt+F5x
DOiFrSfrWtwXfrtrlt7FeeysFNPl0dLHsPvi6zfQtUvp7NgfsEOgSxIvkw/z
QNcrpXtih8Z/f4XSr9Oz29vxUDAi+yf+HjZFLiBj0HeTuZYoWeBdhUPBo+jy
xNHky/+Osm8wl+naphX/pl3xNfke6h/bM76EA5sGKT3m4iWDrFTYmT7Sr71Z
ujL8IQwRluhMZOv7y7onzs1jpQfyf5v4vx1Ln0SvBDcgV1tzny0+yxjjtYbL
Tw+ftkzJ+CsXzghvJEeIhcO32m+xmLZukt8Vf1QchgHWKcUPiOkoroi+Ti/e
21iLW0ZmvqLshel88dti3fErHOiGpfSS8FC4KDxnpPhtdcTA40Pu3pnVBzFF
xKTi4yHuqP8x+EyTY0Ze8b35RIsBJfab+E7GDx5tDI3z+4p+o2i21lP+nU36
hPKZ5l8NB3296sKxBzFcyPXiFKHFcvENDi8ZS3k23/CltYvP1z7efIPizz13
1eqDPq5R7YuVJK6imJZi2cFExHKEHaBhC+IsiSkpdiV5gX8CmeGX1Wa87pQ8
R67jT0emmVlyDTmHvMPvhvzit9hW06qM/JklB6HJNDuUXLNjyUj8+AYxQbTp
eynDp3UQM0v5bWv+HFPtbF/P2qFkJeWnVX/IUOTUTUpWdZ5uWjKpubdttaO9
bWtOos1RscLYQW1T+TBacwO2aXyM+X41Nzau9tlfsMPg08SO4qQmfZ3wGOKh
4DOOa5IWc0N5flAwT/GQxP0VE+n0Jv3Q+KBpQ1wSPr8nVvkLq50Tqk22ZMrb
V2DOFzRp248H4/s68Ge6qPLFSj6t+iamkLi/4g5J+QPwBRguGnZqj4Khizei
b2fWs4yr8eVTLO/0KiNW3KnVf+ti7Zqr5GYyKvmUDApbt3cay/VrPPF1H6n5
bI6vXeXtA5vUszzTmItJpQ1t7VNtrltrE35uvvK1Yc9ySr3vSUXjufermC8D
fzVjwkYCTyuOD76W3nPXJv3OpPJjuUztz+vVc9korlvvsmXNEz5iYtZtWXMJ
JvKJ6g/5CFZDJmKPBHvhjwC7gmHxlxz4XuJl3cc3Otb+UnX518DBnO/ObvpW
9fkgwGnhu2LBSeG9fHzgwWyk8IIDX99fVj6azywMlU2J/f6/1T5suVt1tXNE
+TzjodlQwYHvqzKeBR+WpwyVJ/sEeDJ/fPyGdtl7w/Reqz7DAMmFYjbC/ciJ
sL9ni/5DjYPxwsfjQZ6v8vga/E23+Py/N7N9OJ6puvhbZQa+IC/Ve+kDHmYK
txxJTBCPBs/E14j3+Er107f4T9XVDuzw7SqPfqvK43nkiwclfbPoQRxz72s8
flPfCKaOdt46Q++vsaIb+lzNJVgTX0eYj3OJXtDZBAf6bNHWvTVuve9ZcbXI
kPQhM8sWUaxt/j/frD3t89W+5ygvJsDnKl9deN3Ha63B1sxh+Br9IIyI3yWM
n37u/urnpypf+Y/VnLcW0fbeT1YZZ5szbrOi2ZbQHYhDS6dAFyFWJ15d+2J5
DeLwmm9s9v5ca0EKM+VHrA1t/a7m4cM1V435/TXOM2oc2Dj1qow2zfHf1jw3
nvZPcQMG8UrIVzAN6/AnpZf8U/VN+mj1mT7k0RoTfXu66vaq//QccJEnqp/6
/ES1OVHlvRfZ5MkaExi5OY/3PqdJHSTZmIz85aJn1DvRZYrTyR73ytrn+VbZ
z5U9p5ktV0vpNM8pOUv8KXL7t6odZ8E3qgz/CT4kZFexJfkR8HNgL4MfxYva
I+2V9k9xOPnuikvsXHYmwz/FETX+5iM7IFjAlM3bZPLBeGB+Enwk3ONXwT/C
M44vHlhcDbpI2ARMwbe6oOY//wv+GPR3fCD4QgywGykdMJ3tjUWzu8Q345m/
XHy+eF38Yth2KyeGrTPROcnHhW+GOmK38m3hP3NCyRfijLDNJGOQL8TA5KfD
X4fcS/5ls8C2SB/pgsnN1xbNt4Z/h3J8Pvh3aIs/EZsP+vqpeMxN+h2x5by1
2hSf8EtNjqM4cOLBGSP/dS6GiHNPDAnjAtOi35QaG/IEPefg/9PFuXBPXAsY
NBxrRj9jXKDJM2yfyThz9TOOAyxHDFX8Jz6UPaqysC/yFrtUY2L/wU/Rw25R
e50959GSVcgpbE2dN7AauNfRVR4/jBcm1zhn8Wrawne/UXINXt3ZrNxULOwZ
KRf4/3n+/84Ksgo7VjKO/wUSG8XeSY+MD1i6/sNI3BNj6L/fxRDBW5HH2K6S
Gckn9O3kQXatxnjKfqGXPMZ+FcfP2tAuHb3neCf/2yPGyt4Vr4Oexhg2/Yzj
4f3ZmcuDj4kX4myVL5aJea8/ZEd2xFPyYz/zrGMyD324/V8sRGO9Z72bNcpe
QRxOvp3s0OBVsK+1ag+xRvlDsTPZq8lYdlKxif/dmh13Tx02YtY7G3u2YGzC
xAQQi3ePKr9HlcFTea5452J+Htlk3GExh/lKoMnf7Er427NTPbxofvfiDx9e
5e03u9eeo52jqy7/gi80GcNHKoYpHtt95cTHI+8fXbS+HFx9bleb+klmnFXv
bu+0h4qzhwfHi0/FMWjSV8G6g02hxfCx755V+efW3ovHPrvW6VeqrjL4cP3U
b5gE2f/Y6j9f2mMqf/8mx1w8w32atI0+o76LfpJ9+X3sXbTvsH+9l7LqiB1E
dt6vaHn71rcYxGM9o76jMTE32PkcUuMvtbeArveuueFZ+1b76k79V3InZfBj
Sk4XP2iO+p5sh9o1X8zDo+q7+HZnFQ4jRqH5432m/p+u5Hcx4qb+H7mT61p8
bHPDnJhe/TWHjyucUFwlfD4ef+o/bupdzqm5ZM7pk7PknOqbuLXe/aAa7/1r
nlvbl1Y75B0ymHbPLjxHHEY2XXQbcG92JzuVjgPGTG5jb398zR+/3Z9Z5fXr
sGZ2DIzDasz3qfie59QcOLD644w+t+YVWdJcIVceU/PfnOHHQG6DO5EXyWt+
i/tN9iGzietLxiRr2rfIS96TLb9vAgcjt15c/T+2sClxqfgKeI79kH6AnoCO
4/8DhcawDw==
         "]]]}}, {{}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
         LineBox[{1073, 875, 5305, 953, 5045, 876, 1251, 4934, 874, 5303, 
          1003, 5042, 873, 1072, 4889, 871, 5301, 952, 5039, 872, 1250, 4931, 
          870, 5299, 1002, 5036, 869, 1071, 4886, 867, 5297}], 
         LineBox[{4590, 2720, 2087, 2885, 2632, 4951, 2633, 2082, 3875, 2083, 
          2682, 2080, 2884, 2173, 4840, 2919, 2077, 3874, 2078, 2719, 2079, 
          2883, 2630, 4947, 2631, 2074, 3873, 2075, 5057, 961, 5313, 889, 
          4835, 958, 887, 1006, 888, 3519, 1258, 886, 5053, 5194, 5193, 885, 
          3516, 466, 5083, 5230, 410}], 
         LineBox[{526, 214, 530, 246, 532, 215, 612, 249, 535, 3436, 3612, 
          3611, 386, 3439, 3615, 3614, 387, 3442, 3618, 3737, 3736, 388, 
          3446}], LineBox[{529, 227, 569, 285, 3508, 409, 3683, 3777, 467}], 
         LineBox[{5143, 393, 3746, 506, 3458, 392, 3744, 449, 3455, 391, 3742,
           504, 3452, 390, 3740}], LineBox[{526, 16, 529}], 
         LineBox[{3462, 850, 5143}], 
         LineBox[{3465, 851, 5146, 5147, 5008, 852, 1245, 3462}], 
         LineBox[{3468, 854, 5149, 5150, 5011, 853, 1067, 3465}], 
         LineBox[{3471, 855, 5152, 5153, 5014, 856, 1246, 3468}], 
         LineBox[{3474, 858, 5155, 5156, 5017, 857, 1068, 3471}], 
         LineBox[{3477, 859, 5158, 5159, 5020, 860, 1247, 3474}], 
         LineBox[{861, 1069, 3477}], LineBox[{4883, 1070, 865, 5030}], 
         LineBox[{4925, 1248, 864, 5027}], LineBox[{4928, 1249, 868, 5033}], 
         LineBox[{3449, 389, 3738}], LineBox[{4883, 863, 5293}], 
         LineBox[{4925, 862, 5291}], LineBox[{4928, 866, 5295}], 
         LineBox[{5024, 861}]},
        "1"],
       Annotation[#, 1, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV1GtMl2UYx/G77CBy0Dj8QUCj1DSzjMQDYWlLHS9y8zBDbROkaCVQrWxi
ghxEsNLpatamzazWOrwRNTNXFiuXWzkEOejMiGodFO0gma109nlefP1e9++6
7vu5/4+P3lT65IInrgohfOSPg7EQjmWF8FlaCDdwMlLQg27cLR/GQ9GBdnxi
TxsfRSKSkG+ui6dxJ9ejXF3HK/j57BBeQBM2oBnz00OYqpdgJh6lsuV4XLae
3/CcdbyTG3me+SHm4jAY1fIS+WPmT6tb1GcyQ3hd3aB+iot5DS/j53jwiBB+
5aH27JKdNv8gL8Kd8myeyCP4AvemegcZIRRgKvIxDd/KP7B3irrKWXm8iifz
XnmNu06Knqd+DduxUBZz7zSkoka/H2ewx/N2o9/cYi7CXfKRnMs38kXu89y1
zlmrTndGBoajQr8cBe7QaL0eDVFuvY7X6FWjBlXRu8BqbMUMM+nOzMBuz29B
a7TPugH1qLQe67dt4GJejhJsM/sOZso73OkAKsyXo139sPMfQaY7ZCEb78l3
2PM+b9Z7i1/kN3kj/4OY8874rZ/KtmKxfUuwFGXOLtJ/SH3OHQ6pz/IX/NPw
EH5GvHUCEhGzP96Z6ZzAaRzHqTyEz/IsZ85GnbpMVhvN+FYWyUqcu9KznsU1
OIRrcdzcdXyCL5np4b2e3c17uNXeA/Ik62znJXIWd8k7cQxf6593x3r5au9k
QP0XuvXOOeNje2aZ+U2dLEvBFes/+TwGkINqe/+27yJOWJ/EHHOn7JvNM93z
G/Vxea/6O1ww+7v1HxiFPtkRs1PV3e7Tg0HYb9/GkSF8yL16R82s9bxmvcvO
yLGvSb8Z36s79X/gLh5kz3z1Zr0t2IQOeZp3285BPzjncPT96u2z/jH6/yf6
u4zeLR+WXY851q+YeRWJ1i/xqejbddYtiJON4XgexUN4NF/Cfzhivs69n+EG
/kU2Qz2Rs8zezpl8B4+Wj8IOpMru5RhP0Evi2ziZx/EwHs+Xo3fKh8welFVy
K/fJ7lNP4ZutczmH8zgmT8HbyJXN4sl8v95YvodnIh/jrafz1WaucAeP8cxV
fCv3yx5QP8pFZpfxQi7lCfJx2IVCWSHP5aV603le9K2jMLqr9dzoOf5O/uWv
zLbJnuau6N+XbIG6isusK7g46ke/T56N/aiRLeFG3qZXGX1H/DJqsdK6KXp/
ZuJwEpP8jlou4AG9FepebjHbxu9yT3RneR4+j76H6DfyTv5SbxPv4+34HzZT
+7Y=
          "]]},
        "0.95`"],
       Annotation[#, 0.95, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV03to11UYx/GzEDFvu+imm25zoU7NQPLS8r55+XlZhVNCwQuZCaIYK0hS
27xNKTVRShAUIRUvlP2ReRexbaLBQBQz25Z5mZe1JkbUZrp6nT/evs/zeZ5z
zvf7/c28he+XLE8KISz2z63uIUzsGcIkFKEsPYQJfDwrhEL+RD2OV/N4/l7+
d0YIq9QlPUJYySmyVOT1DqEPRujXch1+QbLeHrMfmx3rjOH6XWVdsFs+RjYa
L6pTzFTqD0NHdWd0Qov6jmd9w9ybmIZiTMdt+UkzU63X2p/gNTyFT8jL3fG6
/S95lgz1XnW5/mT9buq0+PzqKjMF6K5+jdO5lRucf876XfOfmVvIn3KOLBfZ
6O/sMWb7cZP6D+xzz1fYgLF6fWTb7fvOzDN1hfwV2UTrQbIPrEutS7kKh/UP
YYD7ltu3qVcIG1FlthLVelvMbbOnJs5aN8kP8zeyndZH+Yj6AG9V7+d73Cx7
jCznPvF+5+N8/F3cNdcd87DYmbP151s/ll+0buZqfpAZQk/zyeoUNKmz1KnW
C8z/rs5UP+RGPEKzutCZP+IyLmGdLJdzMMe5afE3QX28xzl1fEHvB7Tpt8r+
xVOcUd+Un+ZfzeU6q05di5/QKmvBSu/ZV90Pz80e8ywt9v+DhPqUegoXqk9a
15v7z762+Pdvb5LsBdyS38YdpLrrZ3yeE8INHim76ox8LnLOfVzynR/wPTzE
Df12zrlvpoovoj0m6X3hnC+xHbXmMrL93+HO+nn6FfIarPU8G3BXr1HewNlm
Zlrv0d+LdPUu/k0v0zlZSJXlczIP5Gfm/+JKc2dly/h8fEfZeOvhnKcewrk8
lNPladiPIbIJPIyL9PrzOB7MBTyQR3GSmTa+wn3d+REP4EbZdOv3+G2z87iE
3+GX5fk4ioQswcU8R28Uv8WzkIjPqi6O9/jWrXw5fidZKV/jBtkM6xW8SL2U
58d+fD95LxzHatlsXh+/nd4y3sw7UIYP1RXx+5npgJt41XuU8Uj+U2+JdT1/
a7aGD/L1+MzyobiAnfEd4+/E1Xpb+Bifwz58ja5+t/8BKezUpQ==
          "]]},
        "0.9`"],
       Annotation[#, 0.9, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0mloz3EcwPEvOR4hjM0OmWFD7geYZc65CptjrknuKLRylIa2ueYoW0rR
coUaCnmA5cqMcoUH5GZoISNXRrx+D97/9+f8/q5/8tzlOcsahBAG+6mJCSEv
LoTZmIFZmIk36tN4OqZic5sQcrkyPoQpvEk+iTfyZL6gnsPF8vLYEIo4QS0R
nRJDSEFG2xCe8XPcRLzeAbOFZrPtDtJvp9Zafk8/Trxff6LeBMTKW+md53PY
oJdupx6/8c49LzK3GAuw3exb5ywUXzafKk7DJfExvsidcdg528zON5fpnGS1
GHmVeAg6Rs+AFPyVf3CddWbXowClZnvpZen15JHc3fmx6tXi0eitPor78D/e
6ppbsAnj5Znq+fwJK+zlqS/nWudf4evyauwwtxN3xBXRe3CdofrHxSfwwP59
5Osf4Z36R7lO7wtOq59CV+duSQihGzdB4+g7O6fUTBnWYJW91byaE+zEo4Xz
kuSf2zkPdZhhb6reQr0ivbV2iqP3ppaMDP0k16p3jdvi33yH//Ac9TbcwfxX
Z1Wqv5BXq1/HS/EvZwwXj8AP8U+8xGu9V/hhb4y9AWoNnPMYDZEm74JsvW/8
HW/Q2PxbruL33NTsU5S1D+FJ9C3UntnpwSXRf9LcRs9UhNfRN3EfNZyoniPe
a28f9uCFelyS/zi31m9kv1C9ChflV1Gr98neR+4kHyvuayfGTEscQi/1YdyP
h+p15sHcnftzGqdzMPOX73KKc1ZyKteqjRXP5ylmZ3E2z+Fu6l1wAllqWTyO
p+ml83iehCxkysdF1/Ftf/ENs7fUVvB9rlGbKF7F8+RLOC/qcwf1eJzFWrVc
LuQ9eku5hHehAPnyYm5upikeoY/nKOCB/EVvsfgpnzR7i4/ww+ie1fviMnZH
z8jlfE1vG5/hShxEBZp57/8BsZW6xA==
          "]]},
        "0.85`"],
       Annotation[#, 0.85, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0ltoj2EcwPHH+RAlNjZsQsYYOR8uiC0X281YMkVkw5jDzDbHFcOsTQ5l
MiuFMrW4MC5EWci5lFNCThGT067IDT7PxXff3+n5vc/73zu0oCRvQ4cQwih/
viSEsCMphEpsxXZsQ5v6Zt6CMlSgHJ/VS3kTSnA4MYSNfHNgCBv4kHwdH+RP
g0NYL76hly7O6h/Cfb4uz8DZASEcMLfWTKbeGLXRaFIvVluDNHmimdv6czAy
7sIo/JV/d5995mqwB9XYizv6t7FbXO/8GTuP8FS1aRjrHhnIseMdT1F7y5O5
2WyVc7swUZ7k3DfPuSWu0ct2ZpK4UT3I96MOueqz1e9xFs+Pd+Z5nMkdzfyy
52B8b8yPPZShwrOPmzsa9/Iy/aVIcYfBaFFvUC9WS5WfMH9RvnGQ/wc2oUyv
HJ/VP8W7iDPd8ak4FQnOdbanC7qha4zN/NRrxyJxPkqdeZMcQh+1Hs70xHL7
r3lmAdfHO4sLxStQ5MxqXDB/LL4HGuJvas9Ve6byZfkV8U1zd525hw/2JqNI
3Fe/H1aJW3klv7Rvhvlnzqdztby7HS/kH+VtyBF3cp8E8Sx0N/M63hvj5BnY
qT/AuSR8kX/FN/Q18xaNqd6XZ6q9t288/8EkdFGv0r/ubFv8DtzrKw+XZ4tP
6zVhovwk/9AblOK75FrPHac+xlyd3mM8xDB5Oadxm9lscSEvMLuY5/EyTlcf
gXOYqzaXczhfbwbncVas8yzO4X92/uY7Zh+olfAj/qCWK67gAvkaXhL7PEQ9
GZewXW0hV/ExvWKu5cOoRKl8D/c20xXPMd4zK3k6t+sViV/xebMP+Aw/iXdW
n4BW1Md35BPxm9Cr4xa+ilNoRi+/4X8yVal9
          "]]},
        "0.8`"],
       Annotation[#, 0.8, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0l1MjmEYwPEbozYfYyMlZTjLCCfykQOjtLApH2s2o41xEgfGrBNzQBEh
JELJAZONOWOsYdbHazMHWJhqyLLJ6mWpyO85+Pe/vu7rft7naXbxvoKSUSGE
Sf78nBpCTXIIl3ERl1CNXvXzfAFnUYVz+KHeNiOEM+KaaSGcjs5wJbeqn4rO
y09G+7h7ZggV4ha9BeL1Sc5zs3wlGqe7w9wJM+v0stVW4I56uVoZsuQpZpr1
87FUvhzLMMpc3DPdMNeA66hHHfrVX5q5Jq51/ipf4Vy1TfZkeo5C7uQuxJCj
d9fO2mgWq+WpzvTZFRNX6BU4s0bcoD5GfgaVKFIvUG/jLbwVhdgc3YdqDNjT
pP8I/ejDOGenuTsJ/1J8GHMjXGz/MP/FHwxhEKP1O9GBT9hlR54dazES7UAT
JqaFMAGJfkcCEtUS8NGO9lTfxP4P/B5J+i/0pnMy5tg5WT6Xp/Ds6Hmd+4Xv
8jjH1XLcmW1PjNtwTG0eZ+CQvQcxy74v0f+H+LHZz+Ln+s12tGBYnKs3FO3g
GL6Z6ZF381cMmMt3drnaCnRE7w2LxJnRN9Eb5MV4ZrZHvkPcaaYLE/BOvT49
hLf8Q6/XzHHvrwzz1TLcW6Zfjj5xv36cf3GXfhE2y+/o30Oe/FY0q5/mPW9B
ltpGXsWrOZvz+J9zv/mF+Va1En7FXWobxAd4p3wPb4v6nK6ejAc4HN3NR/ii
3l4u40qUYr/8aPS9zYzFG2S6s5SXcK/ebnE7N5pt5Zv8Onpm9YV4giq17VzL
T/XK+T4/RB1uY7zf+x9LX7BW
          "]]},
        "0.75`"],
       Annotation[#, 0.75, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0klIlWEUh/HXEgpbNKql1xuFDRDYSO5aBU2aEA12VQhLsoW6KBpcJEFU
EDQLRZRpmpqlpqXZsLBNE1RqVrYToYIokgZr1+8uHp73/M95z/d9lzunuGJT
eUIIYQy/Z4RwZ2YIHWhFO9rQnxZCH2471yWH0MK1fIvfyG/yNXUT1/CXSAjN
zq/1XmGpegnynNtTQ7hqplE/PyWEjbJctMmvyG/It8lzZBnqPvc2OLfqN+jV
Y606ovfC3FasU2/h9Zxobsx3PDD3EN3owX280x9El3OD+/fi+3i5ZxS6v4wL
OGZmOzrtumumM/6u6qjZtzyAs3oxsxN5Ai7gPM6hUL8A+3ARlzDfjnnIRJZ7
/Z41gLsYVc+1e8jcB6ySFctG+HB6CFVIkC+UpcoW8BBH5bMxOSOEKeiVjeNd
du33HiU8Xv1EPo2not55yJ1neu/5KX/gf/Jud7qwyDtWczqnoSC+T/8AinDQ
8wv5EGeYi2ANZsgyZWOzfCunyJKxx/5SROWf7frq/IlrfVMdatBi/hrHzBfg
jPq0utzOMuSY/+h+Lj+Kf4PzN3PZvBLHzJ50Z4Xsp/2/zO10HpEN60/nfN6s
1xz1n0UjRs1F/C4/OE9/NZLMHtV7idfqd/ir/8fdYbO58r28Q76bY1zGGfJU
dOBg/FlcxdV6pXycT6ESFeojPMlMIgaRZX8lr+TveiXOQ9xi9jlf5z7Oli/G
Y5yTFfFl7tU7we3cgxo0Icm7/wfgyJha
          "]]},
        "0.7`"],
       Annotation[#, 0.7, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0UlszGEYx/G3RJq24qLoYulE4kCnSLT2kLhISCWcJLpMNS2XFlU0ljRx
oCixpMTBwUF1HEqiMZG2aqm4oBJiX64ObacoqRI+c/jm+zy/93mf/3/+E6mq
31yXFkJ4i+TMEF7nhRCbHkJcvRo/9denhXAmP4RK+SrZSozK2+Wn5RXyFbLl
+CG/Jm+Vl8uXySL6pfzd2Sn5SZToC+TF/E1+QtaCJfo58mEeQgfK7MmcEUIG
xrND6M8J4TEe4BEe4rf8kz331Tfcv8dx/up+n/qjsw9Yq1+DSnWXfR1mep1X
e0aFrBy35T2ybpTp55oZs/+9+h22m51sJguXcBFtqEp9OzSiDTXuRewowHx3
8j23kPN4AU+a5beiS9+gT1c3uFNofg9HOSo/7LscwkHkms1BLaaav+P8mTrB
2fpOnsI3+a58HH/wwvuts3OAn2PE7iT2ec9FvBhF2Gtm0PxC9Tw7dqpbeAcf
T/0Pdm91P2YuTX3AO/U769U/VaejXr8LE+zYoN+IWOr74Lwdu52d4yz3N7n3
JTeEUu6Rf1YPmx/CCJIolf11d736X+q7u3t0dgiv5L/cG5WPcU1qj7rZWQK3
sF+2hY/wBc+r5VZu5Cau42bONDMRLxG1o4mLedBZtfoNx80+4as8wCXyInTj
rGwbX+Y+Z8e4kxO4gnZkeMf/kweGRA==
          "]]},
        "0.65`"],
       Annotation[#, 0.65, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0DlM1EEUx/FHPGKDNuCBSgSx0047j3jWSOygco0Q8YgJMWLB0djYLIfi
ugLisgtERNCCBAsSGhQlFphYEBultPEIKij6+RfffOf93puZzFScv1ZztSgi
xvGvJGJ4Z8QI8hhCAWvyHA/iER5jAH/lfdyPLHrxEH/kGX6AHjwvjbjPP3ZF
3OMJdTeP813+Ln+9PeKZepbH+BV/Lov4hKf6oziD30mt32Vfw9aI07JT+CUf
lXfK6+UnZfvUJ/inXoc8jePqKvk3/oonuGh+87aIYoTeW3fPYw4v1G94yRkZ
/QucQi/Oqev19+pXIuucPbv1+Ei5v+AKdSXm3TOsbuc+buE2tCKHlHMKPIQ8
pszccn4zZvRqZJdlZ7mRm7iHj3nTUXzEnLn38kvWjcn/W2eTfdZXUKd/3Xkd
sk6k0Y0uLOvlvamAXPKXzh7kOvNF3hZYS/bKl1Btfr19W6zX8UZswKq83HtX
+MaOiMPuveMvFrGA/eqbfJC/mEtZf+ARs7M8wO/4kPwAXiItq+UMT+vd5jGe
TP4aBWxy339F33VK
          "]]},
        "0.6`"],
       Annotation[#, 0.6, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["

1:eJwV0jtPVFEUhuHFJVAiBSCCJjSilvgjkOEyRLkEEiiMFpgAiQkkCi2tYkJB
QbglNCD3YRgV8NYiI79BscAaClDCc4o3717fXnudfU5O3dPhx0MFEfEGJbcj
HlREtNdG/L8VsVkTsYG0+r68jf/J12VraFXfk7fwpXxV9h7N6np5ii/kK7Jl
NKrvyg8rI17gkXqAm7i8KqLY3jd93/EZX/EFRfJ9PsBH7OETCuU5/oAd7CKL
Avm5mRnrnPVWssfbfCY/vqlPnecdPpX9tP7jrifoUD/Bc+uce2X0HNkfdNcj
/MCYfBw3UIYUdp3J4sq5Xu7BqLMNzo7wQ/6LvPyU1/WtYUa9ZeaQ+w2jT++A
ef08b28Bc8lsPYvJe/GI/dd6XyXvrp6V5/klT3Fa3o4OM57p7eRizyzCO8+c
TN5V36/qiN/YRFfyLe9EdCffmd/KenmaD/wbE7zKWcxgCaXmXgOhDV7T
          "]]},
        "0.55`"],
       Annotation[#, 0.55, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
         LineBox[{5381, 5419, 6000, 5999, 5913}], LineBox[{5382, 7588, 7428}],
          LineBox[{1210, 5423, 6758, 6354, 6355, 6075, 6759, 6911, 5424, 6760,
           6356, 6357, 6076, 6761, 6912, 5425, 6762, 6358, 6359, 6077, 6763, 
          6913, 5426, 6764, 6360, 6361, 6078, 6765, 6914, 5427, 6766, 6362, 
          6363, 6079, 6767, 6915, 5428, 6768, 6794, 6795, 5774, 6973, 7418}], 
         LineBox[{5459, 7421, 6989, 5646, 6542, 5645}], 
         LineBox[{5471, 7424, 7027, 5673, 5955, 5954, 5438, 5941, 5942, 5773, 
          7274, 5772}], 
         LineBox[{5748, 7259, 5749, 6073, 5420, 5963, 6008, 6007}], 
         LineBox[{5825, 5826, 6074, 5421, 5997, 5964, 5965, 5742, 6887, 
          6888}], LineBox[{6042, 6043, 5422, 5998, 5966, 5967, 5743, 7342, 
          7415}]},
        "0.5`"],
       Annotation[#, 0.5, "Tooltip"]& ], {}, {}}}], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{0, 2}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.900104031719882*^9, {3.900104067255005*^9, 3.900104086001552*^9}},
 CellLabel->"Out[374]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvQeUFGUW911LT09gMG5w3ejmXXXXHFfFDCKKiKCSMwICknPOOShRFFCC
IBnERBZRxJwT5pzXXTfpbn3399R9qu80PTPVw57vvO979JwZh+7q6ud/nxv+
N1TVZa16XdeuS6teHdu0OqpWj1Y3XNexTc+jLu7WQ15KfScIUqPkZ9hRQYH8
HQZBBb/GBsH/ja/+yf1Opxo2bHhM27Zt67Rp04b/F9WuXTs41L1XcLi8dr68
dk7r1q1/2KJFi42Vf+RQOey09u3b15LXj5T/76ngIw9n3vuVfuQk+SmUfwd7
cq+gOFr7se53qqBmzZqT27Vr95V8OkiF7vfH8vt6eS36fPS7k/ybd/npLWeL
Xk6dKP98Tv4Zmo9vkEN/LV/qjljzP/ma41q1arVN3/Iff1f+PVB+vsMRG6KP
f7dZs2b/1eOGyf8Lo49/pC+5by9IuKL8T4nU+8jrf5GF+1P+S/69U35+y2ur
o+PeVIDuiBL3u+AiLzD5DyFUiz6ODPzLQbWEMk9Hhx8THY5ubPXfVhgdPsSD
zJy2oJsRPXJNRR9H3f7hRZ+OPv62/PvHzZs3d0es+p98zbnyNd/4r9GPr5Z/
lzZt2tQdsS76+BFynP/46Mx2fK4f/dqJPuGK8j8lGO7LWuUX8ruOF/3K6Lhd
BqTf4Uv5rf91i3e4cKBdkfzn5V2YQ9QFdmOLr1Id4OdFOexU+STiaij//lv8
BWlsx35BK9ZaDf0N0p2tesl/z/Bq9LkCRIXy/1I+vzajkWsMDIX7v17JYY0b
N36ff+vnFspvZIB9XSBe7FVe1eVMsOJbW+GGPi9/8mVv8JFUPitPlVl53t9S
o79Rh/fkp558a1r+/yMBgw/y/uWv8jqnjcSabmz8BD9TkEnRGH4X/NKsCDn+
jzY0ZTWs4GH9Ytb1A5FK9G5BXSO0JfJTEr1c2whkQmzZaRytPxFAfyeg1Wnk
+QXXmpc3yZdF5pD+vuD5VCX4Tznkpy1btizPtmvk9b3rKzzJS/qd/5FPnSl/
awgbYXZspnwygpreal5eytEiluCQ/CWnPuDo6JPHmxXfnlkDMfFtXR6iUQGu
NXoIXdCj25mTdJWflVU593SDDzxRECroa07STI4uZ19K8/rKcvZFT3K4eRnx
6UpKxHt8puffJ0dH+1JI1PzIyOUuNlgOPTgvkZXdFetVnK3vLyL4QMTEUs/q
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
xp4CTz3N4uPjjPHEx5kVK0Ure1yey9ylETQrzThYqcKcCe3jlVY3K2XTOcIf
502cI0rMStcsHVmGudjj8lzpA6pg2QnRo/eON6e6IcmpdiY6Vfckp9qR6FQ9
kpxqe6JT9UxyqmtU+SCeVK2++uDu4MeGrT2/dyE/wcXudzp88sGbK/jKXkm+
8mpdvU+ROBUcg68+Ur8aHuvZwCVGd+XrsjQi0Vc2Mij1KwMfXPSr3RE/yPvr
eyf5+oY5EJetmZVdxvf0eLOMcMLgZuFre2YGtSkqyfGfvrAgh30kWs5V7vRF
+y3nthu7uORg3bJROZd1uC7Ll0v8slhQZgk7kiyhgcbyXEv4+p3lcQpZ3lIO
TbSUnUmWcqVyqnKW4qO1riZ+W1dzSKKFPJBkIfUrXki64oUclGghu5Is5IqK
F1JU8UJKEy3kwSQLqVfxQkoqXkhJooXsTrKQyyteSGnFCylKtJCHkizksooX
clDFC0knWsjDSRZSt+KFHFLxQlKJFrKn/IW4KzrcpRmXVryQwzwlyr0QX2fz
PkYXkeVV3UJK4+/NvZA6FS/kuxVIZPumqRUv4JHyF5DZkkvMAujAZC3g+0q2
zALiBDr3t+5Nogi1s2DTJhoxqJX/1iPKgR1/o/+yx5J8Wa1yZHzH3O582ZHu
ywriL9vvSx5P8iUXV7yRP1E5UvjbPwAngnFRxd+QOVuiPPzCpGdLlPFekPRs
idLL85Oe7YskZzsv6dn+kuRs5yY925dJzlYz6dn+muRs5yQ929+SnO3spGf7
KsnZzkp6tr8nOdufk57tH0nOdmbSs/0zydnOSHq2fyU52+lJz/bvJGc7LenZ
vk5ytlOTnu2bJGc7JenZ/pPkbCcnPdt/k5ztpKRnC5Oc7cS8zvadJKc8Ia9T
VktyyuPzOmUqySmPy+uUBUlO+ae8TplOcso/5nXKwiSnPDavUxYlOeUx5pRU
LaFQ5Z+yOMkpj86xSliZEqWsU5YkOeUf8gJePckpf5/XKUuTnPJ3eZ2yRpJT
/javUx6U5JS/yeuUByc55a/zOuUhSU75q/xcZZJT/jKvUx5W/ikzedcv8jql
66BUlsodldcpv1v+KTPAf57XKb+XRJY/y+uU309yyp/mdcofJD9l2hWSs04X
ZJ3viOTnK8icr2dDNypX9lQ/zPtUchp+yqSL357q21N9e6pvT/Xtqb491ben
+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
c57vpRHL/NyQM+zd80bGUq/JRurwdLVzW39+a7lK/eCWsnDGPz064XyR+of3
jQ1VcCwYnqJSc+Vrk8nUsOoPtnbtZgrglK4qTbimKYKv5vL4I+K/SVAoem/U
c3bsTEVmupVo5afv7EFvyFzknMT21aNDL1Xl5c0jPeWdc4vON5mpbsvDcB0T
DfKyvNO2UXFR7mi7mk479Vwuv6q8VHLIPpD0uMhL55QyJv4ZJWbq0io2bNRP
sbojDvJuzUTei+WIeURP53Ue3TFaRXZ/DEf8kyPjzzNJmN6vR6znHZm4wuSh
tiMIx/x8X8/OxnGzL2BV6XVBZJqBRHLSkAdFZPwXig0VxTtPL742iMyVAiq5
J2n1zmxEfv+ZtcGWP3p8VmMRmbcVtBO6dWaX88Vz2fLkofkdrxDPxZyJJd6O
fUSdDf1i9cH8QVfXcNVoOJ2tIyIqs6RQMnwxjJtCZL4JUBRqceHYPkVIjcx7
spFWMy0Kjn97b7VKa8eO3jwwSg+YdQNqw3S5WVN2uRwwdSfKj5ZyP7WkTSeR
mmvQDPDNM7lGfOGrpd+Wfp9IjeeibUPYpcjicsxwwGRYcG18PJdpQmp9IHOR
c/zmGV9AWTU4amzmIbQWD6vmqflzRWguvenKIAyZF9suN3kGr7Wp0Gi4s96O
JipTWrAJFu76kLjre8xRUy2CSvuj7nKlHHWeJ570snFcaPWdqtX3ZCL018xu
OtXqFw9O0nPWQWBke35nyXkp8RiRnr69p0rLrlrrtqiSfLSjqIORlvqapdlc
s0KJcdN3i7TkFQwlcvTQbJdIhCOmoIpdU3Sldsa0mJf2gWykff3RZS6DHuQf
EfryhYUqrUswwhTvfz0341yR1mbQOyrbXG76TfSYVFoItROxvUjLlDO3LiwB
oXQA1UTa/cZjQTWRiBJ6VZ/vBWnJnKFberZ7tVJ2PHNpc8KjhCsqukUq6i+f
nhsO9pGNg1SXeZ9RC8e0Vpk1vUx8FgsnKKFqG/r+Wc0jFZZVNbCt2UZYPyg4
O47A+0RYZnuISLhgGiXWZ5EtQ6opE8BLqI9oA+nRTOS9yNRH9Drc4XUlKrLu
AiVl/M1TFeeIyAy1h6DkxHprZ/8gMtfM7YjKcyvaRe0MwaTrTpskx5QFKQEh
7B613dWxm4Zc4pKdmMF26bKTQFE0J2EMbZGnspHXXjh9475pjUReHp1cMCEW
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
HOFeOaqgw2MFZZhCZWPdsTZUJ/Zvr7IxlDmgY03ZeplMgbYSjtM5UJWNNJdC
VI/hq4xs27KRTd+lXDm9m8hWkFg5qV2NeKHNYmaETqucuWH+Fk65a27ZuSIb
98coW+oI/8iSMVFPMT4KRcQ+FwOD8THmgPdhbLBGkNiRjWxr5sf725aEcyuw
63+9bJyfUhuV7aH5ye7rcyuLaots3HNSnawa1kVlI11WnfTPuI8YG3Wv4VhG
UjEMsnFVBdrH7a4aoWF35rLVTyyeEb8ttEiCX1VJU3svpYZsuyffovrIhRQ/
09f72qCPugSRqpMLdeeIXJSV7ZSKy/mjbqqPMxb63VI0Q5wvyTE+k4pUx35z
a3Y9MrqeXkvcyd8/vTvEdn081Iqn6c6y0beFo6slR/fFXb38zh/kWTf6Nj26
h6UbIaRdRYTBDDdNMlLHrnJ00Bdsi5H4XBPt2vSqTN5X9J/2ZyPcH3+y5yTh
pg+9rUZC8pXzl9oFdGcXhLN91ftmtVfhdG6Va+OOfp4twvGCrx3Jc8JEnUU4
fCUXh7p36RmEY96fQlj3EutM7s5cuPwareOFk+K3mytLbquFZFyvPFrGqugQ
B15Y2S7IpuslcYwuwhWIbExf6sHNHFGkstFGsvU+5yuiTiIbq16Qg3HkoJjN
Wvu4R6pVw+YOZ3N2P3lpQxBP9w5XlcRvFrGqBaW8oyLuh8vjpiJfXA1WpqIH
pwtb8BrO8M4yDXErHFU1R8Pai3zEAuJcD3N2/rm5oikpQe6+zIWr76/ya++q
amSb+OyGNQ1B7tfu8MwOej03tpFpv2XbxBZ6btzTJ2Hi/3/FkM5WNLmXEvot
zpe0U5ubMtMzaceeI+tT+DHcpa6w858e+P+RbubotonJw1oGs5PVTqwOs7vW
VDp9egrpHlvcWaXbIJNnhLIds0vPFOmYPHMBPUhHlcRJ18YEce4OeALWrHWO
sTvOruY4SEavNqh0PAOFdBUjWiemlMTSTR0cv6PMGooXNhUH6d7f0kWl04VV
sEmX6OWLdGww1Pu8TpyzxOZY41rj3KoXRoVycKS1DDcz8q466fcUukBQc0Tx
eOZynRGuhUwa6oJ2WaGXa+KAm0KGxxM0CIACfr6vJ2L5sg33H2SKLSpIU6Ld
OrPkTJGKlYI2V2dRRGuRirETyoSMnOhp0YX21y1LraVltAqilgwu6eWOMf2b
JmaNaee4RNPE+H436q19v6ocqRYOvia4x7c31Ki26FGRC+hRTejXToXi1qS2
5vg/PGPqrKiluo8ZC30zyfH+cFT+PTN/VLbS/Fg2Qj16MF5PMLLPrf6f4/o4
wx8aq+ArW/sm1oyLV9ZvKr8xrc9/ZW0PFYp3DPWkNlUNbSJCsS1Gx6tpfbH+
v4UIxUomr3/BceT4oqTfvTfMpqZPZiOUNlVH97vV697IntfXyNx0Z97ByqbB
0f+/9r48uMrsuvOhXQLtAu1CEqB9F1rQAgKBkEC7EBISQmhjFWJtsTVNQzcN
TaA3mm6723HaduxKvFRcscdxapzEmbLLk05mMkl5PJksTlJJnGQyjmsmTjJT
5fGd8zv3nvvu96Tufo/uv1L+Q6/Vj6f3nfM7+7nn3isZ/zOT9Ub3wm3BPTe4
wyfs4DhfSRvh484cP+fbbtjBkj1CGM7bCHdcfOfQpYBhyaBO2AgzR0h88RP6
4M6Fg9uYjZOjDT4dm2PVdz992D0RgU0Jd7bYc4/Od/hEQDINDtJfOD2abDhC
68sdOaJi09fu9EgwhIszVoSjvlW17mt4Iezh65FDoj+PcQ9cGoAtmZhVQJsM
40m9U3cywOAH3UorAHz+rQsMwNyBZvElFoBvPvIfyY5ECwB856F/4xSlkBYA
ybhQ0lBISzIAoMnpBu6jk3O+NgMAqjd4RLAeZgBAVoJGIFU5DgAfYwAKAgB4
nXfnYhYZDXZsmsF+TExrAgicVYpRI0zTIsfpHrtBRf1VtXt4We0avKg6+s+q
7fsXVVvPSdWy95hq3j2rmnZNq8adU2rrjklVv/2Qqms7qGpbR1VNy4iqah5U
lU39vjhV0dgX4r3WAvY7r572gH1ustmC/e/u+7fgQMsAtngDpA2/99oIfYO/
XHZSwGRzzaBnvXxkosXgjAkiZEeouKwnIG/Bp7/Ov+zgzGsTvo0foGgaX2CL
xSKo696DT1tsYZA7B86rHX1LFt9Wwndb1zxhPKMadx1RDR2HNb7tYyvwLdf4
Hggd3zh7DdbMcBPje+GwvnXlJpXgv3hDK+7NiUrxSxgsAozXx+usHstpeIgV
VO6JHj88P2GhRQsM2zmanfCBLhKanYIvln6RwXhd01HGN5fr9/FV8MUpb9Bf
NIJd3cVGGCwioymF5huaN4xx75Jq33fK6i+wZd1tH1e1pLsa1yHGtZZxzaLf
B/h9/DtkAFk0dR5V2/bMqZauBdXWfUK1k8wgO3w/7AScQK6Q754DV0ne13nm
DBMroBG0Qieqh++qmpEXE4P2P4l2a9Kh/XVGZPpqt/sn2+xGrFePb2VzcCvZ
1062WXPA0CdCPoRzfrJbZIZxfOmwIORfv/SMr8mp9tDedKMjwgk49G5S5Ttf
fdkem8BiPvud2Yd+x2vsAbhATiiKrS2wnE4zti3GDuBrAu2gehtkNeCrYFkV
Qm78Xk3LAfZFIi/Iublzhm0KttXG8jpNzznz3vIi/wd5gUYUDqAXelY9dMfI
7Z6qOXBf1R74OVV78KGqH39VbZ14XTUcfjNTNU59PLiImqh+8fESC7S7vUT7
uIlm2dVvTzbDmcMQ6B883m+DyRevd1mB/ry5/giSe+Pq0UQbTBZtqUQiwxya
r9ExQmyvdAWK08ogCm+6zZvIfJleA5x/hYUZaIAwPjg3NjoCVAcNEmTPCTYW
GA2MRweNCRLk+CqCzGYjxPswTNfgWruPswFv711UHX1nWVk+yNCqBp83AiNh
jT5UdWMvk7BeE2H5WkORFsYzrx3fo7Zv3USlbataHGs0fc6dNhph5wWk9dVn
/T3Ab780aKQVbocwjw3v9CWZUITje51lhQanUMeyL0nGSgklBvjzznRkGinB
VeKWSYR7LaUHLCGsIgGRHmNue1xz49BjpITQY6Rkzc26Rgo5jf2+IpbSRmtu
kBRMEhKFZK179JgaXOM5TiW0tK4wHZAWtIalRTTCvGqG72lpkWnVHXyJJPaK
Nq9Dj0hqj0lqH/MdfG+p+c+2DjNLfV9+Z1ktz3eqnU2b1dXZNnV8pF7G5t1V
TJYa7ueGdC4dqBbz+tpz/tbfvTNjYl6PnBIJiShiXL34yyu3+UwDV3BYRgCr
uKHOL7gIFlw6L06z0Ci26fwswE9yPub3kwAT/gvm0Pr+QvNtsbGsn9/Dv0FY
YlqIhRzLSAHgd1cK6yqbNZQHtHjiF3wg/B8JCQJqmHzjKcjmg84dF9nghhS0
U4b3VKnL061qYbiOZfLwdLuVDTpEkA2OdYEgHi60RAbkHxgzoeohwSmNZGwK
p/dcOX/dV+e4PuzYQ1vWdX1A2BrVj1gsG1gsNoSZlMOKJTBNpjACr8S2RKGL
UzgKO35vN8ahiTxdoUiksZ+dXWDEWmlC2uFJpIL5WvMxEarPNR+RCsxm8o2X
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
/wcwFqz/\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"8ad5c83d-85f0-440a-9374-8c9c2c090ff5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{
   RowBox[{"CoupledNormalDistribution", "[", 
    RowBox[{"0", ",", "\[Sigma]", ",", "0"}], "]"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.90030107577322*^9, 3.900301076213501*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"aa8264c1-a56e-4135-aed5-abb0c956fd76"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   SqrtBox[
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      SuperscriptBox["\[Sigma]", "2"]]]], " ", 
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]]], "Output",
 CellChangeTimes->{3.900302690297694*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"fa136e47-33e7-45b4-a3c0-5bc8ac650bef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"CoupledNormalDistribution", "[", 
      RowBox[{"0", ",", "\[Sigma]", ",", "0"}], "]"}], ",", "x"}], "]"}], ",", 
   RowBox[{"\[Kappa]", "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900301088585436*^9, 3.9003010966352654`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"67f9c015-f660-4460-bc4f-12a567872aab"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   SqrtBox[
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      SuperscriptBox["\[Sigma]", "2"]]]], " ", 
   SqrtBox[
    RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]]], "Output",
 CellChangeTimes->{3.900302690346531*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"15e6ab4e-4252-41f4-b86e-ae2e6ab740d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "\[Alpha]"}]], "Input",
 CellChangeTimes->{{3.900693402679616*^9, 3.900693410643323*^9}, 
   3.900693584532205*^9, 3.900693614948324*^9},
 CellLabel->"In[80]:=",ExpressionUUID->"f44a4d95-7043-48a5-99b5-8e1968cb357d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`\[Alpha]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`\[Alpha]\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{13., {2., 11.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{13., {2., 11.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\"Global`\[Alpha]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`\[Alpha]", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`\[Alpha]"|>, False]]], "Output",
 CellChangeTimes->{{3.9006934048796597`*^9, 3.900693411704129*^9}, {
   3.9006935746975193`*^9, 3.9006935862403708`*^9}, 3.900693616319953*^9, 
   3.900693686552827*^9, 3.900693806635683*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"c6120e5e-77ef-451b-986f-eb07b85c038a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[Alpha]"], "Input",
 CellChangeTimes->{{3.900693619790942*^9, 3.900693620169155*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"288f91f6-3128-4db8-a11a-2062ce7d4cd2"],

Cell[BoxData["\[Alpha]"], "Output",
 CellChangeTimes->{3.9006936215250797`*^9, 3.900693801846189*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"f2e82080-7f29-4468-9a1f-3d46360fe80a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CoupledDistribution"}]], "Input",
 CellChangeTimes->{{3.900693703816688*^9, 3.90069370791078*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"64ba8b33-dbb4-4c4c-baea-dcae6f3a7ef2"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Global`CoupledDistribution\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"CoupledDistribution", "[", 
                    
                    RowBox[{
                    "\[Mu]_", ",", "\[Sigma]_", ",", "\[Kappa]_", ",", 
                    "\[Alpha]_"}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{"CoupledDistribution", "[", 
                    
                    RowBox[{
                    "\[Mu]", ",", "\[Sigma]", ",", "\[Kappa]", ",", 
                    "\[Alpha]"}], "]"}], "=", 
                    RowBox[{"ProbabilityDistribution", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"CDF\"", ",", 
                    RowBox[{"Piecewise", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"BetaRegularized", "[", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"1", "+", 
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                    "\[Alpha]"]}]}]], ",", 
                    FractionBox["1", 
                    RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
                    FractionBox["1", "\[Alpha]"]}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                    "\[LessEqual]", "0"}]}], "}"}], "}"}], ",", 
                    RowBox[{
                    FractionBox["1", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"BetaRegularized", "[", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                    "\[Alpha]"]}], 
                    RowBox[{"1", "+", 
                    RowBox[{"\[Kappa]", " ", 
                    SuperscriptBox[
                    RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                    "\[Alpha]"]}]}]], ",", 
                    FractionBox["1", "\[Alpha]"], ",", 
                    FractionBox["1", 
                    RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], 
                    ")"}]}]}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], 
                    "}"}]}], "]"}]}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Global`CoupledDistribution\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{13., {2., 11.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{13., {2., 11.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"Global`CoupledDistribution\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> "Global`CoupledDistribution", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, $CellContext`CoupledDistribution, \
{$CellContext`CoupledDistribution[
         Pattern[$CellContext`\[Mu], 
          Blank[]], 
         Pattern[$CellContext`\[Sigma], 
          Blank[]], 
         Pattern[$CellContext`\[Kappa], 
          Blank[]], 
         Pattern[$CellContext`\[Alpha], 
          
          Blank[]]] :> ($CellContext`CoupledDistribution[$CellContext`\[Mu], \
$CellContext`\[Sigma], $CellContext`\[Kappa], $CellContext`\[Alpha]] = 
        ProbabilityDistribution[{"CDF", 
           
           Piecewise[{{(1/2) 
              BetaRegularized[
               1/(1 + $CellContext`\[Kappa] 
                 Abs[($CellContext`x - $CellContext`\[Mu])/$CellContext`\
\[Sigma]]^$CellContext`\[Alpha]), 
                1/($CellContext`\[Alpha] $CellContext`\[Kappa]), 
                1/$CellContext`\[Alpha]], 
              Abs[($CellContext`x - \
$CellContext`\[Mu])/$CellContext`\[Sigma]] <= 0}}, (1/2) (1 + 
             BetaRegularized[$CellContext`\[Kappa] 
               Abs[($CellContext`x - \
$CellContext`\[Mu])/$CellContext`\[Sigma]]^$CellContext`\[Alpha]/(
               1 + $CellContext`\[Kappa] 
                Abs[($CellContext`x - $CellContext`\[Mu])/$CellContext`\
\[Sigma]]^$CellContext`\[Alpha]), 1/$CellContext`\[Alpha], 
               1/($CellContext`\[Alpha] $CellContext`\[Kappa])])]}, \
{$CellContext`x, -Infinity, Infinity}])}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Global`CoupledDistribution"|>, False]]], "Output",
 CellChangeTimes->{3.900693708818871*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"83ffaa4f-e7f9-4ba2-a2d0-da0e8084e631"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"BetaRegularized", "[", 
            RowBox[{
             FractionBox["1", 
              RowBox[{"1", "+", 
               RowBox[{"\[Kappa]", " ", 
                SuperscriptBox[
                 RowBox[{"Abs", "[", 
                  FractionBox[
                   RowBox[{"x", "-", "0"}], "\[Sigma]"], "]"}], 
                 "\[Alpha]"]}]}]], ",", 
             FractionBox["1", 
              RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
             FractionBox["1", "\[Alpha]"]}], "]"}]}], 
          RowBox[{
           RowBox[{"Abs", "[", 
            FractionBox[
             RowBox[{"x", "-", "0"}], "\[Sigma]"], "]"}], "\[LessEqual]", 
           "0"}]},
         {
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"BetaRegularized", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"\[Kappa]", " ", 
                 SuperscriptBox[
                  RowBox[{"Abs", "[", 
                   FractionBox[
                    RowBox[{"x", "-", "0"}], "\[Sigma]"], "]"}], 
                  "\[Alpha]"]}], 
                RowBox[{"1", "+", 
                 RowBox[{"\[Kappa]", " ", 
                  SuperscriptBox[
                   RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "0"}], "\[Sigma]"], "]"}], 
                   "\[Alpha]"]}]}]], ",", 
               FractionBox["1", "\[Alpha]"], ",", 
               FractionBox["1", 
                RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9003078202343607`*^9, 3.9003078464840813`*^9}, 
   3.900307904792596*^9, {3.900307956989345*^9, 3.900307972186637*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"22148fb9-6d10-4440-afef-d811d7320b48"],

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"BetaRegularized", "[", 
            RowBox[{
             FractionBox["1", 
              RowBox[{"1", "+", 
               RowBox[{"\[Kappa]", " ", 
                SuperscriptBox[
                 RowBox[{"Abs", "[", 
                  FractionBox["x", "\[Sigma]"], "]"}], "\[Alpha]"]}]}]], ",", 
             
             FractionBox["1", 
              RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
             FractionBox["1", "\[Alpha]"]}], "]"}]}], 
          RowBox[{
           RowBox[{"Abs", "[", 
            FractionBox["x", "\[Sigma]"], "]"}], "\[LessEqual]", "0"}]},
         {
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"BetaRegularized", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"\[Kappa]", " ", 
                 SuperscriptBox[
                  RowBox[{"Abs", "[", 
                   FractionBox["x", "\[Sigma]"], "]"}], "\[Alpha]"]}], 
                RowBox[{"1", "+", 
                 RowBox[{"\[Kappa]", " ", 
                  SuperscriptBox[
                   RowBox[{"Abs", "[", 
                    FractionBox["x", "\[Sigma]"], "]"}], "\[Alpha]"]}]}]], 
               ",", 
               FractionBox["1", "\[Alpha]"], ",", 
               FractionBox["1", 
                RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.90030784775569*^9, 3.900307937437541*^9, 
  3.9003079740206413`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"eeff07d0-a8d2-4905-be5e-cf5608eede3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"BetaRegularized", "[", 
            RowBox[{
             FractionBox["1", 
              RowBox[{"1", "+", 
               RowBox[{"\[Kappa]", " ", 
                SuperscriptBox[
                 RowBox[{"Abs", "[", 
                  FractionBox[
                   RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                 "\[Alpha]"]}]}]], ",", 
             FractionBox["1", 
              RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
             FractionBox["1", "\[Alpha]"]}], "]"}]}], 
          RowBox[{
           RowBox[{"Abs", "[", 
            FractionBox[
             RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], "\[LessEqual]", 
           "0"}]},
         {
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"BetaRegularized", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"\[Kappa]", " ", 
                 SuperscriptBox[
                  RowBox[{"Abs", "[", 
                   FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                  "\[Alpha]"]}], 
                RowBox[{"1", "+", 
                 RowBox[{"\[Kappa]", " ", 
                  SuperscriptBox[
                   RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                   "\[Alpha]"]}]}]], ",", 
               FractionBox["1", "\[Alpha]"], ",", 
               FractionBox["1", 
                RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"\[Kappa]", "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900312064400131*^9, 3.900312074201192*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"7958592e-eeea-4bbd-ae3d-49efee6928d0"],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Limit]", 
   RowBox[{"\[Kappa]", "\[Rule]", "0"}]], 
  RowBox[{"(", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"BetaRegularized", "[", 
            RowBox[{
             FractionBox["1", 
              RowBox[{"1", "+", 
               RowBox[{"\[Kappa]", " ", 
                SuperscriptBox[
                 RowBox[{"Abs", "[", 
                  FractionBox[
                   RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                 "\[Alpha]"]}]}]], ",", 
             FractionBox["1", 
              RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
             FractionBox["1", "\[Alpha]"]}], "]"}]}], 
          RowBox[{
           RowBox[{"Abs", "[", 
            FractionBox[
             RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], "\[LessEqual]", 
           "0"}]},
         {
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"BetaRegularized", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"\[Kappa]", " ", 
                 SuperscriptBox[
                  RowBox[{"Abs", "[", 
                   FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                  "\[Alpha]"]}], 
                RowBox[{"1", "+", 
                 RowBox[{"\[Kappa]", " ", 
                  SuperscriptBox[
                   RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                   "\[Alpha]"]}]}]], ",", 
               FractionBox["1", "\[Alpha]"], ",", 
               FractionBox["1", 
                RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ")"}]}]], "Output",
 CellChangeTimes->{3.900312872819256*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"05eae006-1feb-441b-b1d2-503c7a11e3ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"BetaRegularized", "[", 
             RowBox[{
              FractionBox["1", 
               RowBox[{"1", "+", 
                RowBox[{"\[Kappa]", " ", 
                 SuperscriptBox[
                  RowBox[{"Abs", "[", 
                   FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                  "\[Alpha]"]}]}]], ",", 
              FractionBox["1", 
               RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
              FractionBox["1", "\[Alpha]"]}], "]"}]}], 
           RowBox[{
            RowBox[{"Abs", "[", 
             FractionBox[
              RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], "\[LessEqual]",
             "0"}]},
          {
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"BetaRegularized", "[", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[Kappa]", " ", 
                  SuperscriptBox[
                   RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                   "\[Alpha]"]}], 
                 RowBox[{"1", "+", 
                  RowBox[{"\[Kappa]", " ", 
                   SuperscriptBox[
                    RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                    "\[Alpha]"]}]}]], ",", 
                FractionBox["1", "\[Alpha]"], ",", 
                FractionBox["1", 
                 RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}], ")"}]}], 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1"}], "}"}]}], "]"}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.900357370987261*^9, 3.900357396474324*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"04ec2743-b251-4bb0-92ab-0f3e06f0419c"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{"\[Alpha]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["\[Kappa]", 
             RowBox[{"\[Kappa]", "+", 
              SuperscriptBox[
               RowBox[{"Abs", "[", 
                FractionBox[
                 RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
               RowBox[{"-", "\[Alpha]"}]]}]], ")"}], 
           FractionBox["1", "\[Alpha]"]], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", 
             RowBox[{"1", "+", 
              RowBox[{"\[Kappa]", " ", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 FractionBox[
                  RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                "\[Alpha]"]}]}]], ")"}], 
           FractionBox["1", 
            RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]], " ", 
          RowBox[{"Abs", "[", "\[Sigma]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["Abs", "\[Prime]",
            MultilineFunction->None], "[", 
           FractionBox[
            RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}]}], 
         RowBox[{"2", " ", "\[Sigma]", " ", 
          RowBox[{"Abs", "[", 
           RowBox[{"x", "-", "\[Mu]"}], "]"}], " ", 
          RowBox[{"Beta", "[", 
           RowBox[{
            FractionBox["1", "\[Alpha]"], ",", 
            FractionBox["1", 
             RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}]], 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", "\[Mu]"}], ")"}], " ", "\[Sigma]"}], "]"}], ">",
          "0"}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[Alpha]", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["1", 
              RowBox[{"1", "+", 
               RowBox[{"\[Kappa]", " ", 
                SuperscriptBox[
                 RowBox[{"Abs", "[", 
                  FractionBox[
                   RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                 "\[Alpha]"]}]}]], ")"}], 
            FractionBox["1", 
             RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox["1", 
               RowBox[{"1", "+", 
                RowBox[{"\[Kappa]", " ", 
                 SuperscriptBox[
                  RowBox[{"Abs", "[", 
                   FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                  "\[Alpha]"]}]}]]}], ")"}], 
            FractionBox["1", "\[Alpha]"]], " ", 
           RowBox[{"Abs", "[", 
            FractionBox["\[Sigma]", 
             RowBox[{"x", "-", "\[Mu]"}]], "]"}], " ", 
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            FractionBox[
             RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}]}], 
          RowBox[{"2", " ", "\[Sigma]", " ", 
           RowBox[{"Beta", "[", 
            RowBox[{
             FractionBox["1", 
              RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
             FractionBox["1", "\[Alpha]"]}], "]"}]}]]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.900357414207597*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"32830a27-ac1b-427b-ad89-ffb861092aa4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{"\[Alpha]", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox["\[Kappa]", 
               RowBox[{"\[Kappa]", "+", 
                SuperscriptBox[
                 RowBox[{"Abs", "[", 
                  FractionBox[
                   RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                 RowBox[{"-", "\[Alpha]"}]]}]], ")"}], 
             FractionBox["1", "\[Alpha]"]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox["1", 
               RowBox[{"1", "+", 
                RowBox[{"\[Kappa]", " ", 
                 SuperscriptBox[
                  RowBox[{"Abs", "[", 
                   FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                  "\[Alpha]"]}]}]], ")"}], 
             FractionBox["1", 
              RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]], " ", 
            RowBox[{"Abs", "[", "\[Sigma]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             FractionBox[
              RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}]}], 
           RowBox[{"2", " ", "\[Sigma]", " ", 
            RowBox[{"Abs", "[", 
             RowBox[{"x", "-", "\[Mu]"}], "]"}], " ", 
            RowBox[{"Beta", "[", 
             RowBox[{
              FractionBox["1", "\[Alpha]"], ",", 
              FractionBox["1", 
               RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}]], 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"x", "-", "\[Mu]"}], ")"}], " ", "\[Sigma]"}], "]"}], 
           ">", "0"}]},
         {
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[Alpha]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["1", 
                RowBox[{"1", "+", 
                 RowBox[{"\[Kappa]", " ", 
                  SuperscriptBox[
                   RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                   "\[Alpha]"]}]}]], ")"}], 
              FractionBox["1", 
               RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox["1", 
                 RowBox[{"1", "+", 
                  RowBox[{"\[Kappa]", " ", 
                   SuperscriptBox[
                    RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                    "\[Alpha]"]}]}]]}], ")"}], 
              FractionBox["1", "\[Alpha]"]], " ", 
             RowBox[{"Abs", "[", 
              FractionBox["\[Sigma]", 
               RowBox[{"x", "-", "\[Mu]"}]], "]"}], " ", 
             RowBox[{
              SuperscriptBox["Abs", "\[Prime]",
               MultilineFunction->None], "[", 
              FractionBox[
               RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}]}], 
            RowBox[{"2", " ", "\[Sigma]", " ", 
             RowBox[{"Beta", "[", 
              RowBox[{
               FractionBox["1", 
                RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
               FractionBox["1", "\[Alpha]"]}], "]"}]}]]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ",", 
   RowBox[{"x", "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900357435667169*^9, 3.90035749648562*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"39885bb0-3033-4144-b655-5f340fee1666"],

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Limit]", 
   RowBox[{"x", "\[Rule]", "0"}]], 
  RowBox[{"(", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{"\[Alpha]", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox["\[Kappa]", 
               RowBox[{"\[Kappa]", "+", 
                SuperscriptBox[
                 RowBox[{"Abs", "[", 
                  FractionBox[
                   RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                 RowBox[{"-", "\[Alpha]"}]]}]], ")"}], 
             FractionBox["1", "\[Alpha]"]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox["1", 
               RowBox[{"1", "+", 
                RowBox[{"\[Kappa]", " ", 
                 SuperscriptBox[
                  RowBox[{"Abs", "[", 
                   FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                  "\[Alpha]"]}]}]], ")"}], 
             FractionBox["1", 
              RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]], " ", 
            RowBox[{"Abs", "[", "\[Sigma]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             FractionBox[
              RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}]}], 
           RowBox[{"2", " ", "\[Sigma]", " ", 
            RowBox[{"Abs", "[", 
             RowBox[{"x", "-", "\[Mu]"}], "]"}], " ", 
            RowBox[{"Beta", "[", 
             RowBox[{
              FractionBox["1", "\[Alpha]"], ",", 
              FractionBox["1", 
               RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}]], 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"x", "-", "\[Mu]"}], ")"}], " ", "\[Sigma]"}], "]"}], 
           ">", "0"}]},
         {
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[Alpha]", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["1", 
                RowBox[{"1", "+", 
                 RowBox[{"\[Kappa]", " ", 
                  SuperscriptBox[
                   RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                   "\[Alpha]"]}]}]], ")"}], 
              FractionBox["1", 
               RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", 
                FractionBox["1", 
                 RowBox[{"1", "+", 
                  RowBox[{"\[Kappa]", " ", 
                   SuperscriptBox[
                    RowBox[{"Abs", "[", 
                    FractionBox[
                    RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}], 
                    "\[Alpha]"]}]}]]}], ")"}], 
              FractionBox["1", "\[Alpha]"]], " ", 
             RowBox[{"Abs", "[", 
              FractionBox["\[Sigma]", 
               RowBox[{"x", "-", "\[Mu]"}]], "]"}], " ", 
             RowBox[{
              SuperscriptBox["Abs", "\[Prime]",
               MultilineFunction->None], "[", 
              FractionBox[
               RowBox[{"x", "-", "\[Mu]"}], "\[Sigma]"], "]"}]}], 
            RowBox[{"2", " ", "\[Sigma]", " ", 
             RowBox[{"Beta", "[", 
              RowBox[{
               FractionBox["1", 
                RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], ",", 
               FractionBox["1", "\[Alpha]"]}], "]"}]}]]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ")"}]}]], "Output",
 CellChangeTimes->{{3.900357450461899*^9, 3.9003574603622313`*^9}, 
   3.9003575044013233`*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"8eb74e38-1010-4e06-b9e7-35dee1dfd14d"]
}, Open  ]],

Cell["Simplify when near mu", "Text",
 CellChangeTimes->{{3.9003576555330267`*^9, 3.9003576609776497`*^9}, {
  3.9003580214960814`*^9, 
  3.9003580217202463`*^9}},ExpressionUUID->"99f4a95c-dd85-4751-aedd-\
a74edd4cc49b"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Alpha]", " ", 
   SuperscriptBox[
    RowBox[{"(", "\[Kappa]", ")"}], 
    FractionBox["1", "\[Alpha]"]], " "}], 
  RowBox[{"2", " ", 
   SuperscriptBox["\[Sigma]", "2"], "  ", 
   RowBox[{"Beta", "[", 
    RowBox[{
     FractionBox["1", "\[Alpha]"], ",", 
     FractionBox["1", 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]}], "]"}]}]]], "Input",
 CellChangeTimes->{
  3.900357650397777*^9, {3.9003577410234203`*^9, 3.900357766952672*^9}, {
   3.9003578441806498`*^9, 3.900357845388036*^9}, {3.900357895653858*^9, 
   3.900357900582253*^9}, {3.9003579410638866`*^9, 3.9003579778519917`*^9}, {
   3.9003580255203953`*^9, 
   3.900358026835647*^9}},ExpressionUUID->"0f58fa67-bd69-44c9-a657-\
200036c2cce8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"\[Alpha]", " ", 
     SuperscriptBox[
      RowBox[{"(", "1", ")"}], 
      FractionBox["1", "\[Alpha]"]], " "}], 
    RowBox[{"2", " ", 
     SuperscriptBox["1", "2"], "  ", 
     RowBox[{"Beta", "[", 
      RowBox[{
       FractionBox["1", "\[Alpha]"], ",", 
       FractionBox["1", 
        RowBox[{"\[Alpha]", " ", "1"}]]}], "]"}]}]], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0.1", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900358208231357*^9, 3.90035826632434*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"00b570f2-e87e-4dda-9dd7-60b8ed458f7a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$4340985#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.10000000000000023`, 0.28302334134963675`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.1, 3}, {0.28302334134963614`, 2.0619103326202874`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.9003582331727324`*^9, 3.9003582674130497`*^9}},
 CellLabel->
  "Out[122]=",ExpressionUUID->"080897c9-25ec-4cf1-b2f6-a93306e2d220"],

Cell[BoxData[
 TemplateBox[{
  "Plot", "plln", 
   "\"Limiting value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.01`\\\", \\\",\
\\\", \\\"1000\\\"}], \\\"}\\\"}]\\) in \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"x\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0.01`\\\", \\\",\
\\\", \\\"1000\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{FractionBox[\\\"1\\\", \\\"100000\\\"], \\\",\\\", \\\"10\\\"}], \
\\\"}\\\"}]}], \\\"}\\\"}]\\) is not a machine-sized real number.\"", 2, 167, 
   49, 31780959797347766106, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.900613682976945*^9},
 CellLabel->
  "During evaluation of \
In[167]:=",ExpressionUUID->"71ca50eb-66f9-4897-80b7-5b3766c1d74e"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Plot\\\", \\\"::\\\", \
\\\"plln\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 167, 50, 31780959797347766106, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.900613683018982*^9},
 CellLabel->
  "During evaluation of \
In[167]:=",ExpressionUUID->"afe5b4c6-47f0-4b57-8167-71f0286bb995"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[Kappa]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["x", "\[Sigma]"], ")"}], "\[Alpha]"]}]}], ")"}], 
       RowBox[{"1", "+", 
        FractionBox["1", "\[Kappa]"]}]], ")"}], 
     RowBox[{"-", "\[Alpha]"}]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
    RowBox[{"Assumptions", "->", 
     RowBox[{
      RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
      RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
      RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9003036631278467`*^9, 3.900303673797616*^9}, {
   3.90030382682401*^9, 3.900303860534724*^9}, {3.900303895811082*^9, 
   3.900304014618004*^9}, {3.900304050866413*^9, 3.90030412504816*^9}, 
   3.900304657353571*^9, 3.900305360251227*^9},
 CellLabel->"In[74]:=",ExpressionUUID->"c8b0ee4b-f569-4437-b721-6f75b43052d3"],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[Kappa]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["x", "\[Sigma]"], ")"}], "\[Alpha]"]}]}], ")"}], 
       RowBox[{"1", "+", 
        FractionBox["1", "\[Kappa]"]}]], ")"}], 
     RowBox[{"-", "\[Alpha]"}]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{
      RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
      RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
      RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}]}]}]}], 
   "]"}]}]], "Output",
 CellChangeTimes->{3.900305348320078*^9, 3.900305476886321*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"e2b78c3a-b3cb-4ab7-8bf6-09c72cc8a1b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[Kappa]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["x", "\[Sigma]"], ")"}], "\[Alpha]"]}]}], ")"}], 
       RowBox[{"1", "+", 
        FractionBox["1", "\[Kappa]"]}]], ")"}], 
     RowBox[{"-", "\[Alpha]"}]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      FractionBox["\[Sigma]", 
       SuperscriptBox["\[Kappa]", 
        RowBox[{"1", "/", "\[Alpha]"}]]]}], "}"}], ",", 
    RowBox[{"Assumptions", "->", 
     RowBox[{
      RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
      RowBox[{
       RowBox[{"-", "1"}], "<", "\[Kappa]", "<", "0"}], "&&", 
      RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.900304993687668*^9, 3.900304997348112*^9}, {
   3.90030504430788*^9, 3.900305082681037*^9}, 3.9003053119020357`*^9},
 CellLabel->"In[75]:=",ExpressionUUID->"23f2dac4-8e75-4705-b887-6462b068920b"],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["\[Kappa]", 
   RowBox[{
    RowBox[{"-", "1"}], "/", "\[Alpha]"}]], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    RowBox[{"\[Kappa]", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       SuperscriptBox["\[Kappa]", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "\[Alpha]"}]], ")"}], "\[Alpha]"]}]}], 
   ")"}], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"\[Kappa]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox["\[Kappa]", 
           RowBox[{
            RowBox[{"-", "1"}], "/", "\[Alpha]"}]], ")"}], "\[Alpha]"]}]}], 
      ")"}], 
     RowBox[{"1", "+", 
      FractionBox["1", "\[Kappa]"]}]], ")"}], 
   RowBox[{"-", "\[Alpha]"}]], " ", "\[Sigma]", " ", 
  RowBox[{"Hypergeometric2F1", "[", 
   RowBox[{"1", ",", 
    RowBox[{"1", "+", 
     FractionBox["1", "\[Alpha]"], "-", 
     FractionBox[
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], "\[Kappa]"]}], ",", 
    RowBox[{"1", "+", 
     FractionBox["1", "\[Alpha]"]}], ",", 
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "\[Alpha]"]}]], ")"}], 
     "\[Alpha]"]}], "]"}]}]], "Output",
 CellChangeTimes->{3.9003051416253967`*^9, 3.9003057782935553`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"c0dcf96c-33a0-40c8-abaa-401db4406cb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"CoupledExponential", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox[
           RowBox[{"x", "-", "0"}], "\[Sigma]"], ")"}], "\[Alpha]"], ",", 
        "\[Kappa]", ",", "1"}], "]"}], ")"}], 
     RowBox[{"-", "\[Alpha]"}]], "==", "0"}], ",", "x", ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
     RowBox[{
      RowBox[{"-", "1"}], "<", "\[Kappa]", "<", "0"}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}]}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.900304643197256*^9, 3.900304699189004*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"9e895377-c36b-4710-b8eb-04e916ab0336"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.900304687642065*^9, 3.900304701482129*^9}},
 CellLabel->"Out[70]=",ExpressionUUID->"da9cdfef-11b9-44df-8545-e46342d40c97"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"CoupledExponential", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"x", "-", "0"}], "\[Sigma]"], ")"}], "\[Alpha]"], ",", 
       "\[Kappa]", ",", "1"}], "]"}], ")"}], 
    RowBox[{"-", "\[Alpha]"}]], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
     RowBox[{
      RowBox[{"-", "1"}], "<", "\[Kappa]", "<", "0"}], "&&", 
     RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}]}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.900304804099431*^9, 3.900304827092375*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"cb2b35b8-6ba3-423a-b58a-cc1a577614e8"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Kappa]", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["x", "\[Sigma]"], ")"}], "\[Alpha]"]}]}], ")"}], 
           RowBox[{"1", "+", 
            FractionBox["1", "\[Kappa]"]}]], ")"}], 
         RowBox[{"-", "\[Alpha]"}]], 
        RowBox[{
         RowBox[{"\[Kappa]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["x", "\[Sigma]"], ")"}], "\[Alpha]"]}], ">", 
         RowBox[{"-", "1"}]}]},
       {"Indeterminate", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.9003048318393097`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"1d9c4329-101d-4e4c-a56c-fd8028d06a3a"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{855, 847},
WindowMargins->{{45, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c6b55941-9800-46b8-81cb-b375720b6660"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 156, 3, 56, "Subsubsection",ExpressionUUID->"0e04f34a-64ee-4b50-b0e1-3af2c76f8028"],
Cell[CellGroupData[{
Cell[603, 22, 789, 18, 64, "Input",ExpressionUUID->"6e2effb1-3692-42b8-96fb-99a1cd2c0d13"],
Cell[1395, 42, 375, 7, 42, "Output",ExpressionUUID->"2fd3160e-d6fe-4156-aaf1-f4ba9b1c5cee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1807, 54, 677, 17, 64, "Input",ExpressionUUID->"fdfeb680-6d91-46a0-bed8-13f55816fc52"],
Cell[2487, 73, 375, 7, 42, "Output",ExpressionUUID->"4b072e76-709b-4ae4-8431-3ac14d72b91f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2899, 85, 677, 17, 64, "Input",ExpressionUUID->"c49b2882-5040-4a94-91b2-b55ad4db9667"],
Cell[3579, 104, 375, 7, 42, "Output",ExpressionUUID->"4a64a6f1-ae9f-4f3f-a2ba-f66577d2ae54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3991, 116, 673, 17, 64, "Input",ExpressionUUID->"c6ec4542-942f-4e60-a868-d4a83827f275"],
Cell[4667, 135, 370, 7, 42, "Output",ExpressionUUID->"5de7458e-30a5-4206-a6c0-4454381632de"]
}, Open  ]],
Cell[5052, 145, 268, 4, 37, "Input",ExpressionUUID->"0def6640-1552-42fa-995c-9c834adf9d73"],
Cell[CellGroupData[{
Cell[5345, 153, 1039, 28, 62, "Input",ExpressionUUID->"0fe6fd11-06e5-4a0f-a04d-aef5f751c5c9"],
Cell[6387, 183, 575, 14, 64, "Output",ExpressionUUID->"4eb4313d-2fde-41dd-9c78-51cefef02701"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6999, 202, 489, 12, 37, "Input",ExpressionUUID->"959143c8-d3aa-41e2-a490-ab6c4abae194"],
Cell[7491, 216, 931, 25, 70, "Output",ExpressionUUID->"c1174779-3af5-432e-9a72-d11afc883280"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8459, 246, 352, 9, 37, "Input",ExpressionUUID->"c99a9227-0c8a-4804-b9d4-59f0db01eb55"],
Cell[8814, 257, 644, 19, 77, "Output",ExpressionUUID->"4bd1399a-e67a-483f-9296-b83dbea44732"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9495, 281, 1934, 47, 116, "Input",ExpressionUUID->"d162035e-4556-42c7-8f4d-973ca8620e3b"],
Cell[11432, 330, 446, 8, 42, "Output",ExpressionUUID->"4398b12c-4e9a-42d4-bcab-d50f4fed6e1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11915, 343, 318, 6, 37, "Input",ExpressionUUID->"77d7b7eb-8d7b-4694-99ed-03cb5e492cd1"],
Cell[12236, 351, 1301, 41, 46, "Output",ExpressionUUID->"7db85414-722c-46e6-bd22-5f45d5e21b72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13574, 397, 219, 4, 37, "Input",ExpressionUUID->"de9b0169-0d7a-423e-a75b-cd522b9085c0"],
Cell[13796, 403, 671, 22, 61, "Output",ExpressionUUID->"87d0217e-28f0-47bc-a866-cc9c434faa74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14504, 430, 673, 21, 46, "Input",ExpressionUUID->"0a45b8cb-8d3e-4fbc-ac8c-ce303b16bd8e"],
Cell[15180, 453, 2161, 67, 177, "Output",ExpressionUUID->"8fb31925-5d9d-4126-9bea-39fd330edade"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17378, 525, 390, 10, 37, "Input",ExpressionUUID->"088f1d09-f254-4e05-9965-54c33a3455f3"],
Cell[17771, 537, 1383, 41, 121, "Output",ExpressionUUID->"39ba7be0-6de3-42ba-bb0e-2c20f5dd0b2e"]
}, Open  ]],
Cell[19169, 581, 1738, 49, 117, "Input",ExpressionUUID->"1a7632fd-87c9-409a-a08e-dbb11a1aeb4e"],
Cell[CellGroupData[{
Cell[20932, 634, 870, 27, 41, "Input",ExpressionUUID->"c6a64f5a-c41b-4ae2-a983-5abed770fcdc"],
Cell[21805, 663, 617, 18, 46, "Output",ExpressionUUID->"26756705-0e1f-4dc6-9cd6-b12804717688"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22459, 686, 378, 10, 37, "Input",ExpressionUUID->"ae504e7c-ae91-4282-869e-0a9f842b0661"],
Cell[22840, 698, 159, 3, 42, "Output",ExpressionUUID->"0f7a9243-7ad6-4091-a489-5124c890476a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23036, 706, 358, 10, 37, "Input",ExpressionUUID->"58a05b44-2539-4b01-8d2b-761eb4080cd0"],
Cell[23397, 718, 532, 11, 35, "Message",ExpressionUUID->"0aa5c219-ac3b-4037-9788-de4b71eb807c"],
Cell[23932, 731, 335, 10, 42, "Output",ExpressionUUID->"a2e8d9d9-0f24-4368-a5f5-dc8e847ddf6e"]
}, Open  ]],
Cell[24282, 744, 3100, 69, 454, "Input",ExpressionUUID->"4e8d433f-9b48-417b-8f0e-1558dc9f8177"],
Cell[CellGroupData[{
Cell[27407, 817, 146, 2, 37, "Input",ExpressionUUID->"472675d1-ece9-4e53-94f3-4be3a88a1f59"],
Cell[27556, 821, 3072, 90, 303, "Output",ExpressionUUID->"7642154c-1612-4747-a47b-bf189fc016bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30665, 916, 697, 17, 116, "Input",ExpressionUUID->"6ec63dd9-b87d-431a-844c-4e2d47765ef1"],
Cell[31365, 935, 11563, 275, 2231, "Output",ExpressionUUID->"1ce076fd-a44e-433e-bc86-d35719bf324c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42965, 1215, 2614, 63, 350, "Input",ExpressionUUID->"52a644f3-8ca3-471e-bc0b-b3c4fe380405"],
Cell[45582, 1280, 697, 18, 69, "Output",ExpressionUUID->"8b8538b4-6730-4215-8e12-afea5e05c68f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46316, 1303, 1336, 37, 183, "Input",ExpressionUUID->"810d4078-0ce4-49aa-ba7d-e0e51311b748"],
Cell[47655, 1342, 1337, 37, 134, "Output",ExpressionUUID->"41f00d5a-a448-4e05-b63d-bcd037431d02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49029, 1384, 2140, 56, 365, "Input",ExpressionUUID->"54f6b41a-56a8-4757-b07d-3b4c8bdda499"],
Cell[51172, 1442, 371, 9, 48, "Message",ExpressionUUID->"cb139f6d-7d30-4b27-bdc4-ecd42748d42e"],
Cell[51546, 1453, 658, 13, 63, "Message",ExpressionUUID->"e11d1929-080c-4631-b856-7b3906c54da4"],
Cell[52207, 1468, 371, 9, 48, "Message",ExpressionUUID->"97068e41-1707-48d1-bd63-2fa0b724bf13"],
Cell[52581, 1479, 565, 12, 35, "Message",ExpressionUUID->"38b84b37-ded9-46e1-a5b6-4e262b92ebf3"],
Cell[53149, 1493, 238, 3, 42, "Output",ExpressionUUID->"ea669b28-f8a9-4c6b-8f68-d43511b4289e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53424, 1501, 207, 3, 37, "Input",ExpressionUUID->"637054d7-2211-426f-9332-831ca2598ecc"],
Cell[53634, 1506, 12601, 308, 269, "Output",ExpressionUUID->"b7b59771-676b-4d3a-b281-8bab5cb9b7b1"]
}, Open  ]],
Cell[66250, 1817, 302, 7, 37, "Input",ExpressionUUID->"89f40402-c856-4e25-8d17-da0734c967b1"],
Cell[CellGroupData[{
Cell[66577, 1828, 245, 4, 37, "Input",ExpressionUUID->"4f401ed9-87ae-4daf-87d4-992140b0b0fc"],
Cell[66825, 1834, 689, 19, 75, "Output",ExpressionUUID->"8e7108f3-437a-414a-9346-788827360f38"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67551, 1858, 1365, 37, 148, "Input",ExpressionUUID->"52ae8979-ed09-44b9-8951-a81d4796d1ca"],
Cell[68919, 1897, 1326, 36, 136, "Output",ExpressionUUID->"222419d2-3469-42de-8848-a7f8195b4b38"]
}, Open  ]],
Cell[70260, 1936, 187, 4, 37, "Input",ExpressionUUID->"8935511f-29f8-4bdd-bc09-432819f9c0cc"],
Cell[CellGroupData[{
Cell[70472, 1944, 453, 10, 37, "Input",ExpressionUUID->"fbb14f22-65d4-4744-b351-a478c8b31d81"],
Cell[70928, 1956, 1400, 40, 140, "Output",ExpressionUUID->"2fbdd491-f6f6-423c-b674-f1b5c83bd3a5"]
}, Open  ]],
Cell[72343, 1999, 458, 13, 65, "Input",ExpressionUUID->"fec23006-3290-4a5f-ad31-c57580631694"],
Cell[CellGroupData[{
Cell[72826, 2016, 188, 3, 37, "Input",ExpressionUUID->"56e662db-e2a8-4ad2-8d04-b9dd15ceb3aa"],
Cell[73017, 2021, 9493, 238, 202, "Output",ExpressionUUID->"6c21cd8e-2293-464d-b33f-e3eb6eb8474f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82547, 2264, 222, 4, 37, "Input",ExpressionUUID->"3f4f23cf-1a95-4147-be8a-f8ae68053a54"],
Cell[82772, 2270, 171, 3, 42, "Output",ExpressionUUID->"27157d6e-dfc4-462c-8718-06c79dbc0581"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82980, 2278, 212, 4, 37, "Input",ExpressionUUID->"b0831ccd-a1ca-4348-9856-d262fbef0b6b"],
Cell[83195, 2284, 29897, 669, 890, "Output",ExpressionUUID->"b1347944-6880-4058-81b1-b2b0faf1f06e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113129, 2958, 935, 21, 142, "Input",ExpressionUUID->"31769286-0c53-43d8-b932-bcc58de9db9d"],
Cell[114067, 2981, 470, 9, 42, "Output",ExpressionUUID->"17d7019f-5ed3-4c02-8e46-5a0882ce312d"]
}, Open  ]],
Cell[114552, 2993, 189, 3, 44, "Text",ExpressionUUID->"9d7718e5-1b48-49ae-b365-d8bedb4061f0"],
Cell[CellGroupData[{
Cell[114766, 3000, 669, 17, 142, "Input",ExpressionUUID->"06f0ad2f-5a9f-486a-859a-9b950e908833"],
Cell[115438, 3019, 350, 7, 42, "Output",ExpressionUUID->"29b050ba-1c67-4d4f-8b5a-91acf830bbc9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115825, 3031, 662, 17, 116, "Input",ExpressionUUID->"ea3ce0b5-4e7d-499c-8e06-826e66ca4b9e"],
Cell[116490, 3050, 265, 6, 42, "Output",ExpressionUUID->"f99af2c2-61bb-4aa2-9624-0d980a800cdb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116792, 3061, 659, 17, 85, "Input",ExpressionUUID->"1022c59d-4684-4b68-8f9e-84c5d5a65428"],
Cell[117454, 3080, 2006, 60, 127, "Output",ExpressionUUID->"a82b7215-895d-4ba8-b93e-b86970792410"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119497, 3145, 2191, 62, 169, "Input",ExpressionUUID->"a3daa6a9-3593-4aac-a361-71fcee456b86"],
Cell[121691, 3209, 1826, 57, 127, "Output",ExpressionUUID->"e16c0a16-b8e9-48e0-a524-ee5b148951b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123554, 3271, 2590, 73, 319, "Input",ExpressionUUID->"442d100c-fef6-4f20-b9ed-0b01eaf1dae8"],
Cell[126147, 3346, 399, 8, 42, "Output",ExpressionUUID->"e058b198-15ed-4b19-b408-7c5964cf1b97"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126583, 3359, 2690, 75, 319, "Input",ExpressionUUID->"2ab1c406-7fdc-4e1b-b5c9-916f70b04c98"],
Cell[129276, 3436, 353, 7, 42, "Output",ExpressionUUID->"29c1c67b-ddd3-4928-bd81-ce820977c613"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129666, 3448, 2664, 75, 319, "Input",ExpressionUUID->"3eafae2c-1f37-4e45-adf8-4220dffed379"],
Cell[132333, 3525, 155, 2, 42, "Output",ExpressionUUID->"5c2742ee-441f-43e9-9b62-087ab02da900"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132525, 3532, 2791, 77, 345, "Input",ExpressionUUID->"cc45709a-a410-424e-98b6-5ed0bb2ae046"],
Cell[135319, 3611, 352, 7, 42, "Output",ExpressionUUID->"6b936d38-2b0e-4bc3-b82a-405ba72d5e15"]
}, Open  ]],
Cell[135686, 3621, 198, 3, 44, "Text",ExpressionUUID->"4efc5b07-c473-479c-8c0b-3b348942935c"],
Cell[CellGroupData[{
Cell[135909, 3628, 673, 18, 142, "Input",ExpressionUUID->"c6939326-8514-4466-b7d6-f0b9f303332d"],
Cell[136585, 3648, 353, 8, 42, "Output",ExpressionUUID->"eba0c951-d09c-4b6a-a758-ab62e54b71e4"]
}, Open  ]],
Cell[136953, 3659, 192, 3, 44, "Text",ExpressionUUID->"962493cd-08d1-4cc6-b691-9060b6894879"],
Cell[CellGroupData[{
Cell[137170, 3666, 673, 18, 142, "Input",ExpressionUUID->"63deb404-a6ee-4b1d-a94a-f32c2d067b25"],
Cell[137846, 3686, 354, 9, 35, "Message",ExpressionUUID->"20474903-aa67-46fc-a69e-4da02d72eadd"],
Cell[138203, 3697, 753, 15, 78, "Message",ExpressionUUID->"f1133b1d-4f73-4d0c-9539-aec85b4e9aeb"],
Cell[138959, 3714, 355, 8, 42, "Output",ExpressionUUID->"9dff5f99-9f6f-4795-819f-01690aa18fb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139351, 3727, 673, 18, 142, "Input",ExpressionUUID->"f2cfe42d-7bfb-4158-a33b-b2bf04cf9066"],
Cell[140027, 3747, 354, 9, 35, "Message",ExpressionUUID->"7252871c-bf98-4d1b-9c2b-a51d2da6a660"],
Cell[140384, 3758, 750, 14, 78, "Message",ExpressionUUID->"99783b6a-dfbb-4337-a127-2bbdcce7c8b9"],
Cell[141137, 3774, 354, 8, 42, "Output",ExpressionUUID->"68625bd8-a6e5-49f5-abc7-c2c9ffbdb5fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141528, 3787, 527, 10, 37, "Input",ExpressionUUID->"c7e74368-29e8-4223-bbb2-423ec7d30ff8"],
Cell[142058, 3799, 1733, 50, 144, "Output",ExpressionUUID->"31354e10-1549-4715-8274-745e910bdd20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143828, 3854, 1453, 44, 147, "Input",ExpressionUUID->"4bc04756-7b66-4c4e-850e-d7d430991f81"],
Cell[145284, 3900, 1353, 42, 144, "Output",ExpressionUUID->"cc46e960-0a8d-4bbe-92fa-d0e4fd76fee9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146674, 3947, 267, 6, 37, "Input",ExpressionUUID->"b0cc0a0c-3ef0-49b7-9452-dd17d254c0d3"],
Cell[146944, 3955, 426, 11, 71, "Output",ExpressionUUID->"40509be0-7a9c-420f-abf3-9538f124ee40"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147407, 3971, 752, 22, 80, "Input",ExpressionUUID->"13b95085-224a-41dd-9350-3535649e88d6"],
Cell[148162, 3995, 3434, 75, 298, "Output",ExpressionUUID->"c03af078-579d-4881-8706-bd7ac95dc668"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151633, 4075, 1596, 41, 266, "Input",ExpressionUUID->"d1387008-7754-48a6-8fee-9eec71673eac"],
Cell[153232, 4118, 10552, 217, 301, "Output",ExpressionUUID->"c694797a-8ce3-4d64-9d8f-bfabe6ea4642"]
}, Open  ]],
Cell[163799, 4338, 1881, 50, 230, "Input",ExpressionUUID->"902083d3-83f4-40e6-bc9c-6f2498f8f534"],
Cell[165683, 4390, 3716, 88, 363, "Input",ExpressionUUID->"8a3a21e1-2763-4f6c-9f06-f5a6c8dc590b"],
Cell[169402, 4480, 1489, 43, 156, "Input",ExpressionUUID->"fda1b91e-6748-43a5-b91a-c14c12be3ec0"],
Cell[CellGroupData[{
Cell[170916, 4527, 485, 11, 37, "Input",ExpressionUUID->"184b1b4f-e42d-4bdb-ae74-e502715d3923"],
Cell[171404, 4540, 25949, 563, 2703, "Output",ExpressionUUID->"44450b3f-c3fe-41dd-bff7-7440559711d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197390, 5108, 202, 3, 37, "Input",ExpressionUUID->"adca31b9-c4cd-41ca-b00b-3235cc4ede0f"],
Cell[197595, 5113, 49149, 1096, 1851, "Output",ExpressionUUID->"405d1d52-7dd9-4def-b0ea-62b439f79e44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246781, 6214, 308, 6, 37, "Input",ExpressionUUID->"8fae915c-e096-4981-96b0-da2d4cb4146f"],
Cell[247092, 6222, 201, 3, 42, "Output",ExpressionUUID->"e4e9ac71-5ba6-41fc-9f6f-ced49707f8c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247330, 6230, 737, 18, 37, "Input",ExpressionUUID->"a5408c28-f659-4c52-a5dd-f51a0e828e8b"],
Cell[248070, 6250, 537, 11, 42, "Output",ExpressionUUID->"f18e7f76-f1a0-4868-a7c4-a9912036a093"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248644, 6266, 511, 12, 37, "Input",ExpressionUUID->"5340b63e-326d-400b-80fe-29217f5665c1"],
Cell[249158, 6280, 247, 3, 42, "Output",ExpressionUUID->"a2eaf7e0-c063-41ea-8438-90b5a0cda823"]
}, Open  ]],
Cell[249420, 6286, 1262, 31, 142, "Input",ExpressionUUID->"e2aa1d22-ca0f-401b-a32d-739e0e8d4b6a"],
Cell[CellGroupData[{
Cell[250707, 6321, 423, 11, 37, "Input",ExpressionUUID->"1de836b9-7218-4f82-8aca-e425fab0e78f"],
Cell[251133, 6334, 6536, 169, 639, "Output",ExpressionUUID->"69eda950-9d1d-4d7a-a16c-f7dee72dca3d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257706, 6508, 206, 4, 37, "Input",ExpressionUUID->"e891c443-55bb-458a-9216-09cdd2d1a7db"],
Cell[257915, 6514, 11094, 274, 204, "Output",ExpressionUUID->"0a36ba6c-273c-4c95-ac03-f9881cfe3d9c"]
}, Open  ]],
Cell[269024, 6791, 164, 3, 44, "Text",ExpressionUUID->"d8076656-0c10-4e27-a4d9-adf673dbdeaf"],
Cell[CellGroupData[{
Cell[269213, 6798, 1028, 30, 121, "Input",ExpressionUUID->"d409792f-2790-4757-8116-f648c02d46e6"],
Cell[270244, 6830, 170, 2, 42, "Output",ExpressionUUID->"13ad87e0-0ceb-4091-8c27-0a21d45f8b0a"]
}, Open  ]],
Cell[270429, 6835, 350, 7, 73, "Text",ExpressionUUID->"5688ec3e-b570-4369-b5ea-c77ed8ebf29c"],
Cell[270782, 6844, 1240, 42, 62, "Input",ExpressionUUID->"a7ca4743-4ec9-4829-9a19-199df30ca52e"],
Cell[CellGroupData[{
Cell[272047, 6890, 513, 15, 62, "Input",ExpressionUUID->"7da5075a-58f8-4db9-ae2d-dda168e062c2"],
Cell[272563, 6907, 186, 4, 56, "Output",ExpressionUUID->"b28cf09a-0006-4e07-bf76-662ad28a9d7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272786, 6916, 819, 26, 62, "Input",ExpressionUUID->"36054542-7234-4252-910d-d2d4f23dba68"],
Cell[273608, 6944, 212, 4, 42, "Output",ExpressionUUID->"c25ec80a-dd83-4989-9668-9addb2a7925f"]
}, Open  ]],
Cell[273835, 6951, 614, 13, 217, "Text",ExpressionUUID->"1c09390c-2346-483c-888f-c76e897fea14"],
Cell[CellGroupData[{
Cell[274474, 6968, 658, 19, 37, "Input",ExpressionUUID->"87d26da4-646d-4af8-ba46-c48ddba41378"],
Cell[275135, 6989, 223, 3, 42, "Output",ExpressionUUID->"907f95da-ed77-4aa2-b24c-050fb70e1459"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275395, 6997, 834, 26, 79, "Input",ExpressionUUID->"d8d1b427-2bec-4493-8b68-52d5a84f5523"],
Cell[276232, 7025, 345, 8, 60, "Output",ExpressionUUID->"13f64843-62f8-44f6-9029-64cec546c99b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276614, 7038, 310, 9, 41, "Input",ExpressionUUID->"4392c42a-fe73-4b96-b174-39fd1346e1cd"],
Cell[276927, 7049, 261, 7, 60, "Output",ExpressionUUID->"7ffb63d6-c528-4c19-a8bb-b6fb269a6931"]
}, Open  ]],
Cell[277203, 7059, 433, 13, 44, "Text",ExpressionUUID->"8ea68f43-ff33-4d04-ad09-cbed79290a0c"],
Cell[CellGroupData[{
Cell[277661, 7076, 1297, 42, 73, "Input",ExpressionUUID->"ece7a311-3d67-4bf3-9f87-569289594c44"],
Cell[278961, 7120, 223, 4, 42, "Output",ExpressionUUID->"b080d9c1-2a64-4bb9-89da-bbe14f938df3"]
}, Open  ]],
Cell[279199, 7127, 887, 18, 246, "Text",ExpressionUUID->"9f2c8335-8051-4912-84bf-1e7e96cb1819"],
Cell[280089, 7147, 207, 3, 37, "Input",ExpressionUUID->"8270c29d-f423-4761-9feb-02e24590aecf"],
Cell[CellGroupData[{
Cell[280321, 7154, 621, 19, 58, "Input",ExpressionUUID->"3d7bc8cc-34e1-404c-a472-765675cf70d3"],
Cell[280945, 7175, 2845, 84, 143, "Output",ExpressionUUID->"13e76a97-f990-4cda-aa94-d8e858984636"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283827, 7264, 619, 19, 60, "Input",ExpressionUUID->"309d2158-d8a7-486f-bcff-d7619f17e884"],
Cell[284449, 7285, 2430, 73, 143, "Output",ExpressionUUID->"d7d0d7eb-88e7-43a9-b019-b79af2c13a70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286916, 7363, 1002, 32, 91, "Input",ExpressionUUID->"845a3ec5-bbe9-4c4b-bc5f-7bbd110858dd"],
Cell[287921, 7397, 915, 30, 95, "Output",ExpressionUUID->"9af0ff5a-3541-4a44-9801-0c6e72c9bc25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288873, 7432, 258, 5, 37, "Input",ExpressionUUID->"a75ce33f-f4ba-402b-866f-229ce59a6cc2"],
Cell[289134, 7439, 212, 4, 42, "Output",ExpressionUUID->"f3c30cad-1fe6-452d-957c-ef26a95cb71e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289383, 7448, 506, 15, 37, "Input",ExpressionUUID->"54ab9694-43dc-4136-bbe9-9e127fd725a7"],
Cell[289892, 7465, 814, 28, 68, "Output",ExpressionUUID->"2bf163a2-a4e7-4627-a42e-33d4426490fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290743, 7498, 194, 4, 37, "Input",ExpressionUUID->"0ffcaa5a-b285-40ed-96a5-9314f18094fc"],
Cell[290940, 7504, 292, 8, 58, "Output",ExpressionUUID->"4ec30981-07e7-490c-92ed-441dd6440ea2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291269, 7517, 820, 25, 85, "Input",ExpressionUUID->"2376a477-9066-4efa-adad-bb9d8eddfbfd"],
Cell[292092, 7544, 2045, 60, 111, "Output",ExpressionUUID->"e27f8d1f-876e-43d3-a794-cfce3f7896ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294174, 7609, 866, 27, 85, "Input",ExpressionUUID->"f5e19671-0a96-4635-9685-02b6c8a92165"],
Cell[295043, 7638, 2021, 60, 111, "Output",ExpressionUUID->"bfd09329-0b00-4585-b2d7-fd62f277aac3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297101, 7703, 221, 5, 37, "Input",ExpressionUUID->"f4987f8e-5807-42d0-831f-2a167fcc7dbf"],
Cell[297325, 7710, 290, 8, 57, "Output",ExpressionUUID->"e683ee4c-a30d-4bb5-89dd-26d6af107a3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297652, 7723, 355, 11, 69, "Input",ExpressionUUID->"c82252fc-2523-4a0a-be36-d7c95581ec59"],
Cell[298010, 7736, 485, 15, 70, "Output",ExpressionUUID->"5cc99ccd-07d9-4643-8dd6-39449796c5cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298532, 7756, 325, 9, 57, "Input",ExpressionUUID->"3394d068-030b-4851-812f-fda18df01874"],
Cell[298860, 7767, 318, 9, 62, "Output",ExpressionUUID->"bdfed8dc-63d4-425b-bf49-4c2eaf388017"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299215, 7781, 418, 13, 70, "Input",ExpressionUUID->"82352115-c1e5-4f28-b5b0-9bd7c1c33d60"],
Cell[299636, 7796, 387, 9, 35, "Message",ExpressionUUID->"328ec849-4477-493f-9f75-ec5559ce3ec9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300060, 7810, 474, 14, 70, "Input",ExpressionUUID->"f27e4516-fe53-41f7-8a86-6ea2b4538775"],
Cell[300537, 7826, 845, 25, 86, "Output",ExpressionUUID->"13de0012-758c-44a3-b1e9-1d5d41a164e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301419, 7856, 357, 10, 37, "Input",ExpressionUUID->"96b13264-55c3-4b65-9a63-9429377857cb"],
Cell[301779, 7868, 384, 9, 35, "Message",ExpressionUUID->"a8a184a5-e8fb-46ad-84a5-a8479ce46fc2"],
Cell[302166, 7879, 384, 9, 35, "Message",ExpressionUUID->"a357428e-c153-437d-8d66-c7eb7698d63d"]
}, Open  ]],
Cell[302565, 7891, 253, 7, 37, "Input",ExpressionUUID->"9255097c-00f7-4114-909b-7944d0b9021c"],
Cell[CellGroupData[{
Cell[302843, 7902, 320, 7, 37, "Input",ExpressionUUID->"fdbb1b36-c95d-4130-9d4c-7077dbc7521d"],
Cell[303166, 7911, 295, 8, 42, "Output",ExpressionUUID->"29e7e1bc-ea83-4470-a1a4-5acedc20ec5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303498, 7924, 477, 12, 56, "Input",ExpressionUUID->"608905dd-baa3-4c57-88a0-828a109fc46d"],
Cell[303978, 7938, 155, 3, 42, "Output",ExpressionUUID->"0d6dd292-9097-4c66-8feb-428ed5e6af44"]
}, Open  ]],
Cell[304148, 7944, 2627, 77, 153, "Input",ExpressionUUID->"5c9a8287-4962-42fc-a0e0-c31495697623"],
Cell[CellGroupData[{
Cell[306800, 8025, 1058, 30, 84, "Input",ExpressionUUID->"b67738ce-3ebc-40e2-b1d5-612b8a55258e"],
Cell[307861, 8057, 228, 4, 42, "Output",ExpressionUUID->"e45fec5f-efec-44a4-9146-576677feb029"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308126, 8066, 638, 19, 84, "Input",ExpressionUUID->"6785a9a9-e275-4a21-98eb-b6d09644f6c7"],
Cell[308767, 8087, 508, 15, 81, "Output",ExpressionUUID->"d51456fe-8c0a-4158-a0b1-ea8f5184c146"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309312, 8107, 556, 17, 84, "Input",ExpressionUUID->"2c0a6467-14e0-4c3d-a2cf-3cfa2915d3b4"],
Cell[309871, 8126, 484, 15, 81, "Output",ExpressionUUID->"7e037cb7-87a4-488a-bcda-ecd204b9b155"]
}, Open  ]],
Cell[310370, 8144, 484, 16, 84, "Input",ExpressionUUID->"9b695e89-e28e-4a99-972f-5d178509463a"],
Cell[310857, 8162, 484, 16, 84, "Input",ExpressionUUID->"6262114f-54c6-4841-b1e9-bf659c71acc8"],
Cell[CellGroupData[{
Cell[311366, 8182, 1087, 31, 82, "Input",ExpressionUUID->"1718b858-7997-4483-8c9f-5324d2694f79"],
Cell[312456, 8215, 402, 7, 42, "Output",ExpressionUUID->"2347f57a-82c1-486f-8611-843a1ffd7092"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312895, 8227, 1271, 36, 173, "Input",ExpressionUUID->"1fee98dd-93e2-4531-90a8-8ed9687b560f"],
Cell[314169, 8265, 294, 5, 42, "Output",ExpressionUUID->"47e35f0e-49e7-4101-899c-5ade70315ffb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314500, 8275, 637, 19, 81, "Input",ExpressionUUID->"da6ed9ce-be8d-4755-a699-52bb69d54002"],
Cell[315140, 8296, 173, 3, 42, "Output",ExpressionUUID->"d4ccd8c0-4110-4928-8780-1bb19f3ece74"]
}, Open  ]],
Cell[315328, 8302, 9856, 167, 72, "Input",ExpressionUUID->"424ed220-e85f-4211-bd40-d8c29fb5ce09"],
Cell[CellGroupData[{
Cell[325209, 8473, 1416, 42, 168, "Input",ExpressionUUID->"22f1a2b3-360b-48b4-be31-5df723cecc68"],
Cell[326628, 8517, 672, 20, 61, "Output",ExpressionUUID->"ae512aec-aac1-4dca-8fed-2f3e6461744b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327337, 8542, 1298, 33, 149, "Input",ExpressionUUID->"2e11e8e4-a6c8-49f1-be9b-e86f478b3906"],
Cell[328638, 8577, 575, 18, 81, "Output",ExpressionUUID->"1a503c79-7adb-43a9-bc4b-3766513a7d0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329250, 8600, 317, 9, 57, "Input",ExpressionUUID->"1071b82b-ca14-4aae-b888-cc483f927556"],
Cell[329570, 8611, 321, 9, 59, "Output",ExpressionUUID->"461704cd-361a-44fa-8d9f-e12f0a8369ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329928, 8625, 591, 16, 57, "Input",ExpressionUUID->"c2a9d9df-4642-4355-a3cf-5e68bc56958e"],
Cell[330522, 8643, 171, 3, 42, "Output",ExpressionUUID->"bc76789d-44ad-4812-acf0-f35c43890693"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330730, 8651, 1121, 35, 116, "Input",ExpressionUUID->"ef33ab40-9ae8-4eb2-bb8f-2d126b0047c3"],
Cell[331854, 8688, 234, 5, 42, "Output",ExpressionUUID->"6b0090aa-5d9a-4137-bb48-8929002d6c94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332125, 8698, 966, 31, 84, "Input",ExpressionUUID->"04a99da5-0078-4c18-8587-3f99ed632138"],
Cell[333094, 8731, 520, 13, 69, "Output",ExpressionUUID->"7b23c4b8-c459-4c37-b488-df7849d2494f"]
}, Open  ]],
Cell[333629, 8747, 561, 17, 84, "Input",ExpressionUUID->"cab787b3-b30f-4f81-be90-23d40a86285b"],
Cell[334193, 8766, 531, 18, 84, "Input",ExpressionUUID->"91ffc0f6-43c6-42a8-bc33-9597c73823a5"],
Cell[334727, 8786, 594, 19, 84, "Input",ExpressionUUID->"7be4b41e-5ee5-4bc2-bf76-a6a0c37f19ae"],
Cell[CellGroupData[{
Cell[335346, 8809, 362, 10, 57, "Input",ExpressionUUID->"9704fde1-a16d-4c58-8466-56a74480c48b"],
Cell[335711, 8821, 251, 6, 59, "Output",ExpressionUUID->"5adb0c5b-78b5-483b-ad45-9e86355a3765"]
}, Open  ]],
Cell[335977, 8830, 467, 15, 77, "Input",ExpressionUUID->"65470693-3657-4494-9ba2-79da4987949a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336481, 8850, 178, 3, 67, "Subsection",ExpressionUUID->"c2c2f260-dcae-4da4-9aaa-5001378fd582"],
Cell[CellGroupData[{
Cell[336684, 8857, 380, 9, 37, "Input",ExpressionUUID->"48a8177c-2c16-426e-92a1-c113077cd9ad"],
Cell[337067, 8868, 160, 3, 42, "Output",ExpressionUUID->"43f12175-de06-4f52-bf66-c9ed205b0b52"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337264, 8876, 676, 15, 64, "Input",ExpressionUUID->"3052091d-697e-492d-b79e-8b291ba7943b"],
Cell[337943, 8893, 2651, 74, 101, "Output",ExpressionUUID->"9efcf3bc-8a10-4294-abb2-afa9c12122ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340631, 8972, 640, 15, 64, "Input",ExpressionUUID->"23ce5b18-b53f-4cc4-941c-88891c74e484"],
Cell[341274, 8989, 2627, 74, 101, "Output",ExpressionUUID->"aeb58b2d-0314-46f0-8f8d-c3a49ac0ddba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343938, 9068, 563, 13, 64, "Input",ExpressionUUID->"8a2ff80c-7139-489c-830e-7c5d5d2a431a"],
Cell[344504, 9083, 364, 10, 65, "Output",ExpressionUUID->"46884b2f-e6bc-4211-9d23-cd1ef8c6b02b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344905, 9098, 725, 16, 64, "Input",ExpressionUUID->"b4b84bab-f723-4dbd-bd56-758ccdd90078"],
Cell[345633, 9116, 827, 25, 97, "Output",ExpressionUUID->"91ea3310-f5a9-4fb1-a81b-4570a8680d27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346497, 9146, 878, 21, 90, "Input",ExpressionUUID->"ba2e1ab1-bbeb-4a38-b74f-e7ae00f4e800"],
Cell[347378, 9169, 818, 25, 126, "Output",ExpressionUUID->"4ddb95c3-f099-4dd4-892b-121a1dad31e0"]
}, Open  ]],
Cell[348211, 9197, 179, 3, 44, "Text",ExpressionUUID->"d740445e-55e8-4904-bbcd-e5e6d35617c9"],
Cell[348393, 9202, 2771, 80, 114, "Input",ExpressionUUID->"0208b07d-24f3-4376-ba2b-32692f09dca8"],
Cell[351167, 9284, 345, 5, 44, "Text",ExpressionUUID->"26317a3d-1018-4b68-b7b9-4a59a5713eb9"],
Cell[351515, 9291, 3064, 86, 110, "Input",ExpressionUUID->"126ab094-f7c3-44be-a64e-e048b1b39882"],
Cell[354582, 9379, 251, 4, 44, "Text",ExpressionUUID->"7a0005fb-e634-4838-910a-494712ec473d"],
Cell[354836, 9385, 218, 4, 44, "Text",ExpressionUUID->"8d4b5a5d-0271-452a-a14c-c7c66db42573"],
Cell[355057, 9391, 2838, 76, 86, "Input",ExpressionUUID->"526dd0a7-9f18-41fa-92e2-bb97ba215016"],
Cell[CellGroupData[{
Cell[357920, 9471, 4860, 136, 178, "Input",ExpressionUUID->"0d91d143-d4a2-4b63-970a-82a6df6748fd"],
Cell[362783, 9609, 3313, 95, 175, "Output",ExpressionUUID->"d4c9dbea-d513-4877-8166-538c397912bd"]
}, Open  ]],
Cell[366111, 9707, 637, 15, 79, "Text",ExpressionUUID->"af396baa-ab25-42a2-852e-bbd2b1aea768"],
Cell[366751, 9724, 967, 30, 93, "Input",ExpressionUUID->"32f118fa-f27f-4232-a171-6da028d74ddb"],
Cell[367721, 9756, 238, 6, 44, "Text",ExpressionUUID->"f01cd0d8-d8c0-4df7-8d76-32d4b6e90beb"],
Cell[CellGroupData[{
Cell[367984, 9766, 5050, 138, 178, "Input",ExpressionUUID->"373980b8-2ce6-43b2-848b-905c5c65500d"],
Cell[373037, 9906, 1986, 61, 119, "Output",ExpressionUUID->"c1d1abb0-34ca-4f48-8fd3-ee78130d35a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375060, 9972, 5050, 138, 178, "Input",ExpressionUUID->"28e7f6e6-72fe-4486-8ddf-a5098444665e"],
Cell[380113, 10112, 2719, 82, 179, "Output",ExpressionUUID->"aa25b0a3-3dd7-465a-9aa1-0dfc28205630"]
}, Open  ]],
Cell[382847, 10197, 556, 14, 50, "Text",ExpressionUUID->"76d82a0f-49b6-4ec4-9f00-60ef94a2d9ac"],
Cell[383406, 10213, 1169, 32, 85, "Input",ExpressionUUID->"863a492e-7143-4627-9979-9193a02f9a61"],
Cell[CellGroupData[{
Cell[384600, 10249, 493, 14, 58, "Input",ExpressionUUID->"a08ccb23-5877-492e-9017-174501b5d469"],
Cell[385096, 10265, 179, 3, 42, "Output",ExpressionUUID->"67f23aea-d402-48e1-b90f-9a6a3acfa11f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[385312, 10273, 467, 13, 57, "Input",ExpressionUUID->"b99d5b32-3cb2-4193-8d12-0fa71369cba6"],
Cell[385782, 10288, 7526, 143, 303, "Output",ExpressionUUID->"d4f9a08a-6ba2-4957-8063-794a1fd37167"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393345, 10436, 1349, 36, 128, "Input",ExpressionUUID->"dc7654a6-cb5b-4e78-8e67-24723dbfa122"],
Cell[394697, 10474, 1391, 43, 118, "Output",ExpressionUUID->"1b0b360f-e89f-4373-9441-24b68fe46370"]
}, Open  ]],
Cell[396103, 10520, 296, 6, 73, "Text",ExpressionUUID->"8902d481-289c-41d0-be12-53cedbbacfe2"],
Cell[396402, 10528, 121001, 1989, 196, "Input",ExpressionUUID->"6b4aedb4-d4de-4ed5-9365-b475d958a0cf"],
Cell[517406, 12519, 233, 5, 37, "Input",ExpressionUUID->"811ce1d7-b5c7-4584-87eb-b99f1ba29f2e"],
Cell[517642, 12526, 265, 8, 58, "Input",ExpressionUUID->"aac466e5-95e2-43af-97c5-a586cb54fdf6"],
Cell[517910, 12536, 265, 6, 37, "Input",ExpressionUUID->"f7600275-f167-4a1d-80a2-a23d5bd41b1c"],
Cell[518178, 12544, 269, 8, 58, "Input",ExpressionUUID->"1f6cf60e-f4a9-491c-80df-7a06912da726"],
Cell[CellGroupData[{
Cell[518472, 12556, 1330, 38, 128, "Input",ExpressionUUID->"85d399de-06a2-4007-996e-c2c80cc9ffb4"],
Cell[519805, 12596, 4121, 86, 303, "Output",ExpressionUUID->"56d8f709-aa53-42ba-b407-89b3ff366981"]
}, Open  ]],
Cell[523941, 12685, 2300, 66, 92, "Input",ExpressionUUID->"2f1d8c1c-e980-484a-bcd9-1b8a26f727f0"],
Cell[CellGroupData[{
Cell[526266, 12755, 2954, 80, 133, "Input",ExpressionUUID->"a449b372-2da6-413d-97c1-53bf90073f4c"],
Cell[529223, 12837, 6813, 132, 303, "Output",ExpressionUUID->"d86758f2-ce9b-4acc-a46e-a79996234605"]
}, Open  ]],
Cell[CellGroupData[{
Cell[536073, 12974, 3229, 86, 131, "Input",ExpressionUUID->"e73aef08-a521-4a92-8a80-f64db9b1a9b9"],
Cell[539305, 13062, 8996, 167, 303, "Output",ExpressionUUID->"7a3c239c-f809-4546-b21f-08af472476df"]
}, Open  ]],
Cell[548316, 13232, 839, 26, 93, "Input",ExpressionUUID->"8ef795b0-22f3-48e4-8d7e-61aae382f36c"],
Cell[CellGroupData[{
Cell[549180, 13262, 1351, 39, 135, "Input",ExpressionUUID->"aa121e88-b9fa-4435-8241-a4f7bbb31080"],
Cell[550534, 13303, 13898, 247, 304, "Output",ExpressionUUID->"2af931a9-4e9c-4216-b7e6-0374c07f18c5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[564481, 13556, 211, 4, 67, "Subsection",ExpressionUUID->"36a851ae-2a06-40ec-b4af-f1203509d13e"],
Cell[564695, 13562, 1038, 29, 133, "Input",ExpressionUUID->"3557b282-db05-4082-87f1-3dca9736fefd"],
Cell[CellGroupData[{
Cell[565758, 13595, 134, 3, 37, "Input",ExpressionUUID->"fb9894ff-9498-483c-9334-8a9810342d80"],
Cell[565895, 13600, 19602, 495, 265, "Output",ExpressionUUID->"8f411182-86ea-45e2-a18f-4e7581737ea8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[585534, 14100, 434, 11, 37, "Input",ExpressionUUID->"7db818b9-0b23-4bb7-afda-86f539a16a5b"],
Cell[585971, 14113, 8479, 234, 341, "Output",ExpressionUUID->"cfe68f95-c9b9-4cc0-97b0-4ca68d7a4e83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[594487, 14352, 1254, 33, 116, "Input",ExpressionUUID->"416e4f61-f21b-4d34-ad71-15160b5b0556"],
Cell[595744, 14387, 321, 9, 60, "Output",ExpressionUUID->"e1b08aa2-b8cc-482a-b938-fa2e6ca9c37b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[596102, 14401, 681, 19, 54, "Input",ExpressionUUID->"ba3006c0-45a5-42e1-a3ab-09de5145a215"],
Cell[596786, 14422, 339, 8, 42, "Output",ExpressionUUID->"30f92225-be6a-4522-b3d5-7dd9dc90d0d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[597162, 14435, 1112, 31, 99, "Input",ExpressionUUID->"18fbf7cb-fcc5-4b10-9f94-5dc47ac616f6"],
Cell[598277, 14468, 3287, 102, 338, "Output",ExpressionUUID->"928ac26e-0b2e-43f7-850f-42a69197ed7e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[601613, 14576, 199, 3, 67, "Subsection",ExpressionUUID->"bd2d772f-2c49-4c0c-ac10-0d4c650c123f"],
Cell[CellGroupData[{
Cell[601837, 14583, 312, 7, 37, "Input",ExpressionUUID->"48e4d3b9-3800-40e8-8219-10fe60e6c5e7"],
Cell[602152, 14592, 554, 16, 69, "Output",ExpressionUUID->"a9e643cb-1a7e-41cd-bf20-849bca40c392"]
}, Open  ]],
Cell[CellGroupData[{
Cell[602743, 14613, 751, 23, 62, "Input",ExpressionUUID->"13ea5f1a-d04d-41e8-836b-610f66f948af"],
Cell[603497, 14638, 153, 3, 42, "Output",ExpressionUUID->"efcbefd9-5860-4bd1-9369-9dbf74d9d947"]
}, Open  ]],
Cell[CellGroupData[{
Cell[603687, 14646, 1150, 32, 126, "Input",ExpressionUUID->"79687f7c-06ee-41e8-bf76-9c5d422d0a4a"],
Cell[604840, 14680, 182, 3, 42, "Output",ExpressionUUID->"6c253bde-9d9c-4adb-bf19-beecc30499b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[605059, 14688, 223, 5, 37, "Input",ExpressionUUID->"90314163-ca50-42e3-af7b-2d1212385208"],
Cell[605285, 14695, 240, 6, 42, "Output",ExpressionUUID->"fd87b2e0-555e-4a21-994e-c27153628d67"]
}, Open  ]],
Cell[605540, 14704, 214, 4, 37, "Input",ExpressionUUID->"c9e7dfbb-d8ba-49c8-87c7-a6f7b782357a"],
Cell[CellGroupData[{
Cell[605779, 14712, 625, 16, 58, "Input",ExpressionUUID->"a80520cb-8841-4307-b59c-accfabe577bb"],
Cell[606407, 14730, 539, 12, 57, "Message",ExpressionUUID->"3ba60349-d8ce-4298-9fe6-bbb0e6f83253"],
Cell[606949, 14744, 287440, 4789, 469, 195614, 3282, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"8ad5c83d-85f0-440a-9374-8c9c2c090ff5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[894426, 19538, 321, 7, 37, "Input",ExpressionUUID->"aa8264c1-a56e-4135-aed5-abb0c956fd76"],
Cell[894750, 19547, 391, 11, 87, "Output",ExpressionUUID->"fa136e47-33e7-45b4-a3c0-5bc8ac650bef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[895178, 19563, 415, 9, 37, "Input",ExpressionUUID->"67f9c015-f660-4460-bc4f-12a567872aab"],
Cell[895596, 19574, 391, 11, 87, "Output",ExpressionUUID->"15e6ab4e-4252-41f4-b86e-ae2e6ab740d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[896024, 19590, 244, 4, 37, "Input",ExpressionUUID->"f44a4d95-7043-48a5-99b5-8e1968cb357d"],
Cell[896271, 19596, 8243, 206, 160, "Output",ExpressionUUID->"c6120e5e-77ef-451b-986f-eb07b85c038a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[904551, 19807, 179, 2, 37, "Input",ExpressionUUID->"288f91f6-3128-4db8-a11a-2062ce7d4cd2"],
Cell[904733, 19811, 180, 2, 42, "Output",ExpressionUUID->"f2e82080-7f29-4468-9a1f-3d46360fe80a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[904950, 19818, 206, 3, 37, "Input",ExpressionUUID->"64ba8b33-dbb4-4c4c-baea-dcae6f3a7ef2"],
Cell[905159, 19823, 13768, 338, 460, "Output",ExpressionUUID->"83ffaa4f-e7f9-4ba2-a2d0-da0e8084e631"]
}, Open  ]],
Cell[CellGroupData[{
Cell[918964, 20166, 3544, 94, 158, "Input",ExpressionUUID->"22148fb9-6d10-4440-afef-d811d7320b48"],
Cell[922511, 20262, 2974, 80, 115, "Output",ExpressionUUID->"eeff07d0-a8d2-4905-be5e-cf5608eede3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[925522, 20347, 3456, 92, 112, "Input",ExpressionUUID->"7958592e-eeea-4bbd-ae3d-49efee6928d0"],
Cell[928981, 20441, 3131, 85, 115, "Output",ExpressionUUID->"05eae006-1feb-441b-b1d2-503c7a11e3ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[932149, 20531, 3585, 95, 148, "Input",ExpressionUUID->"04ec2743-b251-4bb0-92ab-0f3e06f0419c"],
Cell[935737, 20628, 4512, 124, 185, "Output",ExpressionUUID->"32830a27-ac1b-427b-ad89-ffb861092aa4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[940286, 20757, 4851, 127, 234, "Input",ExpressionUUID->"39885bb0-3033-4144-b655-5f340fee1666"],
Cell[945140, 20886, 4905, 129, 185, "Output",ExpressionUUID->"8eb74e38-1010-4e06-b9e7-35dee1dfd14d"]
}, Open  ]],
Cell[950060, 21018, 220, 4, 44, "Text",ExpressionUUID->"99f4a95c-dd85-4751-aedd-a74edd4cc49b"],
Cell[950283, 21024, 746, 19, 85, "Input",ExpressionUUID->"0f58fa67-bd69-44c9-a657-200036c2cce8"],
Cell[CellGroupData[{
Cell[951054, 21047, 660, 19, 85, "Input",ExpressionUUID->"00b570f2-e87e-4dda-9dd7-60b8ed458f7a"],
Cell[951717, 21068, 5359, 106, 298, "Output",ExpressionUUID->"080897c9-25ec-4cf1-b2f6-a93306e2d220"],
Cell[957079, 21176, 724, 14, 48, "Message",ExpressionUUID->"71ca50eb-66f9-4897-80b7-5b3766c1d74e"],
Cell[957806, 21192, 451, 10, 35, "Message",ExpressionUUID->"afe5b4c6-47f0-4b57-8167-71f0286bb995"]
}, Open  ]],
Cell[CellGroupData[{
Cell[958294, 21207, 1137, 28, 105, "Input",ExpressionUUID->"c8b0ee4b-f569-4437-b721-6f75b43052d3"],
Cell[959434, 21237, 952, 25, 108, "Output",ExpressionUUID->"e2b78c3a-b3cb-4ab7-8bf6-09c72cc8a1b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[960423, 21267, 1123, 30, 105, "Input",ExpressionUUID->"23f2dac4-8e75-4705-b887-6462b068920b"],
Cell[961549, 21299, 1542, 47, 108, "Output",ExpressionUUID->"c0dcf96c-33a0-40c8-abaa-401db4406cb3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[963128, 21351, 824, 22, 95, "Input",ExpressionUUID->"9e895377-c36b-4710-b8eb-04e916ab0336"],
Cell[963955, 21375, 190, 3, 42, "Output",ExpressionUUID->"da9cdfef-11b9-44df-8545-e46342d40c97"]
}, Open  ]],
Cell[CellGroupData[{
Cell[964182, 21383, 786, 21, 95, "Input",ExpressionUUID->"cb2b35b8-6ba3-423a-b58a-cc1a577614e8"],
Cell[964971, 21406, 1920, 56, 87, "Output",ExpressionUUID->"1d9c4329-101d-4e4c-a56c-fd8028d06a3a"]
}, Open  ]]
}, Open  ]]
}
]
*)

