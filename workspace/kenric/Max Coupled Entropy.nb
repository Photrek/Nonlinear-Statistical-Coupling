(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    421353,       8794]
NotebookOptionsPosition[    406641,       8549]
NotebookOutlinePosition[    407064,       8566]
CellTagsIndexPosition[    407021,       8563]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Maximum Coupled Entropy Principle ", "Section",
 CellChangeTimes->{{3.825446562280436*^9, 
  3.825446577642149*^9}},ExpressionUUID->"93a04127-f124-4199-80f1-\
88b294f43aa0"],

Cell[CellGroupData[{

Cell["Maximum Coupled Entropy", "Subsection",
 CellChangeTimes->{{3.825446582008856*^9, 
  3.8254465875519133`*^9}},ExpressionUUID->"975e07bb-4e6a-4e8f-969b-\
ee103c35605b"],

Cell["\<\
Use of Lagrange Method to determine one-dimensional Maximum Entropy \
distribution\
\>", "Text",
 CellChangeTimes->{{3.8254466554559717`*^9, 3.825446671002083*^9}, {
   3.825446704595573*^9, 3.825446707138892*^9}, 
   3.825676803721217*^9},ExpressionUUID->"15a65e83-45d7-4fe1-a024-\
67403bc1ce84"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Assumptions", "=", 
   RowBox[{
    RowBox[{"n", "\[Element]", "PositiveIntegers"}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Kappa]", ",", "\[Alpha]", ",", "\[Sigma]", ",", "\[Mu]", ",", "ZP", 
       ",", "\[Lambda]", ",", "W", ",", "x"}], "}"}], "\[Element]", "Reals"}],
     "&&", 
    RowBox[{"0", "<", "\[Kappa]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Alpha]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Sigma]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Mu]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "ZP", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "\[Lambda]", "<", "\[Infinity]"}], "&&", 
    RowBox[{"0", "<", "W", "<", "\[Infinity]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.825447441948601*^9, 3.82544745742377*^9}, {
  3.825447487660862*^9, 3.825447559364297*^9}, {3.8254478072286997`*^9, 
  3.825447807448332*^9}, {3.825450435630589*^9, 3.8254504621648827`*^9}, {
  3.825672457517437*^9, 3.825672492779811*^9}, {3.825737056384109*^9, 
  3.825737087180092*^9}, {3.825760486643572*^9, 3.825760491223114*^9}, {
  3.8257605703564043`*^9, 3.825760574844262*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"3f0651dc-7d92-42e7-a2c2-f59f490beb43"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"P", "[", 
      RowBox[{"\[Kappa]_", ",", "\[Alpha]_", ",", "n_"}], "]"}], ":=", 
     FractionBox[
      RowBox[{"Table", "[", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["p", "i"], 
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"\[Alpha]", " ", "\[Kappa]"}], 
           RowBox[{"1", "+", "\[Kappa]"}]]}]], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       SuperscriptBox[
        SubscriptBox["p", "i"], 
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"\[Alpha]", " ", "\[Kappa]"}], 
          RowBox[{"1", "+", "\[Kappa]"}]]}]]}]]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"P", "[", 
      RowBox[{"\[Kappa]_", ",", "\[Alpha]_", ",", "n_"}], "]"}], ":=", 
     FractionBox[
      RowBox[{"Table", "[", 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["p", "i"], 
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"\[Alpha]", " ", "\[Kappa]"}], 
           RowBox[{"1", "+", "\[Kappa]"}]]}]], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], "ZP"]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.825446621036313*^9, 3.8254466490030117`*^9}, {
   3.825446684252964*^9, 3.8254466904454737`*^9}, {3.825446764462092*^9, 
   3.82544679564635*^9}, {3.82544691606711*^9, 3.825446926002282*^9}, {
   3.8254469849449778`*^9, 3.8254470242535257`*^9}, {3.8254470739016314`*^9, 
   3.825447302400898*^9}, {3.825447354360231*^9, 3.8254473648638763`*^9}, {
   3.8254474123161*^9, 3.8254474160549917`*^9}, {3.8254479617396507`*^9, 
   3.825447966128365*^9}, {3.825448284364946*^9, 3.825448301429351*^9}, {
   3.825448451920212*^9, 3.8254484918062353`*^9}, {3.825448529922571*^9, 
   3.825448531099852*^9}, {3.8254486576003*^9, 3.825448859615036*^9}, {
   3.8254488899667387`*^9, 3.825448950491768*^9}, {3.8254491388564787`*^9, 
   3.825449146502995*^9}, {3.825449218368449*^9, 3.825449219334895*^9}, {
   3.825449295428706*^9, 3.825449299059107*^9}, {3.825449549195696*^9, 
   3.825449555740664*^9}, {3.825449597932403*^9, 3.825449604748486*^9}, {
   3.825449662286004*^9, 3.825449664276144*^9}, {3.825449703907518*^9, 
   3.8254497107319603`*^9}, {3.825449897139427*^9, 3.825449963567417*^9}, {
   3.825450415777426*^9, 3.8254504292255383`*^9}, {3.825450582995598*^9, 
   3.825450588107828*^9}, {3.8254515562802477`*^9, 3.825451614950954*^9}, 
   3.825451966879183*^9, {3.825452588625526*^9, 3.825452592291318*^9}, {
   3.8254526773852577`*^9, 3.825452679844823*^9}, {3.8254527681246*^9, 
   3.825452775050461*^9}, 3.82567010412652*^9},
 CellLabel->
  "In[128]:=",ExpressionUUID->"8c58bb74-96b7-4a0b-9b70-9f8ed956c874"],

Cell[TextData[{
 "Investigation clarified that \[Alpha] is determined by the highest power of \
the constraint. Given a requirement that the coupled entropy converge to the \
Shannon entropy for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Kappa]", "\[Rule]", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "7c2d9360-4e20-4b23-b657-7d9ea46f3a9c"],
 " and all \[Alpha] a multiplier by ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "\[Alpha]"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "cba25490-962b-40f9-b48a-368eaa16184b"],
 "is needed for both the entropy and the constraint. This investigation is \
limited to just two constraints, the sum of probabilities is one, and one of \
the coupled moments."
}], "Text",
 CellChangeTimes->{{3.825670113645644*^9, 3.825670287720489*^9}, {
  3.825670696632354*^9, 
  3.8256707124168787`*^9}},ExpressionUUID->"f990944c-d5f2-4325-b9bb-\
6ffb38bbc45d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]", "[", 
   RowBox[{"\[Kappa]_", ",", "\[Alpha]_", ",", "\[Sigma]_", ",", "n_"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], 
    RowBox[{"(", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox[
        RowBox[{"P", "[", 
         RowBox[{"\[Kappa]", ",", "\[Alpha]", ",", "n"}], "]"}], 
        RowBox[{"\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           SubscriptBox["p", "i"], ")"}], 
          FractionBox[
           RowBox[{
            RowBox[{"-", "\[Alpha]"}], " ", "\[Kappa]"}], 
           RowBox[{"1", "+", "\[Kappa]"}]]], "-", "1"}], ")"}]}]}], ")"}]}], 
   "+", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox["p", "i"]}], "-", 
   RowBox[{
    FractionBox["1", "\[Sigma]"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox[
       RowBox[{"P", "[", 
        RowBox[{"\[Kappa]", ",", "\[Alpha]", ",", "n"}], "]"}], 
       RowBox[{"\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]], 
      SubscriptBox["x", "i"]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.82567029659055*^9, 3.8256703019068527`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"c2551c66-15f1-47e4-a7c1-ef52ed897b2c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"\[Phi]", "[", 
       RowBox[{"\[Kappa]", ",", "1", ",", "\[Sigma]", ",", "3"}], "]"}], ",", 
      
      SubscriptBox["p", "1"]}], "]"}], "\[Equal]", "0"}], ",", 
   SubscriptBox["p", "1"]}], "]"}]], "Input",
 CellChangeTimes->{{3.82544899290132*^9, 3.825449065310453*^9}, {
  3.8254497784538507`*^9, 3.825449780658084*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"33dd24f1-2332-43a7-9736-4aed2b2ff484"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ifun", 
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"", 2, 11, 2, 31291831078354556112, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8254497668722477`*^9, 3.8254497862242203`*^9}, 
   3.82544997759077*^9, 3.825450503197042*^9, 3.825450594238946*^9, 
   3.8256695398864*^9, 3.825670318704637*^9},
 CellLabel->
  "During evaluation of \
In[11]:=",ExpressionUUID->"73368809-f8d3-40b1-9252-716dfc873661"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["p", "1"], "\[Rule]", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"ZP", " ", "\[Kappa]"}]}], ")"}], " ", "\[Sigma]"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Sigma]", "+", 
          RowBox[{"\[Kappa]", " ", 
           SubscriptBox["x", "1"]}]}], ")"}]}]], ")"}], 
     FractionBox[
      RowBox[{"1", "+", "\[Kappa]"}], "\[Kappa]"]]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.825449068653268*^9, {3.825449775187003*^9, 3.8254497862316427`*^9}, 
   3.825449977614552*^9, 3.8254505032030277`*^9, 3.825450594243881*^9, 
   3.8256695398951597`*^9, 3.825670318709531*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"cb751382-d36f-4071-8031-f0c034e915a1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["p", "1"], "\[Rule]", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"\[Kappa]", " ", 
           FractionBox[
            SubscriptBox["x", "1"], "\[Sigma]"]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "ZP", " ", "\[Kappa]"}]}], ")"}]}]], ")"}], 
     FractionBox[
      RowBox[{"1", "+", "\[Kappa]"}], 
      RowBox[{"-", "\[Kappa]"}]]]}], "}"}], "}"}]], "Input",
 CellChangeTimes->{{3.825450541356284*^9, 3.8254505693395967`*^9}, {
  3.825450646578553*^9, 
  3.8254506785310297`*^9}},ExpressionUUID->"e22cebec-e5a0-4e9f-aa27-\
3a30f5ef20bc"],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", "i"], "=", 
     RowBox[{"i", "-", "1"}]}], ","}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "f7b53f6f-4236-4101-b929-8389fb17ee17"],
 " then ZP is (however, unable to solve since ZP is part of solution)"
}], "Text",
 CellChangeTimes->{{3.8254508558685017`*^9, 3.825450893902566*^9}, {
  3.8254510818545933`*^9, 
  3.825451102059269*^9}},ExpressionUUID->"181e41a6-fa0c-4b0d-b4a9-\
8104a850f6db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZP", "=", 
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "3"], 
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"\[Kappa]", " ", 
             FractionBox[
              RowBox[{"i", "-", "1"}], "\[Sigma]"]}]}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "ZP", " ", "\[Kappa]"}]}], ")"}]}]], ")"}], 
       FractionBox[
        RowBox[{"1", "+", "\[Kappa]"}], 
        RowBox[{"-", "\[Kappa]"}]]], ")"}], 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{" ", "\[Kappa]"}], 
       RowBox[{"1", "+", "\[Kappa]"}]]}]]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.825450911389723*^9, 3.825450985539501*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"7d4e22e4-32d4-4d46-b113-6618f68bd94b"],

Cell[BoxData[
 TemplateBox[{
  "$RecursionLimit", "reclim2", 
   "\"Recursion depth of \\!\\(\\*RowBox[{\\\"1024\\\"}]\\) exceeded during \
evaluation of \\!\\(\\*SuperscriptBox[RowBox[{\\\"(\\\", FractionBox[RowBox[{\
\\\"1\\\", \\\"+\\\", RowBox[{\\\"2\\\", \\\" \\\", \\\"\[Kappa]\\\"}]}], \
RowBox[{RowBox[{\\\"(\\\", RowBox[{\\\"1\\\", \\\"+\\\", \\\"\[Kappa]\\\"}], \
\\\")\\\"}], \\\" \\\", RowBox[{\\\"(\\\", RowBox[{\\\"1\\\", \\\"+\\\", \
RowBox[{\\\"2\\\", \\\" \\\", \\\"ZP\\\", \\\" \\\", \\\"\[Kappa]\\\"}]}], \\\
\")\\\"}]}]], \\\")\\\"}], RowBox[{RowBox[{\\\"-\\\", \\\"2\\\"}], \\\"-\\\", \
FractionBox[\\\"1\\\", \\\"\[Kappa]\\\"]}]]\\).\"", 2, 123, 43, 
   31290194116076542062, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.825451020608245*^9},
 CellLabel->
  "During evaluation of \
In[123]:=",ExpressionUUID->"649f41a9-75df-418c-992b-41be983156d9"],

Cell[BoxData[
 RowBox[{"Hold", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "\[Kappa]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "ZP", " ", "\[Kappa]"}]}], ")"}]}]], ")"}], 
    RowBox[{
     RowBox[{"-", "2"}], "-", 
     FractionBox["1", "\[Kappa]"]}]], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Kappa]", "+", "\[Sigma]"}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "ZP", " ", "\[Kappa]"}]}], ")"}], " ", 
       "\[Sigma]"}]], ")"}], 
    RowBox[{
     RowBox[{"-", "2"}], "-", 
     FractionBox["1", "\[Kappa]"]}]], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Kappa]"}], "+", "\[Sigma]"}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "ZP", " ", "\[Kappa]"}]}], ")"}], " ", 
       "\[Sigma]"}]], ")"}], 
    RowBox[{
     RowBox[{"-", "2"}], "-", 
     FractionBox["1", "\[Kappa]"]}]]}], "]"}]], "Output",
 CellChangeTimes->{3.82545102061591*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"eca3b4fc-9675-48f0-a6a2-6425b58c387c"]
}, Open  ]],

Cell["\<\
But given the structure of the solution, can determine the normalization\
\>", "Text",
 CellChangeTimes->{{3.825451128097777*^9, 
  3.8254511442670116`*^9}},ExpressionUUID->"1e1d4290-876e-4fad-9e86-\
20c19554145e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "3"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"\[Kappa]", " ", 
       FractionBox[
        RowBox[{"i", "-", "1"}], "\[Sigma]"]}]}], ")"}], 
    FractionBox[
     RowBox[{"1", "+", "\[Kappa]"}], 
     RowBox[{"-", "\[Kappa]"}]]]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8254511597277*^9, 3.825451191390182*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"3e6daaee-4eb6-4c79-b896-8f09ab742bd4"],

Cell[BoxData[
 RowBox[{"1", "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     FractionBox[
      RowBox[{"2", " ", "\[Kappa]"}], "\[Sigma]"]}], ")"}], 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", "\[Kappa]"}], "\[Kappa]"]}]], "+", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     RowBox[{"\[Kappa]", "+", "\[Sigma]"}], "\[Sigma]"], ")"}], 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", "\[Kappa]"}], "\[Kappa]"]}]]}]], "Output",
 CellChangeTimes->{3.82545119267411*^9, 3.825451283163775*^9, 
  3.825669663917078*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"44678524-db23-485f-bd94-eb2857aeb1ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"2", " ", "\[Kappa]"}], "\[Sigma]"]}], ")"}], 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"1", "+", "\[Kappa]"}], "\[Kappa]"]}]], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"\[Kappa]", "+", "\[Sigma]"}], "\[Sigma]"], ")"}], 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"1", "+", "\[Kappa]"}], "\[Kappa]"]}]]}], ")"}], 
    RowBox[{"-", "1"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"\[Kappa]", " ", 
       FractionBox[
        SubscriptBox["x", "i"], "\[Sigma]"]}]}], ")"}], 
    FractionBox[
     RowBox[{"1", "+", "\[Kappa]"}], 
     RowBox[{"-", "\[Kappa]"}]]]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.825451436363791*^9, 3.825451467951228*^9}, {
  3.825669927202216*^9, 3.825669968087839*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"b1d1824d-4fd5-4358-be6c-5845ed70134e"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     FractionBox[
      RowBox[{"\[Kappa]", " ", 
       SubscriptBox["x", "i"]}], "\[Sigma]"]}], ")"}], 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"1", "+", "\[Kappa]"}], "\[Kappa]"]}]], 
  RowBox[{"1", "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"2", " ", "\[Kappa]"}], "\[Sigma]"]}], ")"}], 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"1", "+", "\[Kappa]"}], "\[Kappa]"]}]], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"\[Kappa]", "+", "\[Sigma]"}], "\[Sigma]"], ")"}], 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"1", "+", "\[Kappa]"}], "\[Kappa]"]}]]}]]], "Output",
 CellChangeTimes->{3.8254514712710657`*^9, 3.825669969912055*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"9b1bea0e-e469-4f0d-9448-2dab5f67ab40"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution for \[Alpha] = 2 with Coupled Variance Constraint", \
"Subsubsection",
 CellChangeTimes->{{3.8254514941287394`*^9, 
  3.8254515168760767`*^9}},ExpressionUUID->"2cabdb59-fac9-41be-a7b1-\
743ba656fe6e"],

Cell[TextData[{
 "In order to ensure that the correct form of the probability is achieved, \
either\n1) the ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "36e4ef02-2d80-44b4-ad21-596424af078d"],
 "needs to be removed from the coupled entropy, or\n2) a ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "bcdc9bea-0faf-4dad-bfd0-1fe77fb89966"],
 "needs to multiply the coupled variance constraint term"
}], "Text",
 CellChangeTimes->{{3.825452658384622*^9, 3.82545266757419*^9}, {
  3.8254528599960833`*^9, 
  3.825452956776421*^9}},ExpressionUUID->"6157cc69-7157-4404-9d36-\
72bca91c608b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{"\[Phi]", "[", 
    RowBox[{"\[Kappa]", ",", "2", ",", "\[Sigma]", ",", "3"}], "]"}], "]"}], "//",
   "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.825469113049594*^9, 3.825469117280345*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"8f31ac6c-5a88-4576-83f5-5aaf35167e9e"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Sigma]", "+", 
      RowBox[{"2", " ", "ZP", " ", "\[Kappa]", " ", "\[Sigma]"}]}], ")"}], 
    " ", 
    SubscriptBox["p", "1"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Sigma]", "+", 
      RowBox[{"2", " ", "ZP", " ", "\[Kappa]", " ", "\[Sigma]"}]}], ")"}], 
    " ", 
    SubscriptBox["p", "2"]}], "-", 
   RowBox[{
    SubsuperscriptBox["p", "1", 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"2", " ", "\[Kappa]"}], 
       RowBox[{"1", "+", "\[Kappa]"}]]}]], " ", 
    RowBox[{"(", 
     RowBox[{"\[Sigma]", "+", 
      RowBox[{"2", " ", "\[Kappa]", " ", 
       SubscriptBox["x", "1"]}]}], ")"}]}], "-", 
   RowBox[{
    SubsuperscriptBox["p", "2", 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"2", " ", "\[Kappa]"}], 
       RowBox[{"1", "+", "\[Kappa]"}]]}]], " ", 
    RowBox[{"(", 
     RowBox[{"\[Sigma]", "+", 
      RowBox[{"2", " ", "\[Kappa]", " ", 
       SubscriptBox["x", "2"]}]}], ")"}]}], "+", 
   RowBox[{
    SubscriptBox["p", "3"], " ", 
    RowBox[{"(", 
     RowBox[{"\[Sigma]", "+", 
      RowBox[{"2", " ", "ZP", " ", "\[Kappa]", " ", "\[Sigma]"}], "-", 
      RowBox[{
       SubsuperscriptBox["p", "3", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
       RowBox[{"(", 
        RowBox[{"\[Sigma]", "+", 
         RowBox[{"2", " ", "\[Kappa]", " ", 
          SubscriptBox["x", "3"]}]}], ")"}]}]}], ")"}]}]}], 
  RowBox[{"2", " ", "ZP", " ", "\[Kappa]", " ", "\[Sigma]"}]]], "Output",
 CellChangeTimes->{3.825469118689827*^9, 3.825670333503106*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"109bd72a-5276-44ac-bf9a-f76c97fc236d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"\[Phi]", "[", 
       RowBox[{"\[Kappa]", ",", "2", ",", "\[Sigma]", ",", "3"}], "]"}], ",", 
      
      SubscriptBox["p", "1"]}], "]"}], "\[Equal]", "0"}], ",", 
   SubscriptBox["p", "1"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8254516448542747`*^9, 3.825451644953108*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"34527a88-5394-46de-82d9-3f517a3ed2d8"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ifun", 
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"", 2, 13, 3, 31291831078354556112, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8256703419588127`*^9},
 CellLabel->
  "During evaluation of \
In[13]:=",ExpressionUUID->"c39fff0d-4814-4629-b18f-c0138e399f4d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["p", "1"], "\[Rule]", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SqrtBox[
           RowBox[{"1", "+", "\[Kappa]"}]], " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "ZP", " ", "\[Kappa]"}]}]], " ", 
          SqrtBox["\[Sigma]"]}], 
         SqrtBox[
          RowBox[{"\[Sigma]", "+", 
           RowBox[{"3", " ", "\[Kappa]", " ", "\[Sigma]"}], "+", 
           RowBox[{"2", " ", "\[Kappa]", " ", 
            SubscriptBox["x", "1"]}], "+", 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Kappa]", "2"], " ", 
            SubscriptBox["x", "1"]}]}]]]}], ")"}], 
      FractionBox[
       RowBox[{"1", "+", "\[Kappa]"}], "\[Kappa]"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["p", "1"], "\[Rule]", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SqrtBox[
          RowBox[{"1", "+", "\[Kappa]"}]], " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "ZP", " ", "\[Kappa]"}]}]], " ", 
         SqrtBox["\[Sigma]"]}], 
        SqrtBox[
         RowBox[{"\[Sigma]", "+", 
          RowBox[{"3", " ", "\[Kappa]", " ", "\[Sigma]"}], "+", 
          RowBox[{"2", " ", "\[Kappa]", " ", 
           SubscriptBox["x", "1"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Kappa]", "2"], " ", 
           SubscriptBox["x", "1"]}]}]]], ")"}], 
      FractionBox[
       RowBox[{"1", "+", "\[Kappa]"}], "\[Kappa]"]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.825451648710877*^9, 3.825451688442195*^9, 
  3.8254519770807962`*^9, 3.825452610571933*^9, 3.8254527216610126`*^9, 
  3.825670341964128*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"595c90c9-e715-4be8-9dec-fb8bed197a1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "/", 
   RowBox[{"(", 
    FractionBox[
     RowBox[{
      SqrtBox[
       RowBox[{"1", "+", "\[Kappa]"}]], " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        RowBox[{"ZP", " ", "\[Kappa]"}]}]], " ", "\[Sigma]"}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Sigma]", "2"], "+", 
       RowBox[{"3", " ", "\[Kappa]", " ", 
        SuperscriptBox["\[Sigma]", "2"]}], "+", 
       RowBox[{"\[Kappa]", " ", 
        SubsuperscriptBox["x", "1", "2"]}], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox["\[Kappa]", "2"], " ", 
        SubsuperscriptBox["x", "1", "2"]}]}]]], ")"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8254518521800337`*^9, 3.825451861679323*^9}, 
   3.8254520148407373`*^9, 3.825452627178627*^9, 3.825452731774852*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"5c5b7e24-f6d6-4af6-9cb3-0608dea610fb"],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"3", " ", "\[Kappa]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Sigma]", "2"], "+", 
       RowBox[{"\[Kappa]", " ", 
        SubsuperscriptBox["x", "1", "2"]}]}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"ZP", " ", "\[Kappa]"}]}], ")"}]}]]], "\[Sigma]"]], "Output",
 CellChangeTimes->{3.825451862739662*^9, 3.825452016446681*^9, 
  3.825452630193644*^9, 3.8254527333933563`*^9, 3.825670351101307*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"e225187f-5e03-40c5-bc3a-ce963ce22675"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  SubscriptBox["p", "i"], "\[Rule]", 
  RowBox[{
   FractionBox["1", "Z"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", " ", 
      RowBox[{"\[Kappa]", " ", 
       FractionBox[
        SubsuperscriptBox["x", "i", "2"], 
        SuperscriptBox["\[Sigma]", "2"]]}]}], ")"}], 
    FractionBox[
     RowBox[{"1", "+", "\[Kappa]"}], 
     RowBox[{
      RowBox[{"-", "2"}], "\[Kappa]"}]]]}]}]], "Input",
 CellChangeTimes->{{3.825452033513811*^9, 3.825452039808134*^9}, {
   3.825452129698633*^9, 3.825452174931126*^9}, 
   3.825452636831677*^9},ExpressionUUID->"07bae38b-6ee5-4ed2-a272-\
65ae756ce76b"],

Cell["\<\
So indeed the factor of 2 division causes a problem in correctly specifying \
the coupled variance constraint; however, I next need to examine whether the \
entropy function should change or the constraint should change.\
\>", "Text",
 CellChangeTimes->{{3.825452183104061*^9, 
  3.825452251226605*^9}},ExpressionUUID->"09ee9e2c-eef6-4976-a84e-\
e12abd63122a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution for \[Alpha] with \[Alpha] constraint", "Subsubsection",
 CellChangeTimes->{{3.8255810931846027`*^9, 
  3.82558111540685*^9}},ExpressionUUID->"5f960e7c-1cf8-47e4-bf0e-\
4fa6c2eab1d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]Alpha", "[", 
    RowBox[{"\[Kappa]_", ",", "\[Alpha]_", ",", "\[Sigma]_", ",", "n_"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], 
     RowBox[{"(", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox[
         RowBox[{"P", "[", 
          RowBox[{"\[Kappa]", ",", "\[Alpha]", ",", "n"}], "]"}], 
         RowBox[{"\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            SubscriptBox["p", "i"], ")"}], 
           FractionBox[
            RowBox[{
             RowBox[{"-", "\[Alpha]"}], " ", "\[Kappa]"}], 
            RowBox[{"1", "+", "\[Kappa]"}]]], "-", "1"}], ")"}]}]}], ")"}]}], 
    "+", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SubscriptBox["p", "i"]}], "-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"\[Alpha]", " ", 
       SuperscriptBox["\[Sigma]", "\[Alpha]"]}]], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox[
        RowBox[{"P", "[", 
         RowBox[{"\[Kappa]", ",", "\[Alpha]", ",", "n"}], "]"}], 
        RowBox[{"\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["x", "i"], "-", "\[Mu]"}], ")"}], 
        "\[Alpha]"]}]}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.825581158974207*^9, 3.825581206951058*^9}, {
  3.8257370326775208`*^9, 3.825737040502722*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"563af164-1bcd-47d6-9e11-3d5740cc9809"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"\[Phi]Alpha", "[", 
     RowBox[{"\[Kappa]", ",", "\[Alpha]", ",", "\[Sigma]", ",", "3"}], "]"}], 
    ",", 
    SubscriptBox["p", "1"]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.825581214165455*^9, 3.825581245684375*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"35c3fd84-634a-4522-bc16-e7a35b7cc5df"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[Sigma]", 
    RowBox[{"-", "\[Alpha]"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"ZP", " ", "\[Alpha]", " ", "\[Kappa]"}]}], ")"}], " ", 
      SuperscriptBox["\[Sigma]", "\[Alpha]"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]", "+", 
        RowBox[{"\[Alpha]", " ", "\[Kappa]"}]}], ")"}], " ", 
      SubsuperscriptBox["p", "1", 
       FractionBox[
        RowBox[{"\[Alpha]", " ", "\[Kappa]"}], 
        RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Alpha]"], "+", 
        RowBox[{"\[Kappa]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Mu]"}], "+", 
            SubscriptBox["x", "1"]}], ")"}], "\[Alpha]"]}]}], ")"}]}]}], 
    ")"}]}], 
  RowBox[{"ZP", " ", "\[Alpha]", " ", "\[Kappa]", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Kappa]"}], ")"}]}]]], "Output",
 CellChangeTimes->{3.825581246797014*^9, 3.825737105710017*^9, 
  3.825737149620309*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"050f33f4-774e-4760-8e12-44cacb8f54fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Sigma]", 
       RowBox[{"-", "\[Alpha]"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"ZP", " ", "\[Alpha]", " ", "\[Kappa]"}]}], ")"}], " ", 
         SuperscriptBox["\[Sigma]", "\[Alpha]"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Kappa]", "+", 
           RowBox[{"\[Alpha]", " ", "\[Kappa]"}]}], ")"}], " ", 
         SubsuperscriptBox["p", "1", 
          FractionBox[
           RowBox[{"\[Alpha]", " ", "\[Kappa]"}], 
           RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Sigma]", "\[Alpha]"], "+", 
           RowBox[{"\[Kappa]", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Mu]"}], "+", 
               SubscriptBox["x", "1"]}], ")"}], "\[Alpha]"]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{"ZP", " ", "\[Alpha]", " ", "\[Kappa]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}]}]], "\[Equal]", "0"}], ",", 
   SubscriptBox["p", "1"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8255812615172253`*^9, 3.825581292321224*^9}, 
   3.825737165253017*^9},
 CellLabel->
  "In[131]:=",ExpressionUUID->"f77d8fb3-622d-463f-b083-664f3ba310e1"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ifun", 
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"", 2, 131, 35, 
   31291960688958910043, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.825737167868856*^9},
 CellLabel->
  "During evaluation of \
In[131]:=",ExpressionUUID->"5bcd68ae-dece-4ee4-ab8a-0088597c3a72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["p", "1"], "\[Rule]", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"ZP", " ", "\[Alpha]", " ", "\[Kappa]"}]}], ")"}], " ", 
        SuperscriptBox["\[Sigma]", "\[Alpha]"]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Kappa]", "+", 
          RowBox[{"\[Alpha]", " ", "\[Kappa]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Sigma]", "\[Alpha]"], "+", 
          RowBox[{"\[Kappa]", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Mu]"}], "+", 
              SubscriptBox["x", "1"]}], ")"}], "\[Alpha]"]}]}], ")"}]}]], 
      ")"}], 
     FractionBox[
      RowBox[{"1", "+", "\[Kappa]"}], 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.825581294452549*^9, 3.825737167883816*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"9e4bc9c4-a0a9-4146-8e18-55f9a050880c"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "1"], "=", 
    RowBox[{
     FractionBox["1", "Z"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"\[Kappa]", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "\[Mu]"}], "+", 
             SubscriptBox["x", "1"]}], ")"}], "\[Alpha]"], 
          SuperscriptBox["\[Sigma]", "\[Alpha]"]]}]}], ")"}], 
      FractionBox[
       RowBox[{"1", "+", "\[Kappa]"}], 
       RowBox[{
        RowBox[{"-", "\[Alpha]"}], " ", "\[Kappa]"}]]]}]}], TraditionalForm]],
  ExpressionUUID->"7fd5221c-4842-49b8-a025-081a629fa368"],
 " =",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "Z"], 
     SuperscriptBox[
      RowBox[{"(", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"\[Kappa]", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "\[Mu]"}], "+", 
               SubscriptBox["x", "1"]}], ")"}], "\[Alpha]"], 
            SuperscriptBox["\[Sigma]", "\[Alpha]"]]}]}], ")"}], 
        FractionBox["1", "\[Kappa]"]], ")"}], 
      FractionBox[
       RowBox[{"1", "+", "\[Kappa]"}], 
       RowBox[{"-", "\[Alpha]"}]]]}], "=", 
    RowBox[{
     FractionBox["1", "Z"], 
     RowBox[{
      SubsuperscriptBox["exp", "\[Kappa]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], "/", "\[Alpha]"}]], "(", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Mu]"}], "+", 
          SubscriptBox["x", "1"]}], ")"}], "\[Alpha]"], 
       SuperscriptBox["\[Sigma]", "\[Alpha]"]], ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"f61fb8ec-c68c-441e-808a-d5f8a2a17a10"]
}], "Text",
 CellChangeTimes->{{3.825581312998686*^9, 3.825581425131266*^9}, {
  3.82570802719841*^9, 3.8257081438184137`*^9}, {3.825737190908622*^9, 
  3.825737269838204*^9}, {3.825737322134513*^9, 
  3.825737340755735*^9}},ExpressionUUID->"15884870-a941-4695-86d4-\
fea407b0b530"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scaling Properties of Coupled Entropy", "Subsection",
 CellChangeTimes->{{3.825671405162949*^9, 
  3.8256714119554577`*^9}},ExpressionUUID->"cdff1dc9-a363-4142-af09-\
f9bed5b7bea8"],

Cell[TextData[{
 "Hanel, Thurner have written a series of papers on the broadest \
generalization of entropies relaxing the assumption of additivity. They \
formulated a ",
 StyleBox["c,d",
  FontSlant->"Italic"],
 "-entropy in which ",
 StyleBox["c",
  FontSlant->"Italic"],
 " and",
 StyleBox[" d",
  FontSlant->"Italic"],
 " relate to different scaling properties of the generalized entropy. The \
parameter c is equal to Tsallis\[CloseCurlyQuote] q parameter, and thus ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", 
    RowBox[{"q", "=", 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"\[Alpha]", " ", "\[Kappa]"}], 
       RowBox[{"1", "+", 
        RowBox[{"d", " ", "\[Kappa]"}]}]]}]}]}], TraditionalForm]],
  ExpressionUUID->"385f5f77-54ea-43bc-953d-8bb8b6de46fd"],
 ". The parameter ",
 StyleBox["d ",
  FontSlant->"Italic"],
 " relates to raising the generalized logarithm to a power. Following the \
scaling derivation in R. Hanel and S. Thurner, \[OpenCurlyDoubleQuote]A \
classification of complex statistical systems in terms of their stability and \
a thermodynamical derivation of their entropy and distribution functions,\
\[CloseCurlyDoubleQuote] 2010., we have the following properties for the \
Coupled Entropy."
}], "Text",
 CellChangeTimes->{{3.8256714161868143`*^9, 3.825671690078336*^9}, {
  3.825671730963027*^9, 
  3.8256717363007603`*^9}},ExpressionUUID->"a352861e-a011-4b44-954b-\
288b0f8a1d31"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQW4HsXZhqEt0JbiBYqH4oTSAiW4BAnaQigSCO7u7pTgLgUCDRIIwSEE
d3cr7sGdUqwG7f6997/ec82Zb3Z3Vr5zviTPfXUKnG9ldnZ25Jn3fWf2LXdb
Z9sfTDDBBHv9+H//t84W+/Xfc88tDvjDlP/7j/V23WuH7XbdZuvVdt17m+22
2XPxLX/4vz9OMNEEE5z5owkm+N//JkiEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE6EH+9a9/
lT7n3//+d/Lf//63DbkZ97jllluSnXfeOTn//PPbep/vv/8+ufnmm5M//elP
ybHHHpum8847L3n11VeDx19//fXJ3Xff3fL3su/2P//5T3pOEVyz6DiuxXMY
f//735NvvvkmN3FO08Tc1y2j7777rvD4vPTtt9+25Tk6CZ7xiSeeSC666KLk
+OOPT4YMGZLW0XPPPTd54IEHkr/97W+9ncVKVGk/q5zj8t577yW33357ctZZ
Z6VleNRRRyWnnnpqMmLEiOSzzz7LPO/dd99NTjrppEbrGu+1Tt3/5z//Wem+
lGHVe/7jH/9o7Pljeeedd5KbbropOe2005Kjjz46fWcnn3xycu2116ZtdNV3
QvnVKX/aurGpL49pm7Pa2Jh+qhOhrpd9RzxrJ/cp9AVDhw5N+wK+B76LRx55
JJjnZ599Nrngggt6PpMOvAPyMXLkyOSEE05I+69jjjkmbYPvuuuu5JNPPunV
/AkhhBC9yRxzzJFMOOGEyY9//ONkyimnTKaaaqrMNOmkkyY//OEPkwkmmCB5
5plnejvrHQ9ziIkmmigtLxJzwKZ55ZVXkn322Sf5xS9+0XUfP80+++zJ9ttv
n7z99tvpOWeffXb6zldeeeWW6/3ud7/rqg95dWGKKaZIJp544vT62223XWE+
33jjjfRY6g/1aPLJJ++6zmSTTZb85Cc/SX8nb8ass86a+UyWZplllkzNrCyM
2ddYY43Ce5Iod+OUU06JOqcoUea//vWvk/333z+5//77u2lrWVDHeLc9kcrO
/b/44ov0fS6++OLJD37wg8Lnn3/++dMxOnpJGR5//PEeeX7eiw/fAN8L9Tfv
eyH99Kc/7SqHPN3Hh7nhjTfemGyyySZpG51Xhj/60Y+SFVdcMZ3nuHOcv/zl
L8lMM82UHvP888+XKt88fvazn9Wu97QJP//5z5N11103nTd+9NFHhffdc889
a92Td0Y7tOSSSyYHHHBAqsV/9dVXjZULPPzww2m9mWaaaQrzQ90YNGhQmo+Y
795Ya621apc/ZcF77N+/fzpXfvHFFwvve9999yULLrhg29Jqq60WvO/0009f
61n5Pqabbrpk7bXXTtvtp556Kkp3+eCDD3qsnUX/cllkkUXSdzTJJJOUGqO5
60UDBgxo6/t66KGHCsvw888/TzXUX/3qV5nvZ+qpp07bAeoXPProo+kz80w9
DdolGj1lR70pqluzzTZb2pa8/PLL0fdA227ne2F9UQghhGg36AfMYS0xrg+N
wdxjSO58WoRhbOGWI2XdJHfccUeXDsM/N9hgg+TKK69M7T1Il156aao12TwS
DWfLLbfsyg/zTp/ddtut23vO0gEY19sxrNUVgUbAsTPPPHPLtdCT5p577vR3
8m8wp3DzYs/qJ+bZTYCtANcLPTNjYDcvps3BJZdc0u03xpUx3xCJ6/7yl79M
55P+OcxDL7744tw8o1HWnU/GprfeeiuqHLHXwm7Gfyb0S9ahH3vssbT9ePrp
p1O7vQ033LDbeJ25wy677BI9vz/zzDN75PmZz/ksuuii3d4n35h/HvXWf+8x
9ljom+grM8wwQ8s10VH53v/4xz8mw4YNS8uRtX6+aStLtFrmQ9QRN1+sszcF
eoz7XKYxu4lvPlT355lnnuCzMXdec801c9f8sbNyrxW6TqjcSbQ1IV2Cekf7
yLy3Duh1Sy21VLdr06/uvvvuyXXXXZfqNcw5b7vttvT9zTnnnN2OnWuuudK2
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
hqlsrGIjK5aRXZfxKPN5dI12+M6zL23o3vPMM0+LnmVxallvr7NmDyE9KTQP
LNrb10DbwofMn2/1tp6EjVuofEP+H6xB8s3GUFVP4tmJHxKaW9uaup9i/O/y
wHctdF1/XkFZkbfY2FlV9ST2deM+2BzmUVVPIh586HmrxuDxQdtm76IFFlig
1H5FZamrJ2En6J+PbcJbb72Ve15dPQldwz8fn9OimCehbypW28wD/cG/Lnsi
FGnldfWk0B57Md9zWT3J+sSsmOXs9RazL1YdPYmytP0hitpZ+jza2hiq6kl8
o7QxRfP/ntaTTIvO0pPQvIkJGRproMtljVUYE2BrzZ6etBHsb1jXt7cstOuh
vNXVYBhbhK5LvK4iyuhJFm8ulF/azGHDhqXalhBCCNGTSE+qzrXXXts1TmKt
0TD7/aK5cSzMMbH1yRqn+QnfKea5xJ+J3bs9D/yK5ptvvuC9XL8x9mexvV2I
DVOXkJ4E/n5gsfNIWyP37ap6W08Knc8Yc8yYMdHXCFFVT8rD/MD8xBykDmit
oesOGjSo1nWr6kmxVNWTbJ+kqnWmU6ijJ+FXE2pXmMsXUUdPIta3uwcVCd+U
Iv0b39PQvpfLLLNM1H3zyNLsQz5FLnX1pND5xOsrmueX0ZM41mx2q+yB51JH
TwrFKyNeVh0bWqiqJ8XSk3oSmhtlwu9VfcD8/c7yEv0c3w8+aB9++GGl+5Xh
yiuvDOajjAaeBW1IlTYpVk8inprF0pQNkhBCiE5CelJ1zK+L+Kw+2AX45YoN
fRnfLJescVBRYr533XXX1X3UblqRn7BZcTUn7CKYK9YlS08aOXJkSx6KYlCS
P+broZjkvakn4R/px05CnyzaQzqGduhJodhJpPvuu6/WdSnv0HWzYijF0ol6
kvmThObxYxt19KSQ7xj2IzH7IlXRk9i7nP7On/ehT7/44ouF92SPydB769+/
f9Tz5pG1z11RDKU6etItt9zSErcJv9uivfUgS0/i28LHB3sj6gEx2Fz/2J7W
k7ABIj++PSA+btgfNbHeMrbqSbRTlA0Ju5YDDjgg6dOnT9fvVfWkN954I6it
FCXqHv6vTYwdssiKb/nnP/+59rVDsSap+0XE6En4LA8ePLjrd+lJQgghOgnp
SdVg3djG4qNGjWr5Hdug0LgFm6aqEGcxFJspJlXdy92FuAaha6OdmM7A+n3Z
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
n3feeaflu8w6nzY5VuvdfPPN0+tNN9106Xfkf1f2vnbfffdu52Fj0xN1nzrs
1/0//OEPhXUf/duv++gftP18T/7x6D5nnXVWbZta9H+/7+PaO+64Y9qv3H//
/cl9992Xth2UvZt3yptne//996Pu9dvf/rawDbN+3k+0vaFyY6yw4YYbpm1k
FltttVW3a4X6UxLl7R533XXXdV1jscUWa2u9+eMf/5hbdtiFLb/88l3Ho3sf
csgh6Trc9ddfn65pobn37ds3/Z1+Bw2M4+wcbJqEEEIIITqRtddeO3OchD0C
NixlYIxsc19sA8qOg55++ulUi3Hz0a9fv9QvK49bb701HUe65zHvx168DPh9
5Y0d8bErC/Nq06lOO+205D//+U/pazQNNlzM69xnY07f9Doo+pJfhtgc5UGd
4T2wpu/rUeR55MiRpfOBD0jofX733XeZ5/zjH/9InnrqqdRmx9aJ3YT+hv1R
WRZZZJGWa/3+97/PPWfIkCEt56y00krJ6aefnvq2UCaWsO/xj1111VW7fsd/
Ap9R/Bz5xv1jP/3009y8YGfin/OrX/0q+vkXWmihlvOZJ1a17eF7Yv5s18KO
jHcXOg6txE2hOrHPPvu0HEfCNg37EuxB0Mjmn3/+lnOZHzbJl19+2S0PRx55
ZDDPaP+hPL/55pupNsf8mvpKm+y38UUwH85rEzfddNPSz8WawYABA9Lz11tv
vVyb0tAzr7zyysG6j1btH7vaaqtF132zZcsCDcY/J8929e9//3tqR0c/62tL
SyyxRPSajQv1GG3d1bvRtHimb775JvM8vuttttmmWx6oD5RhWX7zm9+0lMMJ
J5yQew7alq9rkbB9wh8vhj/96U/BOpj33ujT3G+CuuOfv+CCCwa/H9Jrr72W
/OUvf0ntyzjXf49bbrll5r35dhiH2LEHHHBA5rGMnWg/0O/9/ElPEkIIIUSn
YnqSry1Ywtfnq6++KnXNO++8Mz33F7/4RanzGFNi2+7ef4MNNojWXxg3+uPc
eeedt9RYzPQk5iWhNVXGkmhXZbG1RmyqOoFLLrkk+L5D/i91qKInuaBnopv4
1wj5ZeVRRU9yYax/xhlntNSJBRZYoLRmWUVP2mWXXbqOxf8zz34HW67YMuf5
ia/iPleRbVBdPSmr7p1yyinR1/DZdttt02ug+8W2F7zTUD7QL2K57bbbuvni
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
RUhPCsOejiGbL3xygLndtNNOm/4NXbEuZfUk2zMyT09Cl+GYMvaDZSirJ5m+
laUnoXvx+1prrZV5z6p6EuWLf3Eov9hu2rc8PuhJaAGhcoiNH4Te4Z871VRT
1XqWrD0rdt9998Jzxxc9CShnjsnSk8zn3beXxN4XH/IqttYh+77e3BtWCCGE
ECKLqnoSnHbaacGxncWxjNGTGKMRI9q/xuqrr17lcbqYaaaZKs3Zq+pJwJwh
a38jK5Oe1pNs/kN5DBgwICr5sXxJVffRalJPYn4677zztlzv3HPPLTy3aT2J
e/rXIm/ksQjpSdnsueeewfeElnPOOeek/04cI+Lb1qWsngS0V1nv+OWXX07P
n3LKKWvnLYuyehJ5zYv7sssuu6Tn5+2lV1VPgjzbTWsTxwc9CfvOqtoNWN33
E7p2VcwP2k9Fe7vB+KQnFX1D1if5awlHHHFE+nf2Ti0L91xooYW65bHO3gNC
CCGEEO2ijp4EjIezNI8YPQmOOeaYlnMnnnjibvGsy/DII48E8xPjg1JHT4LH
HnssuL+RpSw96a677krHn7EpJj7Lu+++2zVnY6/mWLJ8EJ988snoaxhN6kmh
vd2YP8b4PTWpJ2XpWsx1YpCelA2x3/19lUhrrLFGV/xz9jJrgip6Uh7YVHL+
Ukst1Uj+QpTVk4qgnStqH+roSZBnuzm+60mx6ybEYEKn9M+vY6dHTB7/esss
s0zUueOTnpQH8STtGsR2czE9yd//NhbGZG4eb7311krXEUIIIYRoJ3X1JNbt
QmPsMnoSa9jE1PDPR2eqQmi+GxMnGerqSXD99ddn7gvckzbrFmto+umnLxX/
CB0qlH/inZSlST2JuY5/LWJXxNCknnTddde1XAf7rdhrSU/KZ6ONNsrUHogj
8tJLLzVynyb1JOIXmz0B+423iyb1JGKH2/l5+nRdPQmw3aQdkp7UPaGzxTJs
2LBgHxsTg8kn5K/LGk6sb5b0pP/nkEMO6epjfUxPQgfEV7cs7rMSIx1NUQgh
hBCi06irJwFjpSWXXLKyngTY9TCedc9nP92yMSjvuOOOlnzggxbrH9OEngRZ
496e0pOYv9j8rcr+bOzv7OedGOzYGpShKT2Jffn862y22WbR5zelJ7366qst
Po34BxLLPBbpSflkxaYi5cUuKkuTepIbJ5790tpFU3oStp99+vRJz8UeLE9v
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
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIUSIjz/+OHni
iSeSF154Ifnvf//b29kRQgghxmq++OKL5Oabb07uvvvu5OGHH04ef/zx5Jln
nkmeffbZrkS/e8899yR33XVXy/lPPfVUcttttyX3339/8uijjyZPPvlkt3P/
8pe/pNe94447kjfeeCOYh/feey+59dZbk/vuu6/rGpz39NNPp/nhvq+//nq7
i0KMBXz//ffJyJEjkzPOOCM5/PDDk5133jkZNGhQsvLKK/d21oQYJ3n11VeT
Cy64IDnhhBOS/fbbL9l6662TtddeOzn55JN7O2tCCBHNqFGjkgEDBiQ//elP
k5VWWinp169f0qdPn+Tqq6/u7ayJDuTvf/97MmLEiOT0009PDj300GSnnXZK
Nthgg7T/E//P6NGjk7POOis58sgjk9122y0ZPHhwsuqqqyZjxozp7awJIXqQ
Rx55JJlgggmi0kwzzdRyPnP52POZj4QYPnx44bnHHHNMu4tCjAV89dVXmXWk
aJ3xoYceSscCjAm++eabHsqx6Cn++c9/JhdffHFy4IEHJrvuumtywAEHJOed
d17y17/+tbezNlZz3HHHBb+37bbbLve8b7/9Nv3W1ltvvXRNQQgRz1FHHZWs
s846yaWXXtrbWRknOOSQQ9J2a+mll07eeuut9G9oBBNOOGGaWMsUwoV6Eur7
pphiisJzzz333PT7PeWUU3ogp73HzDPPHCyj559/vrezJoToYf7zn/8k//jH
P5Jhw4Yl008/fbc2YbHFFkttk4rmZNgeoU37bcqQIUNSm+Lvvvsu93yuf+WV
VybzzTdf17lzzTVXmic0BNkkCwMbJeaqrIn84Ac/iNKTXnnllXQMYMcuv/zy
PZhj0U6wsTzssMOS6aabLpl22mmT/v37J0suuWQy9dRTp+964oknTgYOHJja
SIpq/Pvf/07efPPNdN0xVk9abbXVuo792c9+ljz33HM9lFshxm7QOezbQeu4
/PLLeztLYzVHHHFEWpYzzDBD8tFHH6V/Y8zrjlX32GOPXs6l6EQYb3799dfJ
scceG60nXXjhhd3qFueOqzB/ZC0PG78pp5xSepIQIoU1MbcdHDp0aPS5zOdn
m222rnN/8pOfpG1NGT777LNk1llnTdMnn3xSNvtiPKNv375RetKf//znbvWa
MXrZuik6j7/97W/JIosskswzzzzJ7bffno79DMaAf/zjH5PJJ5+8651jty6q
g09yjJ7Ee6C83W8OnzkhxjeOP/74VLsow8ILL9zt29lxxx3blLtxH9YjbS2J
8a3BeGHOOedU+ySiQY+M0ZPWXXfdbt/vKqus0kM57F2wRZaeJIQAYmW47SDt
Qxl23333buffe++9pfOw1FJLJeeff37p88T4B3YoMXoSfRs2EnYs54mxG3wW
eY/EzsrzX6QNcu3YDj744B7M5bgFce1i7ZOwAXTXFojLJ8T4BHZ91H/Wycqw
zz77dBtHXXLJJW3K4bgPcd6y5rj4Mx100EHSkkQU8847b5SedM4553T7flnX
Gh/YaqutpCcJIbr41a9+1dUmTDrppGlMuliYu7nt6C677FLq3p9//nkaKxG7
AyGKiNWTgJjzv//975Mtt9wy+fLLL3soh6JdHH300el6YYwdo8XOsETMf1Ge
MnoS3xjf2pprrllpXUGIsR18/avoSfRl6Byrr7661tZqYjE+8XsWog6xehKc
euqp6fc7PsV+lZ4khHBh3yx37lVm7wvsul1bAGJ4l4l9xNiJuBtCxFBGTxLj
Dvgq4lt75plnRh1PfLYf/vCHXXVlk002aXMOx03K6ElCjO9YHJWyepJoDovj
RmwXIepQRk8aH5GeJIRwoR1w9aQNN9ww+tybb765JSY3+2rFssYaa6SxboSI
QXrS+Mmtt97a9d6Jtfbggw8WnrPEEkt0ncNatcVlFfFITxIinq233lp6Ui9D
7BrpSaIJpCflIz1JCOFj7SZpsskmS+P3x7DNNtskyy67bDc9ac8994w6F/8I
/Os09hKxSE8aP2FvP7eNYS/IIvbaa69u52i/t/JITxIijnfeeSf58Y9/LD2p
l5GeJJpCelI+0pOEED747rtzr1GjRhWew54+7NfNnGOqqabqOrdPnz5R9yTm
5Iorrlg362I8QnrS+An7TrrtE+1NEe4e3KRrrrmmB3I6biE9SYg43LmV9KTe
Q3qSaArpSflITxJC+Dz99NPd5l6bbrpp4TnEO55vvvnSf99ss826nf/4448X
nj9w4MDk7LPPjs7ja6+9llx66aXpOSNGjEheeumlHtEU0M0+/vjjdP3R59tv
v03z8fLLL9ceQ3733Xdp3GD2HmG/COa/77//fq1rjo0Qb5nyJFEmLmX1JOLu
fPrpp8mbb74ZdW9s5q677ro0rhf17Lbbbktj8RjEFmMPnxioN3xXF110Ufo+
R44cmbz99ttR5wLPx72p91yrCMoKn67Ye7z33nvJ5Zdfnpx33nnJueeem/qp
2j7X2Cdee+21hdegvqIL83wXX3xxGo+WMocxY8YkjzzySFReiqAcZpxxxq53
P2TIkMJz/D2Tbrrppkby4sKz3nfffcnw4cPT+kJ5vvHGG12/8/6px7HQxlx1
1VVpeVIHH3vssa7yLJOnhx9+OD2f93rllVd2q8NlqKInff311+m7z9uDz6Be
U2dDbSvnv/jii2n5sW9DHcjTK6+8kjz33HPB/SZox+lbiCfOnhKvv/56rfv5
8E7oH/iWfXg2vhvqDfmswhdffJFe268r7GdFGca0HwbtG/WO+kM9pD2s6ivK
3u20vX5doJ3hvdJ30j7Xxdpa4hdZ3/nuu++WugZ7gvDe/T6Husn7yWr3ufe+
++7bra2pOhag3SXfZc8nj3znPDttEXsrlnnnoXbM7TOfeuqp9PtpJ/T7119/
ffoMw4YNS/uOf/3rX6Wv01t6EmNE6gl7JofGJvTLxx13XDq2Jmaz9bV50Ecz
5qBMGEfwHvz6mYeNCULfQpPt64cffpiOF8gn41fG/7HjJOA986z+Xhu0H+Qx
Zg8Og3JmfmDfAu+kKmX1JJ75gw8+SMujt3DnSfyz7jyJvoU6TTn6dban9aS6
9czmcqExMuMCm8s10ScJMT4zxxxzdLUN9MVF3+nOO++c7qMEo0eP7jae2n//
/XPPpS9jP/eYcSrj2d/85jdpDJS11147OeCAA5INNtgg3ZOaven4vUkYRxF7
BZ8a7CAmnHDC9Jnw6zMYr62zzjrJnHPOmSy99NJd/c4KK6xQ2g4CDePII49M
pp566vQ6lCvj08GDB6fPuMwyyyS333578Fz6jt/97ndpeWyxxRap/yFzIuIP
r7feeulvjz76aHos+d14443T3/3j2JOJftDAN4iyJg92XfqOjTbaKDnttNMq
lGo+9FOMIRdaaKFkkkkmSRZbbLFkqaWWSmafffY0zzbfLNKT6C/sffz85z/v
ihVfZDP3xBNPpOUz//zzJ7vttlvypz/9KfWxOuKII5Jf/vKX6Rhw1113Ta9V
ND6hXzrxxBOT6aabLr1///7903JkP3W+q3nmmSe57LLLWs5jzMQzk3fs/tx4
0iE9gHq/6KKLpvljvGPH8vx5MO9Ybrnlkn79+qXfL33zGWeckey9997J9NNP
nz4zdoNZNkCMUdkPl2+P/UxOOOGE1H7opJNOSusHZU3ZsRdbmVhsRTDnp9xi
47NR7lYmvIey88s8+Gb32GOP9F3x/ZxyyilpGVAWq666avLrX/86jR2OPy/7
HRRBHDrqPHmlfrBHEXsTEoOc94DvXpE+w5icthHdjXaI90k7Yt/U+uuvn9x5
552lnjNGTzrqqKPS9pm9GMzfh3TPPfe0HMu4dPHFF0/bTb4Fa1tXWmmlrmPQ
KGl7OIa2j/LgOI6JsZt1YY7Mt8d7oH/jvfDvfIu2JzvvjDq7ww47pPMQ/L1p
+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
sz6qar+GFD2JuEeLHSXWLnX9GRoq/YOtLUdPqqPH7b777vn5zIX1Fx/PG9ob
sAyL4eH+Q/uBQzf0JJ4bOf/7u/7PYK7D9kzExknVo2gfaEZ+3z5P03oSmgzx
nZzDXFPqPq48J9pzmWbSHz3J53mNtVv2wCvTk4iRo22U0Sk9CfvKlz0Ue+rL
Qb/r8WP/kksuGS2fwbwK9cKDX2fXWnvttZOv1Sk9if7T1rzx7FPjBKhnxD6E
cvRKTxKiN2CPez2Jdl1m34Xw6z3KfKoq8H3te6l777Bfj9+3oCma1pMAfcfO
S137vPTSS7d8r6r96w38fxv78duIlQjto0luBNMiiA8jZ3YnYbywPZjQVFLs
J8Z9vxayKT2Jz1NzFsw+++x5GYp2KjHCVi78ihTw/VhrGBrXWOth12QPmCp8
W6vSk/g8Jd8ifgfnWu4zMD2J9pCSq4i4M86nXTYF5aKupuZuoJzkdErV0WJY
+07d19jmc88555w+f6f+0J/aO6vyjwzuhTbsNQN7xhx8FsPrnkU9ibneIoNR
T8KmJMaFe+3WerYYXk8K9cEebH7rH/Ezq/LutKsngV+XyvNNwdZr46Oyv0MI
ryelzHnz3tgLwb4T6pPpA8xPRidOzaFEHGpo/XwTetIyyyzTukbZ+Mye3lWx
mil6Evj9OVNje0899dTcfjBMT+J5p8D74/xUHb0K4ndsHE/tl33b5/6r6Iae
ZO+qSTvJz98yF5MCOsRCCy0U/LxpPQnIdW3nMS+SAloqfWBZf9yunsS1/F4i
sfXsPv9WUU8iHr+MTuhJ9HO+r4jNDdv6YnIuFPFzjql5j9CEi2sVKRMxvVyH
cSdmbwJr8/z62yb1JGBtSmwsKMIzIq4/NO5LTxKiN6AdeZ+H/RHrUNwXvmyf
nRCs5bL1PuQEielYjCWsWU9dr14H0yQ4YrlbfW67Kj2JvszWo3F/sXke9jA2
v6vO+mavSfA8Q1i8EOMztl5sLV0TkNfd4rTYV60Kxjuf95oDOyQGdYJzGffK
MD0JvSlme2IH8/xD+0F5/yl2P2gz2CrMMYVgzXxK20Fv9for9akMO4d9e2N+
NnP5nMv6KF9m+w1ssxi2d2BT6ybpA5gPw79G14sdzGdb/araq64OXi+O7UsA
aBrYqmV7W5MD3ebg8PVCuRMM7PhiPIgvD3WzKh8JfRP7Kdj5PtaAGMGyWA9v
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
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEIOAK664IptmmmkGzLHZ
Zpv1+pF0nSeeeCKbffbZs7///e+9LkqQd999N5ttttmy++67r9dFEUIIIYQQ
QnSAr776Knv77bezjz/+uNdFGXJ89tln2VtvvZV98cUXvS6KKIG2wfuhffz3
v/8Nnvfpp592sVS957TTTsu+9rWv9TlmmWWWbM455+z3gf4w+eSTZ9/85jdH
+43QMfbYY+fvaKjw5JNPZpNOOml2/vnn97ooUa6//vpskkkmye69995eF0UI
IYQYULz33nv53IsQQgxG7r///myLLbbIvv/972fTTz997p8stdRS2cMPP9zV
crzyyivZzTffnF144YXZ7373u+zAAw/Mdtxxx+zqq6/uajm6yUUXXZStvPLK
2fjjj5/NPPPMub+1wQYbDCmfeKCCxnfqqadmSy+9dP5+TLOgnSy//PLZ5Zdf
3uf81157LZtiiinyejxU+M9//pM/H6/p7Lrrro3/xptvvpk99thj2VVXXZXt
sssuuWYV0pR++9vfNvr7AxW0pGHDhmWjRo3qdVGSueCCC/L2c8899/S6KEIM
KZ599tnshhtuyM4777zsxBNPzPbff/9s2223zR555JFeF22Mh/Hrtttuyy6+
+OLslFNOyQ455JBs5513zs4+++yul+W5557LbrzxxnwOgnrwm9/8Jttuu+1y
P0B0n3/+8595W5x22mmzySabLI+zxhf4wx/+0OuiCTHGg7+29957Z4ceemju
84n2Ofnkk/P5/znmmCN74IEH8r+dcMIJ2Te+8Y1s3HHHzV566aWulWXrrbcu
9Q8PO+ywrpWhWxCHtOGGG+b3t/baa2evv/567jevtdZa+d+Iz+DfovsQf3Tc
ccflsTG0gV/+8pd5TMWrr76aH7feemtuh0888cTZqquumsckffTRR9k888yT
TTnllL0uftfBHvrBD37Qaq9f//rXs2uvvbbjv/vyyy9nRx11VK5/+/5iwQUX
7Phv95r/+7//y+vnuuuu2+ui1Gb77bfPJpxwwiGlu4r2ITb0mGOOyfbYY4/c
FxbtseSSS5baV8V5EdE8hx9+eOmzx7aogrp/9NFH53X/+eefb6Qsyy23XGlZ
/vznP1d+7/PPP8/vg7L84x//aKQsQ50HH3wwt18mmGCC7Nxzz81tT/7G+Mg7
Oeuss3pdRCHGWIjbmGGGGVp9IH2jaA/mtXmGE000USv3xvvvv59rSfZ899tv
v66Vh/VEzKFh3xAnNSbrSauttlp+b4suumj25Zdf5n/jvv34fvvtt/e4lEMP
NDxy8PD8Y3Fi2FTTTTddrgH+7Gc/y7/zi1/8ooulHTiQR8nXXeJm3njjja78
9ieffJIdeeSR2be//e3W7z/zzDNd+e1eMWLEiFzrHIyazL///e+8fhADK81c
xLD+mAPf68UXX+x1kQYl6P70i2eeeWY+FyI9qXuwjgnblvj7+eabL1lP2mST
TVrnErvSxPwuc5fUA2Kj/FxMTE9i3tPOnWqqqfL6JNqH9R/f+c53Rnv2P/7x
j1vPeYEFFuhhCcVghThU5hxFNZdeeuloujp9tagHOZIspuDggw9u/Z1YC9PG
OYjN7Q+XXXZZHrtRlzPOOGOM1ZPuuuuu1r35dR933nlnHtvB37/1rW9lTz31
VA9LOfRA1yPeg+fP+s+qPEkGNpXZBBzkExqqEHfi++Vll1026Rk2BbmeWW/I
b48cObJrv9ttfv/73+f3uO+++/a6KG2DTzsm9u2iWdAb/fwWB3VH/D9bjfVT
7cCaYelJvYG1Zil6EvaI2YN2NL0GinUeKXoS88xFvyu17hFHjM0r+mJzkMwp
l/2dg3lnIeoy66yzZrfcckuvizHg+dvf/tZnHpqYf81x1od10/YM2R/Ig1+2
3nrrZQcddFC/f2e88cZra04FHWpM1ZOILbD5pqK/jb2ApnHJJZf0qHRDl403
3jh/LyuuuGItHWT99ddv1VXmIIcqrD2ea665+ticRxxxRFfLQA4r2hXzp93U
sroFc07ExqObtaPTDxR4NwsvvHCeP30g70sneg9rv60/QVu64447el2kAQHx
sdjC7UCuCOlJveHRRx9Njk9i305f95vWZY499tgkPYn+mvw+di7znal5t8ip
gUYi/gfrdk0nJ7baQz7uLbfcMp/TfOedd3pUQjFYQQ8h36v0pDSuvPLK3MZY
bLHFGltTPNQwDZx61ynwffgN6Ul9+e53v5vf1+qrr97rooj/n4ceeqg1F3j3
3XfX+u4111zT0geHOk8//XSuIVvbHWussbq+Rzzzv7zLMXE83W233caYvAqM
49wLazqECEEM6DLLLJPv9/inP/2p18UZMLAeXnrS4KOOnsT8COuCqfud2MMz
VU8C4oxYi4XGhX2eyp577ik9qcDpp5/eeu7Sx0WTEHNDvRoT7V8xMLE9mTrp
A7Mvm/SkvqAdm25BXIsYGKy00kqlsccpkKOb766zzjodKNngw9tKHMxrEi/f
Tdg7h3izMQnmLVlbycFal8EO+V3Z6425bsUoCVEP8jRLTxp81NGTOk0dPald
0IKlJ/WFfUTsuWt/RdEklg9BepLoFksssURrvWCnIL+H9KS+sCbe7ot8z6L3
kDfa3gk5gOqCn893f/e733WgdIOTn//85300pW7nKSemgZzP5OoeUyAunme5
xhpr9LoojbHpppvm90Q+FyFEOuwDIT1p8DGU9CTs3e9973vSkwr4/f6oD0I0
AfEK7NUuPUl0k07rSeT2wJ+TntQX6UkDD/JK2jtpx69Fu+C7yp/+P9jD60c/
+lEfTWlMWKPVS8xOaDonay+59tpr83saPnx4r4sixKDhhRdeyNcSS08afAwl
PYncSVxbelJfpCeJTsCejVavpCeJbtFpPYlc3lavpSf9D+lJA49jjjmm9U7m
n3/+2t9nvfIkk0zSgZINbshDxVome7as0xrK+cr7A30oz/Cb3/xm9vbbb/e6
OI1Bf2j7jD744IO9Lo4QgwL2S6HNSE8afAwVPYnYYPwL6UmjIz1JNM0NN9yQ
TTTRRI3oScQ5le1z1k68/wcffJDnCLv++uuz+++/P9+3pz9gM5b9rYm1CGXX
jkE8wU033ZQ//2eeeab2PkDkfXjggQda1+B6Hj7rFF999VX22GOP5e/m1ltv
zd566622rtNJPencc8/Nxh133I7rSR9//HEjezgRS/HXv/41f6bkZf7iiy/6
fc0QTehJxH6xzwflJddxf3KphPoNnm1/r8HfPvzww7zOpsCz6UVeGL/XIcdF
F11U6/vc45133tmh0g1uDj744D7Pdp555sn7z6EIfVW7Y96oUaPy50c+1Hag
LcZ+m/LVafdNwZ7I3BvrozsN+W2xsxi7H3744X7tDcvzYm9UxmHirNBK/XhE
XoyYfUJ/Rx9OeThYe+uvn6qx8Tt1xsI6Yxz9d9m1+Tt9X+oz5Df72/ZDY02I
0PPnuTc1znOdqr0W77nnnnx+jXmL/mrBvIcDDzywlYOxU3pSk33Bm2++mbc5
bGXmXgbrfsyvv/563tbZ74F2mWrXFGlXT6pb94vfLXuf7epJsbK89957rZyU
Y5qeRF5y8/3a3Q9KepJoAsZffGXyBth+gXasuuqqef9SPNgzx3PGGWfk7XPx
xRfPZp555mziiSfOr3Xvvffmn9Pvbbfddvm836STTprNMMMMST7SVVddle+Z
xv5TK6ywQp4Dg70F2K+HvahiOgl5WCkXWsWss86ar3difhp/Dcgz8utf/7rP
ntLjjDNOttxyy+W+cYytttoq76MWXHDBPMcr5SSfZwrYFTy3GWecMf/NlVde
OV9/Thl5TgcccECuo1XBGLLZZptl008/fZ4PZI899sh23XXX/DlRHvJg8b64
ftO8+OKL+W+zV/RCCy2Urb322vk9UH72W2AtSZXtir3j65TNG/Bui/UN26cu
6FoXXnhhtuaaa/ap05Y7paxes/9biJCeRB/Ob1Cvp5xyyny/adoA4yJjWB24
Fv4Zc/78l3zKXIv3x7NmP94moN7YPVOH7b5ol8VnUtVOr7vuurxtUQesfZLr
kLiPVVZZpdX+Q7BOhvbJvVq/wb2zTwzgy+y0007538nTPt1002XnnXden2vw
nOkL6CdmmmmmvO34vgfOOeecbNlll83rGPuaoy2iI5x00kmj2fC8M/LCsJaH
cyeccML8fN4xY3Y3QAvy9ZX3T18xJuXe6RXYnJb7344dd9yx18XqKjfffHM+
1jB3RJ9F34VvaT46ucqZ16jCbHPyjNeF3+J3+X3aWXFvHuwF+h7WnHHQn/zq
V7/qWo5s27Nu4YUX7sj1ec70PfRB9Lm8Cw76rh/+8IfZPvvsk4+vqZB/n7Gf
PpQxmPLzb8aMaaaZJhs5cmT+e/SLoVyrzAdsuOGGuS3Bf9kDiXdL/0wZmZNh
3KSueOgvmYdYccUVW3YQ+UnQF8q0Cvxfxomf/OQn2dxzz52/X/pX+u8y9t9/
/9wOXWSRRfJy0B9zbXwooD2feuqp+ThE/844gQ1BWRhfij4mWgL6B2MFdZCy
sqcs9xDbR9PsSW/nMl5xT0UYq3lejDu8Z94r98l9G6+88kr+jLkvngPjKOVh
b+66Ph1tA/2T32HdGdeZaqqpcrve9mtiHTX3zVjNGIe9usACC7SlQ/B72Hg2
D2gHz6PMtqL9VlGmJ9FOGO9/+tOf5u+V98u9YW/y23XmeqgH7MWHbYqNtvzy
y+c2q9WBvfbaK/cH+gs2O+MJbRi7lftiDoN6vPfee+f2TJlOwrwhdYF3SP3k
e3yfchV9kdNOOy2PW8Yewi7hPrC7sVc4n73f65CiJ/GbI0aMGK3um62WAm12
9913z98ldY+6yhp0YtvMp0zRk0444YS8LEWbr0zr5m/Y68W17vSLZfXU55xk
/zrKiy/GO+Sd8G54R/Sx+LRlmhjvjf6Xd37IIYfkB//Pd5qCesZ1qb/UA/ol
jllmmSWvC9S/d955p/IaaEh237QpezaMRcXnUteXEUMT2jG2gB30SVavqGP+
MzuYR/OQG54+n/HLt1l8OmwK2jztEd+N8/gMm4BYozKIr8EeoL+iXRZjXtBg
11133VbdD8UrWbmwcXy50JOuuOKKvD/bdtttc1uKsqGt4XuyVoTz5pxzzkob
gz4NfcuvoWBsioGtiA3B+Ztvvnkej2KgwWD/8Rn9rtlNRdgTHDubeyyzB5ib
xJbhOozBTcEYz7jHPeOXFffepn9lnw/KRj9H7FIZ9Ie+Tvm4OOwd/xnvqC63
3XZbn2ug89n1eWdl9boY1+Up05MYI6hffrznuVvfTL3z87sheGbYN3wHu7no
N6GLYQMx98d77y/EPtk986ztvrDVi88EG7oI98S+Y4zh5Pcp3iPxX/gkXJO5
/pAOQowDz6841mOjMH6hAfOMaZt+bsnH3qAHY6PTVop9D5ql2VvMyRr0O9b+
sElM9+T940PS/qwuUN/RcmhDnM9n3aDYZ9ncL3WX+sc9DNZ51V7Du7U1TXYw
dzGmQywMbYH7Zfw0zYJxb6ONNsrHC+yBqaeeOj+HMTKEjfXY9nWgP2FsR7tH
t0K/8L/F+Mu4Qd9gNiwaCL4kfn835k7xnSgTPk/TcM82vhXHRuwY2ra19ZT9
uPEdsWPob8tiUrC/ttlmm1Y9L/O58NvQOsgtUtanPP7447kfyffxI4vXNy2J
Md+3qTI96corr8zrGX69PzekJzH2078X2yt2Ef4S4yaaiX+WxJ7gZ9n4YzA2
zzvvvLm/ZzYlfb/3Yal3IbC1KLvlYbSjTE/CRmVeknHSYnc4TE/CZsC+RFs1
+4/3z3hm9jEaXgqchz2GHvXHP/6x9Q6Zb8X351qUhWdMHwDYR/5Z1oW8GN5O
MBsYm6DMtkITrKKoJ/Fe2G8WTc7PG2OrowVwHnUyZa0C/b3lemOOztdLnpXF
ZmD/EK/UH+izqJPeP7eDZ4QORDsrwvuwvtAflNv6Ado3c2fUIfQnD3F21GPe
NbZKndyAKXoS+mNZ3U/Rk/71r3/l5aZuzDfffPl8htlc2HbU2dlmmy23rVL0
JPQd7MZin1DWt+2www6tOohtbeeii5fVU65t4CfSV3Nu8b3wN9oUY2cR6i32
uj8fjRutvwnwB7h3xmD01mKfja9CnAL9ATEFIdA27b7x0a2svKPicxmT1rSL
7mHroDnqrnejTzN7lYO+n77P5vWxIX0bK1s3RL3Fj6TvicU7oh2bzVAVC4Pe
wlyd/S7jEP1BsU82sFOwj0wfKupnRZ588slWbFdMT2J+DHuZc6v2bqIf5Bzm
8Ir+OPOR9FdbbLFF5W/xLLHBm9ST6IMoF3OMVc8cn58+lOeckqPEz3N1Yv2J
H0uaWO/Gc6BOlcXdo7HZudj5VfAMGWc4l2dQNj4BbYFz0MXIfdkUfr0b7SIG
ti/xfNgt2JRV2H562FdV7xSbgjHY2+eMYVdffXX+OT6Y7zd+85vfjHYNNDn6
Gq8nYYsyn1TGBRdc0Dp3v/32y21qfBz6rDJ8v9iNvCrY1MV40eJBXaAd8pza
jXUfqqBf+GeJn0xczJgK8Uam2TOHXQaxCtih9kyKsYAGfo35yFWaUxH6AOZq
/DzSJptskl+HedXjjjsu9yvK+mfKwnnY0O2uqU7F+9pVcwztwFwM/nBV7Kbl
+uMZE1MSgrEHW4J+KwYxMmV9Fzn7mbeLzZ0TS4PNUdSTPOhOvs+K+SBeQwjp
SQZ+On6OH8Px58p8c0DntHN/+9vf5mWjjmGrlWFjBz5/TF9hLgxdoEpP8uA/
ez2JMuC/heLtTPtAn4vFGDDXQT3hKM7tAfam+bbEIhuMl4wdaI1NjB02X9fE
ejfqPDYR+l0ZaCV2Lt+rgnpjz3PjjTcOzsEwb8U59H9+frc/MIfF8/A6WRXY
Yja/Rz9X9E+IOUEntXizMnzuRbT5FOqsd6Pu+3YY05MYU02rwKcJrenkmS+5
5JJ9NLWY/8e7ZbxItcuIDbBz66x3o58lZtC+iw4cWzeMXky/yvnYwbG1Jqkw
70UfxXyoacNlMEYyLtAfE5cXw693K8YLC9Eu/dGTwPf19E3MBxiMW6bToHP4
mAHAl7bPGediMDaYnYTvWDVf7/OMo3OE4mYM7G/LuYMNXFzjV8Q0oio9iftj
fozz0Jer5lbQYKy8xfgcfGT+fumll1aWCbATm9KT7HeJYUtZy259FPOnsbVa
g0lPIlYGjaSqvpm9ybOvuh/zpziq6iS/ZfMk1PmmqKMn8c6x+zmXOeEYjMPE
+3A+cUJVdqv5i9ZvMJ/lsd+l7RJfVYbtX86B3ocNEIL7tpgmbDT2PGfuPIRf
g1alAzcJsdfFea7Qgc3WTr2ugmfEWkRiQzp90Kek1KkmIV7dP0PWao6JMV/4
9TY+oYGHoP7758G8RRnY7XYO+XpSwT9AJ/awzsiuhQ+F/1sGvoNpFcS/dhLm
061MaAFNgTZgcY4cofgj+llioziHdVCh8YO8KZxDDHcM2zOy6HOxPj7V1mP+
qkpPAj+XH9OT0LJS9SRfVg50OfzrEPhvjBWcy5wc/ViZ3mJgS9m1iaWvU5aY
ngTYhZxLTDc2btUc2ymnnNK6NrFyIbhHuy6xIyFoc3a9TuXSbFJPwr6qGmOx
m00bZ9yrOs/sSuoC81IhiLG2/gVfoimI+7T7Ys1pDOa5KGtR90TD9zlA0RHL
QK+hjXIOsUQpdnrd/EnEpKfoSWjxNj/B2BrLp0b/6OPMU/In+XwNndKTwOuy
PNcUH4W+u539eUNg91odiK3NBd4rOjP6U0zLlJ4kOkF/9SS0UPs+Y10xloJ+
kZwsZWt8bYymDaTGYBD7Z79XpcMSE2znpWhV4NtYLJcCccUxPemII47oYw/F
sLxOxOF6PdziWapisw1stib0JO9DsG43BfQzszPIp1PFYNKTOGL5tXw7CtmO
zDPZOcRHxyAHQTt+XBV19CTsdzs3NS7cx4FUxd6av2NtqHh9YvToN6p0XeIb
7BrkHIrlEfAx6cREVoE9Yecyh9gtuF/qkl+vGTrwx5uaBwO0Ffx9nlOnD/pX
1np0E/wN5hr9M0zt2wYL9KW2VolxpCregbHZngP6Uwg/N1OV97cIGnyxD/Bt
MJZvjfJzHv54pzE9h9iWpqAt+7pGfEgIP88Qei6WW97P2YXAl6MPKfpcVjdS
1sfgw8T0JPrRVD0JG6+OnkT+GTuf9xOLU7N1URzEPlRB/JKdSxxLDGL86uhJ
5uMzLhHDX4WPZyIGP4SPRanyW9Ee6txbOzSpJ6HrxOYfzTbGtg3NAdi6VY6U
uQrWkts7air3N/HOVgbipGIwD1ZWVp6H7zuq1k4x/1zHh6urJ5FbLUVPslgr
/LnQWpAi6Ih19CR/r53Uk8ByrHDE1iITe0gf1VTeIex0yzGb0lca+F3WX1aN
1dKTRCdoUk8iD0Mq2Pa2Hha/KBXmFez30CRCeD0J3SoF9HXfh2NzhEjRk+wc
jlDctQffpsxmIZbC+ohYPgniSOu8hxA+3jO0JqgMy31L7Ccx8yEGk55E/YzF
MWAT2Pnk2Y6dUzUPaVAHmvZ7U/UkP54xP5MK9c+uX+UHej2JOap28HpSyr5T
+Bh2fizmwa+5i2lPnYD6xjoh1lqSO8DPVfqjyfmwoQA+vsUxcDCXlzL3N1iw
ddMcoXVuhvd9yOsXwnSMOvmFyJ3Ls/VrfNA+Le9Kikbk145U2cb4guRVRKuq
2mOhCmJq69gKKaCJW94gfKyq9Sjk8bB7Jd90GawHsnNCaxM9rFMp7v9j67yI
wY7p76yviPV9fv1JJ/Uk4l1jsL7Nzo+tzebe7Vxslhjt6kkc7GNRhW+HVZqj
32sEbSkEPr+dR16+TtCknsQ6xhhehw6t+/HnpNisxA/Z+X/5y19q30MIW2/H
UTW20EcSd1WmHxN3ZGsbYvYitoydh00UoxN6Ejnv7Bz6hFT8eDXQ9CTig1Lt
S3JBVcXH18XHT1bFZRbxMfuhmDaQniQ6QZN6Up24Ub/epUoXKsPngSQep4x2
9CTwe7+xPiJETE/yNgJzKil76fo1Nn7vYn8v2KXMVbA/cJ254joQZ8T6RPvN
Ojkl8Evse+SpCTGY9KSU+WCfr8vyAHmKz7QqFt9AU7C8JX6fmP6Qqif58axu
fIDFFXCE9hfyelKKr1CG15NivjPYfCRHce1tEXxfO5e1670G/Z31Lj4egIO+
sKl9p4cK5Ij2z5D88E3l0Ogl+POmO9JvhNavGaYTcVRpHZYzOBar4mHMKM6p
s7eA/R5aQRW+/XGwJi2E96faXa9m6wPb2QuiCmJqyPkTi2/1scwhrYC4V8vR
wYFehG5SJ78U8Vf2fa7FXBXPrN29JLulJ5G3N4bvG2P75aGzpYyDRn/0pFCO
RCPV7+WzFN3A60nopJ2gST3J50QOYevoOcryXRHf7PuL2DMvfqfJNe2+jRF3
GII+l7WZIYh1oe8osydDv5eyN3In9CS/zi8Wj+cZyHoS+H0EQmsEsL9Y9xvL
u1sHv2a1bI+cEN6uJj9iCOlJohM0qSfFcuV5bH8rDvqiOngbJuRHtqsnWc5v
DvziEDE9ya+3J1cI9lrs8P2f17LQFfxchR3ECTMnR25j1gGm7H2RAvvu2m9g
L6RoYYaPsaqKkxpMelLKvENMT7rkkkv6vDvydaXUCWKxOZ/33wSpehL5jOy8
qjnTMnz+RuK5y/DjHrkx28HrSSl9j9eTYuv3BpqeZFAn/B4IHDFtTIwOddo/
wxTNeKDj+17W9cWwvVc5qrQn8yfajSM0yPtjvxfTV/xYyFGlmWDnk2Ouzjxu
ERvPfQ7jTsKYzrhE7ArjrdcKqmJPtt5669HsAA5iaOmzycFWtQ86vo/PwW4H
2hK+E+ujGPtSNepu6UlVc+2G15NiGlu39CRstBipfq9vP1V6rB9bU2J/2qFJ
PSklpiamJ3ltHE09xbby61FZ590UxDbbnDdlCa2BIuYllF++Cuxx4j7pQ9kr
jbHL7qNXepLFd9a15wa6nuS1OvJPlEEOrFh+lDr43F4czCOmgqbl+/WQnSs9
SXSCJvWklPw+ht+vsO6coNcKKH8Z7epJ3kflCM3bxfQk2z/dxlxsuDoHe1d6
sI+8P1x2MMZX2aKpsJ+WXZN43DpQbvsufWJIixpMelLKmBvTk7Ab/LtCo6hT
H6ry6tYhVU/ycXpVa2HKsDWPVeO4t3mZm28H31YZH2P49hPLtz9Q9SQgt4KP
U6iz55b4fxCPRFySPUP688GOt+l33HHHynPpc23dX1XuJDB/gvWv/YH5Uq5D
vG4sttb7h1XzOk1hWkSTaxaKYOuTyxHdhnkCnjtroJnD8vNrVWM4/TfXqLID
yCOLLhaaXyJ2rGx/c3+gh4TW3Xm6pSedeeaZ0fO9nhTbJ61behL9dIxUv9f2
3OO8qjVFXlcmJrATNKknHX/88dHzY3qSz8PDmtq69nadufAUyGVv5WHvwSKs
qyBePTX/Ibk3uEfmCdCoGLvQfuk7Vl111dZv9UJPQr/2fUdKWzUGup7ktcEJ
JpigNO6NPAroek1BngP/PGN5Bj2+j+VgHUsZ0pNEJ2hSTyrrN0NYbhaO/uhJ
oTx17epJfq8NjtD+MzE9iXwOdg188yZgTpO2j1ZVla83FBOSio+t6o+exBHa
Y2Oo6UnE6/vn0lT+x7qk6kk+t2l/9KTQOj2vJ4X2CY4xmPUk6lfd5+rx9nWd
+SvxP7BfrQ8nXnAwg4/l+5eYjej3BojVw3bWuxVhHDANlL45BvsDWfmIo+o0
tPF2bJEU8AcsDzbPkPG5uN45Zb2bh5hENEOvIRYP4h9CcUaMA+x3QM5Z/KTQ
NZhbqkJ6Ujmd0JPA6yZl+37wvm2uNiWnYLsMND3J6zdN5A/tL+SjtvKgHxeJ
7UdroEFbX4iuzrqFYk6mXq93I5+V7zOIt0xloOtJ4PeUI/7TQ/wPeYDJhdUU
N910U5/n2R89idipMqQniU4Q05PQMKrG5nb1JPIE1unTPDbPyYFuU0a7epLf
Q4McFKF51Jie5Me32PxvO7AXOzm+WYONjWH709hBLqZ28ft61cnBCt7HJz4p
pBX1Wk/Cnq7ai6FpPQl72L+fkE7ZaVL1JG+b190jBjvWvhva52+o60nYKP2Z
E/VrldrNQTyUYZ4RX5g+6qqrrup1cfqNb0/cU9WaJ8DvsPOrcif5c5lPbxee
sf1eLHcScTW2zpcjJXdOf8EH5beazm/P/BTxWFwbmyG0j1VdPcmDf816anIu
2n3UuRZjwmOPPZb7gcQ++fyU6CFV+5JITyqnU3oS8fJ2bXLv+NyWrJOxOLdl
l122Y/k1IaYn0YarYm+a1pN222231uf49wOB+eefv1Umnx/c8nDH9BDao/WD
+EuhPbB7rSf5vUtS26rRaz2JOhrLE+KfV3HPPnwv6l6T+Ny7dX055sX8dy+/
/PLS86QniU4Q05PIq1ClKbSrJ/n8LFV7YZbhY5tCufza1ZN23nnnJD8ypif5
vSOIv8VmaxdiKWP+L/YTNo/lb66zx2QRm7e3o86e5D62qWoNSa/1JObnq3KM
NK0n+f0vivZFN0nVk/ya/Lq5wH1sU8h3HOp6EvHqKTlBQlg+NfKnNQVrU7HX
yLnR6QO/p911jk3cp+WraWrfxP6CfxvKXZ+CX09LLqEYPv4nlrebnM92bije
NIb392L7Xfl9LdE2QrnSiQEgxqa4h1ldqA+2l1xKLpdUfM48dJcqvSVFT2K/
oVhuXsZS5tCxS8w+8Ws00Lf8nntlMNfh/byVVlopeG4dPclrONKT/kcdPYkx
A5ud/TIYA1j7RDwwYzTxK2hM6AudsKk8MT2JtZJVOema1pO8H8LR1L7t/cHv
++BzxKLfk2OyCtYp2Xenn376yv0Ieq0n0X9af8PBWuVUeq0njRgxImmtmvcn
8B0AvZY2F9L52oUx1vw4jlCMURnF2KbQ2gzpSaIT9EpP8r5gnf0lief1ucpC
+eHa1ZMs7j3W18b0JPxV3yf0p89hrqlqrzSP9bfY4e3CnJfPz1I1P1nE5wom
d2iIoaYnoeOwB4SdE9vPuFOk6kneP60TX4dtYTkeOEJ5d4eynmS+TJ24cI/P
n4R/2BT0rbQJ8up0+qB/CsWWdhrbm73OPjSdBJ0Av5B3SsxpO3jfJZY/n/7W
9oFLadsPPPBAW2OBx3L0M7cSi5tgLUjVGEKMBn3yCiuskJ/LOBtbl1UF412q
1pUKbWnYsGGt62InVeHte68n4R+YvY8NkJpfGZ/VrkfskcFenanxXuzzwfer
8mbV0ZMoh/Sk0amjJ6EVe5sXrZXyYLt3c83uQNOTWHNF35KqNXQD+jnTWYgz
sphR4rdPO+204PdYE+LXscb29/I5JryeRD1Bby/SiXzcrMOzc+g3UhksepKf
U7GcvbwX5sU6gd9/KcW2Nfw6CPZoCCE9SXQCv89jmZ6E71KVD7NdPYlx0NZo
4Vukxu9gz9rvVe151Y6eRI48+w6aVdX4HNOTgHk9ux7zSakwvvo9EtCTyJ+Z
Ajad/SbjUrt4nbFO2c2mw8av8tk7rSf565fpSYyLVfP4TetJ4HPM1omRZVys
miOuQ6qehC1E3DjnoQ+lvqPnnnuudX18jVA+9qGsJ1nsYmzdTwiz79g3sqk9
HYcKtGv6JnSzTq4HqYP1C/igfv1KHci7a/U1tA+NccMNN7TOTcnhRXyLnX/l
lVfWLhtjvemfsX1w0IqwNziXvD5l8zD4IBwGYzDjNfmK28GvLwitR6uLnyem
fLH+068x93oS/qHdK3oStlLKXuhAXAPX87Gw6EmpPpCtT+M9hPB5vWN6kvd1
pCf9j1Q9iRwH9F1NaZ79we4vpCcxH/WLX/wi+P2m9STg9+rUF4N5nf7mHA3h
9Q/uE7sDv6eqDfv6gO4fy7Xpn6XXk+hHyLtRpBN6Ents2jkp8bFGJ/UkPw8S
alerrbZa7ivGwM7y9jAxnPifndJivH5V9g5D+DjgqnkD6UmiE/j2/Je//GW0
z4kpr/Kn2tWTwPdT559/ftJ3/Nxl1Xe8nuRjTVPLE5snStGTbrvtttb1UnMj
4n9jB/p9OdCTuAa5+WKgIXFuf3MS+rlE+twUyDFq32HPiSo6rSdRZrt+2ToS
1iLwXEN0Qk9ifoocJJyDz5S6jpD86+TEbYJUPQnQNO3cs846K+n63u6u+s5Q
1pPWXHPN/Lrk6Q/pbSHIlWR2TZN7igwFyJ2Jb8zzC/kkvYB8GsxXl+XXTYU+
1GIGqvK88lvY+1a3Y7mTjOHDh+fns7aiLmhQ9nuxuWuzc/Gby+YxGJfQMGyu
BA3D4oB9HE4dzIbpT36oIr///e9r9R9+D4OinmR79aEn8Tl6dArkmURn8xol
ehLPK2WNIJqM9VMhfDxyLI8bsQDSk0YnVU+izvM+eY69xrRK7q9M7/D1toxO
6EnoJNYX1BlbiZ0877zzks6ti9dZqJ/k0yBHWRX4NfadKaecMvob5KgM6Ull
Y0En9CSwPQeoE6ljme8TmtaTfBtnfXcZiy66aLI+67Ua2ikxZGi8nQA73XLh
Ma6nzH0RE2trIPAvqjRL6UmiExAPafWKmMUiaERV+Xi9bpMyLniYi7S8suQB
ieXIZ77M9jgmD1oVvlzModCvV0E/aXOojEWxuTbbQ6NKTwLfbi+88MLKc4G5
6mIskulJVfHDhtkmzHf2F4ujZYyO5fvB1rF3ybhJbsgqvJ7UiRgLNAq7/tFH
Hz3a5+Rd9TFgRbyeRO7kGOz7HNOTgNgAy7EY29MbWC/GGNFUzmWvJ8Vset6L
xdixLiY2pjG3bzGHPLMqe873O0ceeWRb9+L3zDvssMOi53s9iVjEKnyOyab1
JL8OprhfSBXkhCA/Bt/rz/qeoQjPjvfImoibb76518XpCPgONpaWtT1sXx93
yhHLnWSwzorz28k9Sl9rv0fdD43z+DnWN+K/l7HGGmv0WeNp/Tx6V7vxuBYf
htbSFD5eDJ2qqu9knoh8ana+zyvGc7Cx3PQkbI+YrYQezu8Wc99xj6ljmt1D
ld5PDnArd1X+L/xLr2OidcXwGk6KnkS9t/Pr5HLqpJ6E/hPDx8fF5jGtHRJX
yDpZnjntxg7Wy3Yjd1DM3mEtalXeF68njRo1Kvp7Pg6uai6AvsE0JdbcxUCb
xV7tlC4A2FneF+E9VeHnoTm/am8F5sV8vkpv0x544IG5flXE5/JM0ZP22GOP
JD3pxRdfzPUvzkvRPH0fyZEyt0HsbaqehL7Cmi/OZVwp9pn8m/ivUH6+IvQZ
PodJSq6q/sD9Wawu/WwM7GjOxUeO9VHYy3YfZXEkQrQDdif7WZrP6PeXxffE
BrjiiiuC3/XrZsmxXXffRM63PSkYK0OxncSyW26jmJYEXk8ilw5rb0I57bCp
rR/EX4vZIq+//nrL7qV/YY1PFTZ2oj2F8u0Dc79o0lzfY3pSzPfG/+dc8h20
G/tfBH+Xe8Q+CsVHUWdsT80ULQl7x+wtDmKFmoZ6ZH472pUHrYBxpmpc9/Yj
tm9VvUYX9bZyLFYGjYj6w3OlXw/5QezrwD4glv+vCbAHrJxcGxugCuIebP4L
PSY058EcuM0Px7QkPvN521dcccVoTHcR7D/2urZr4GdW2YTYDF7HIX6gCuas
7Fw0sqb248Ovsuuiv+LzEWcUm0t966238rk0vhdbzyT6QvuyMSbFdxmsEJNh
PnUxbwbjAeMrcxKWZ6ROXjSzVdmzqC6WCwLfGlujTEPFR6Q8nLf77rsH2wNx
XD72ZMYZZ8y/05/4TfoOrtHEHIxB+c335wjlqGWsxN8kttf2vPUaEH40/iWY
nsRB7rEq/QwfkHUZRe3U9CSOqhwu6F/0N/iqVXMZ2CqWiyvkXzE+Ugcoi/02
419VPBk2hbd7YmMKtp3fEzC2LtOvJ0GLrIoVLpYlFk9LH+/9Tt5tFcx32bnY
qVXx2n6tatXBmMVeVIwVsVjcdsBusH6kqElgDzMHFrKj8StsPwQO1qlV1WXa
u8VecoT8EYP+xfzqqrxl6BeTTTZZ1AbqL76upeat8PsVhdbF83yXXHLJ3D60
PGZ+PTExj36dg2HPh4P+oMq2pe7TH9n5sf0iqWuTTDJJfm7VHB9aKPaY2TSm
pVbZgfg3Pi9qSu5Inwe06HuhN1atUSjD+nT27Iz5OU2Az4WdTn/CvYRAuyUe
IkVLwk727Y8chf3ZL0oID/XP1lDg27H/B/bnBhtsULr3GnvisH6ruDctB+MI
NidzPqlrmOkn0KXIDYAWwjoWyoDugM2Bzs46Ba6dmpusmD8JHx67AbsO+wb4
LzYQv4vtxbqiUJw0fQf3TH9m+//awb8ZJ1jHEoK+z9YM8DvkquL+sNXo34m5
xdZmTUYR+jz6E5479jNrBu6///7W59wHawPom3l+TedlJBYYWx/7gXVd6DA8
J3Ig4guTi4RngK8S6mOxkXh+2M7e7vN2FM+Qc2J6XirEz9rex8znoXnwbPAt
iZstwljJ75td7w/sGT7zuW7xQ/ib39vC26h8ForZw7Y2P4u2wvov6gJaF/9P
OyQ/TpX+mAoxa5SF3/N2LgfzX/ydukO9LIN3xzpT2iA2APY0/h/1l/lQ6iXP
ADuC9hSy+/FJKYefT7OD61q/UWUnEB/BNXg2xWtgG/KZxX0xRlqdM5+nWOf4
3Hxv+kH+7bVB38Z5Tnxe1HvrYHmTbU08/Rntin6FNlzMn4PWzf1gJ3APVT6g
KMfmVzfZZJNeF6XjECNIXaJdo8tgg3LfjJ2MiV5PTsmdZNg+xPQfdbRV+gjb
PwNdnvXzrBOwtbCM/fhbzC/Qf9TZp8Dm8SlTaB+bGPy+jRExv78uPCe/jx71
0No3eg3+LGO+xXHQD1n/jFbO+IJfaZiehLaCTYAvyfhgvjj/5ZkQg4Y9U6ap
4D/id9CH0w/beG4wX8C4SV/H5yn5pKhX9GGM6+i1tgcg4wAx2ega9Fv4Mb5P
pV5g91BfzSajTtLH+vkmO6g3fGYxGIyXIZuMg7lBPr/xxhvz8+lf+bfNnxbH
Qeonn5t/XVUWxg7GTJtLREPiXHu+/lzeKWMbn1tMBbYx/7Y4d3/Q12MLlfm6
PFPac4qm5J8zMYJNg15g94oNQH2nDRHfX7Ymk9wa3DPjdLGMjOd8RhsB2oeN
3bb3oj+YW+bzkH1E2zI7Drsc+584H2xL9sijzmBLdyNvN/XJ/KtUn4iy2hwI
B/aXzRHTVlgTh91ta96vuuqqVj9Lv4Et7nP3o6vxvHwMX9G29esf6BdidT+0
ZpYctxYLTnw7fb5BP027ohzYWz7fivmP1H2vRdGfURaL1fEHfQtlwRcpA9vV
NCBsVPQ16gA+DeNNXa3V1i3E9rxoEnxge57MjVOX0c/xwdgH0NYcoyVWzT1j
R4baH30r/R/2N3VJiP7AWIBOyfhGv0TbJcauTLvG3sC2Ie4GH5w1ccTW2MHf
2EPHxvFUiCHAHqGfZH6FsQptljpOf1gnz05ZPm76MvxRYsu5Lr/BmILGFLOR
sYtHjhyZa1v4xZST9WD8F9uMv8f2v8a/xb7CDuT3uT/KQJwC40xojoa5SFuz
hf3LOh/TMRinOLA9GFtSc3XWBTuGvhh9kTEG+5HYCsZ17LuYj829M89CveA5
oRny/KzO8P/41swzt7sndRnMPaGL8s6x6xiveGdlsSzEfRbrNeXieVM21hj5
d8yYx9/4jHM4l+/wXa7BtWJzafT/jAfoKdjE2E7YpOgyTb1Lxkzm3rkmdZX7
9+0VzQt7MLZXNnO43CN2OnXP2ie2GXUvtm6RODT6FH6L+szvlvUbVevZaSfU
N5598R3xNz4zzYV3XFbn+F1+n3JQ34gDA+wgnhP9gT0na+O0edo4fUAsN0cV
5HKjrfr5IGxwbF7za6mj9EuM+zbnRExmUzGHQwnsRp4pNmq3c5eTkzk094v9
i1/IHDL5KZpeo4KGTN9EfWbMsXJQh21cTM2dZJjvWydvF/6e/Z6tYWOtKfn1
8GPQqLGD6S/r9vv061w3lBsjBdbqcA3mYermMksFjQcfCj8bTRg/Bl+X2JFi
bDPlwf+hT2X+3JeJPgufz+wE7DD8NcZj7DXsAHQg+sXQeMy1bb8oYgHoM/kt
7BCzJRjj8VdN40kBvZE5GrR47ALeLf0Xfpf5k/TH3D9zLYwhxD1wPzwHs+3o
z+nDy8ZUysqYarlusBe9Teb7d/pv+nH6d1uHR5vg3/zdxh/O53vWvzNeWIw+
vxsa3xk7aFumD9KeKQtjbJl9yN8533xwbOPiWGhlYaxizCru6cv4RFuhzdBn
ME4yL1U80EuYr8Dv9/NHqXsE14GxC82TMYuxinnHUF4HxmUbu3mePEv/bvnM
dGb6q5Sx+9577w2WjXZC/8N4S72mfNRNfHPmcLsZk0E9wgatG4fNWkjWMdOu
sAPoO7gOMWHFNfvUKdYZ0p55Vr7voA8qq2/etvVrH/g8VvdjNj/tnrlv6gb9
gfly/L6NxazH491g76ALMS4wLvrcuLSfYll8PaAssTlo4tHxuyx2gP9vZ69S
+gZ0c4sZ7SbM3ZJ7i7U0lAFfgXGL55Wii9L+qvx2njNt0McqCCHa299NCCE6
CfpiyG/Gf+NzG9v5L/ZkJ/LVDwWIFcd/xeZqd9+0diHmA7+5TKPgnbI2lLlF
bER8vti+Z03h1y6k5k4yLD6G2JlU/P4ZdeeXqkB/szjXsj2xU8Ev4xqdiN8Q
oimIWzefvI4fTAyX5apEj6jKxSOEqIbYIMZuIcTQQXqSEEIMTfCjyJHGXCRx
Cd0EDYmYmTKNgvlN1viwlzEwR27rFPqzv1sK/LbtZ1End5JBjD1zovi0qflr
LX8836sT7xLD9opg7tviDPgv+06l6q+8J9bZ8PzbXS8nRDew/E3t7IVKrI/l
tKHdCCHag3hQtSEhhhbSk4QQYuiBrkA8O30/az+6Dfm/+G3TjDz4gz53G2vi
OJf1w53el4l8FTYmpuzrUwbx9nzf1qVUwbpQW2+Tsj98HSyvNDmiDPI+sH4w
FdtfiHVzQgxU0IOsHbWbW5uc17KFhaiGOQa/J5WH3BmsNW0yH4cQYuAjPUkI
IYYe6DX0+2U59zsN+TqJxSFOpgzyYPi8z5ZLc7XVVmvr94j5If8M143leiWX
jeXnbTdHgu3nRa7mkN1tkI/OxmDyFjYJMVJc1/Yvw+cmb0jqWiDiq8gvg47X
6bgwIfoDeYAs33i7OeOJq7C82UKI0SEHHLmpyLNVNl9CzjLmU4QQQwvpSUII
MbQgHok+n/ikbu+BS55j2+8otPe8z+XOmjzzE9vdx5E9NGycY21fCHJx2nnY
xf2BnKhcp2r/YvC5k9hbq0ks3oIcVOSEYU+j0L7aZdie2eT7FWKgQ95i6mvd
/c2BvdmJb0IHJsZCCDE6frxiHbSHOQdik9R+hBh6+H1sRowY0eviCCGE6CDk
SUJTIW8SWk23YJ8dy29iB3m2Y7D2jXPZB6td7cvvNx5a68XeL7bnNvFQ/c3v
zpoA7hebmz22yiBuauaZZ26VLbYXUF3YT5y5YvYXJUdTnb3qKDN7opEDPTUP
lBC9hDY7//zz520JDTl171f2oWIvcL7HHKsQohxi98p8RuID2XuOPeaEEEMD
5qbZl5c9bCzHqR3so8tnndgzVQghRO9g/zb2cWMOnn3dOg37HZN/h73OLMbI
jtlnnz3pGqa37LXXXm2XY7PNNsuvwZ4zxZzSb7zxRrbjjjvmWhI6G/sDNwX6
EJoMa+g85I5i/2KeQXH83WijjfI1iCENqlsQr8y+4bZ3uxCDAfaax6clp/7U
U0+d5wUuW6uJlnvddddlG2+8cR6XtNBCC2V33HFHD0osxODhrbfeyse0BRZY
IHv77bfzvzGGrrPOOm3nGxRCDE5GjRqV2/fYs7T/7bbbLtt+++3z+Rzs7vXW
Wy+3r4UQQowZoO1YfubDDz88+/vf/97vA62BGCNie+666648L9JBBx2U6yez
zDJLnnfH6yX+OPjgg6Nlxr+zXEb8nkFO6ToQp4CPSb6mYcOG5bYw/iNxS/id
P/7xj3O/k73ZmoZcLt/73vdyDclgLR0xUPiyjLuMwVtuuWW24YYb5n8n9zWx
Rb3ioosuytctELchxGDktddeyw477LA8JxLtj/gj2jxtnTxqaOrouVtttVWe
w0wIkQbjPvEIxL2yD+u0006btzXFsQohhBBCjLkwfxDSdnpxvPDCC8llXm65
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
8QsvvFB6PvmDyLfDGq/bb789u+SSS/J4Hc+TTz6Z39/ZZ5+dvf3225VlZI+0
ww8/PNtqq61az+ass87K12HBueeeO9r1gbgkYoO+8Y1v9ERPSuGiiy5qlW2s
scbKHnvssY7+XqqeRDkmnXTSxp9XSE/iXVG3aANnnHFGdsUVV0S1OIM954ij
uv/++7Nrrrkmr1OhdvPll19m//rXv7Innngiu/XWW/Pnf+ONN/Y5h/p78803
53WcOnr11VfnbaBdHnnkkezYY4/N96AjlznrBi+88MJovYeQnsTzooz2vK68
8spaz4s2dd999+X39sc//jHXNcsoe1433XTTaOfwN/pBe16ff/55UlmagL6e
+rLjjjtmG264Ybb55ptnRx555IDZf5L3Qp469nS7/vrrsz/96U/Z008/Xesa
jC30ZYxp3OM+++yTv/PU50z+OPrre++9t/XO2YvBQxlpO7/73e+yCy64IFrG
e+65J3/f1EH6+Pfff7/WPTF+nn/++dl2222X7zfIwR6id911V/75yy+/3Fhc
pBBCCCGEECngV7KXua1x88e3v/3tfJ/74oFfFqJMT8KGx3f50Y9+lGsce++9
d7biiivm58w444y5jZ0Kvtr222+fl22++ebLTjjhhNzeHzVqVL6PN3l4Ro4c
mX344Yf9fjbGb3/729a9sybL7u9b3/pW6fPxekxsb3t0pLLzl1hiifxzfNmf
//zn2bzzzpvtvPPO2fe///1svPHGy++5yHPPPZctvPDC2YILLpgdd9xx2QMP
PJA99dRTuU/EvlSTTz55tt566+VrynbffffW94gLwm/n82I50GzK7pHrdxu0
x/nnn79VNvy4TpOiJ6EzoGNQL5umTE/CH+Xfa6+9dt6W0F3GHnvsbKKJJsrf
a5WWQ1svq5sPPvjgaOfecccdpeeOGDGidQ71gJgs6hVl2WijjfJ2Mckkk+Q+
PNpJKnfffXe27LLLtvqFgw46KDv55JPz6y6//PJ5vef/q3SgMj0J3Wa66aZr
Pa9NN900r9c8LzThKo2BvRnLnkHZ/vVowWXnrrHGGq1z0MnKntewYcPyvHV1
nlc70JfxbtZaa61cY6YfoT4tssgief1eaaWVcp2xCjR8tFOeKc+Zfpf6ONVU
U+XXZv/FIrPNNlt+33xm3+EdTzHFFH3azcEHH1z6DNEqY9A/0MfOM888+Xi2
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
6iUDUU/Cb5l55pmj55FfgxzdMR8vRU9iDyjWxvQX8gP7HMocsX3tirEFHGgD
naAdPQmKa/LQTtqJGxiT9aSdd965dQ5+eBNITxod4hW9vhkre3/0pLvuuiu/
X9a8oXeQZ93q7x133FHrWin5uG0vOo7jjjsu+droz759Mq6V0Ws9ifXLKXMo
tF/GZa6FNi+EEEIIIUQvSNGTqvzJpvUk+MUvftE6h3zcqeC/42M3yUDUk1gD
yHdi+8kDz4Scu5yPP19Gqp700ksvJZcxxNNPPz2aNoTmVUUxLoGjCW2rjHb1
JPB7fXPE8laVMSbrSdRX/3yIGUkFvaIsjk160uiMHDmyde0ll1wyer7Xnjwz
zjhj5bpSdCtiDH0/xzu1d8JnxO6lkqIn+X0tya2Xis9zVrW3YK/1pIUXXjh5
zLPnVTXfI4QQQgghRCfZbLPNKvUk/Ha0hBCd0JMeeeSRtuIYmIOeZpppks9P
YSDrSeQfT8HKtMsuu5R+fuKJJ0b1JHyW0Jx+HdhjqqgNxfJ28Rz9+csss0y/
yxGiP3rS22+/3SfWgzi7uvm/xmQ9CZZaaqnWeUcccUT0usA6TfQi9Isi0pNG
x2KEOEaNGlV5LjGM1PMyPYm9C0P7FRJHik5dpulcccUVrfVYvO+vvvoqqdwp
ehL7Ldr+A8QAprL55pu3rk1+8hADQU+abrrpkmIb2Y8h1j4pE/W+qbXKQggh
hBBCePbaa6+WjUu+1iL4idi4ITqhJ8Faa63VOi+0t3MR1gocdthhSeemMpD1
pCmnnDJpz2h0p6ry+LVaW2+99WifowGRzzfVL4yx7LLL5vtBrbTSStkFF1wQ
PX/99dfvoyfhi3eK/uhJUNS+5ptvvlr7eo/pehLvzvQA6n7KXnjoTuxtX4b0
pNGZc845W9cmT38V7PPm66uH9x6KT9pqq61yLYU1bmXssccerWvy/ymk6Emw
8cYbt8574IEHotdF57VcUvPMM0+lVjMQ9KTUMQ99lXNDuch4NmiCnDPTTDOV
6rFCCCGEEEL0B9YfmX+3xhprjPb53nvvXRl/z57TZiOnrK3wazGq8nx/9tln
uT7FeVNNNVWek7kKdCTySHzwwQfRMtTh2WefbZV3tdVWi57v/ZEUrQQ73/SD
VN3B9CSOFP0Mv50YM2IKyvjoo49ae4aXxXehN6EBNQUaJHWO68agbH7f7E7G
JgH6j/0WMRbUw7pYXhM7QnFhRdBWxh9//NZvh96XQZ4V+42ytltkiy22aJ1/
9913V55LXaROcu54440X1X0uv/zy1rXJy1wF+YMtfgWNqwrySNP+0TSLUCbK
ZtpfrP2wH5iVEb06ho/dpJ+rgt+2fpR3GHteXndEH2kS9gOza4d0OEAfZn8w
dHg7H+0F6EfREz/55JM+32F/OMu7XdX38DxmmGGG1nUvvvjiaLmZX0iZa6Bd
jBgxoqXLsGdECLQjtFbORWcjF1sVfn4lJT+T37Mwth6YHP1eZy7D9CT2c6Pv
q+KEE06ojLeydc521FkfKIQQQgghRCqWr4gYlCeffLL1d+ZTWb9TtJPff//9
PE8GMQ7eF8H/OPPMM/PzfW4U5kX5N3Oufs8xfAHm6Tm/zF/89NNPs+WWWy4/
d9pppy3NjYR/c8ABB+SxOq+88kojzwP/hPKy7m6DDTZolRdd45xzzsk/8+tA
yBHC36655pqWPsRBrAs5afnM/DT8G/79wgsv5OvM/D49+PtoLazp4JyQT+r1
JJ75H/7wh9Lz+D5aIOdcd911lffscyj5vY/QU8j9zb01CevqiOfYb7/9gjEO
/PZPf/rTVrmYh6dONIW9C/w86j2xc6ah+FgbNA10Rc4ln3gZ1Bn2Zz/ooIP6
vFM7ll566dzv4737tSfcO9clt9D+++/f5zu77bZb9tRTT+Wf231T3/k3+saK
K67YOpc4hPPOOy8vp6+bxJdwPv785JNP3kd/on5THtNheN6ci8a855579inL
vvvum5eRz+19ofHyb3Iy/+QnP2mdi3ZJjnWea6hNoiX7+JWy93rrrbdmU089
dXbllVeWPi/K5MtIXa96Xn5Pe+Kazj///LytlT0v3tVkk03WOh9Ngrbpnxe/
wbn8Jr/ty0K9Lj4v1u3Z80IXtXPZf82eVxNrStGCrJ+lLlIviqBV0J6OPvro
vO5bnaXccNRRR7XipngmaHE77bRTn2eC5lGmoVCP0BctNsb6KbQaYsT4jmkl
rNnimdx88819tFzGBvpOnkmZroKmRB3m3EUWWSR/B0V43uuuu25US7LxiXrG
WjMrAzr8jTfemH9m45Pvv9G8fFtHF6SO8LlpXDaW8He//x3xdOw1YfXVYqZM
T2KtLPGbIU2JsZA4ON5RKN7K1zFrH0IIIYQQQjQNfqGtKcJGxSc+5JBDsuHD
h5eul/BruqoOY9FFF42eG4r9wRdjHQS+C/P/xMnw+5SLMhOfwDq0Orl9Y7DW
IlZenwPV54QJHcQMANpTyrPjCM27m57ENfl/fBB8H3x0/Dj20UabmH322XMt
CF8wBv4ZebHRU9B58D3QfJh/33bbbZt5sAXId4XGQZ1jnd3tt9+e+/avv/56
Httl9YYyca911o2lUOdd2BHao/yss85KvgZty2BNSsp3bM+nooZSdrC2x/D6
behAU7H3kVIWi9Xx+7WFDrSSEOgF6NG0a+oA8RNorNRdfOFZZplltLWN9913
X1IZLSeXj4cMHejoBrp17Hy0BOA3Uspy//335+dzf7Fz0WuaAF0KfZq2g+ZB
H0k8IJo+ug65tn0MEHqyaSP0++i4tn6L9xAqL/s5FGFP+9h9kh8bijnsy45Q
nCf9Afo+/R91iGuxNvL444/PdWA0Q2KkiDOqiltFj4qVYfXVV8/PtZxFsYMx
C04//fSk822+gXshHo89CIhrJG6U/6JvkpeKNenEnKHZ7rrrrpVr92jX5ETn
+gsttJByKAkhhBBCiI7CvDm5dphn3WGHHYK5hJnnxVYl9oB5W/QobFVsYrQA
5p/9fLHN5zLPzXc5l7gBbHP+xmcpsUXoDcQykFuVtSjoHU888URj929wP8R5
FO+PsuNjkaPc762G7R+6P/w6nhXPBfCBeDY8I/7GM+N8Yr44+B7X4fohX4Hz
0BX852gB+OHMgbMHEn50Sm6RIpQN/2vTTTfNNR7iBjoJfh7+4jrrrJP79d7H
QgtBO6yzR1QdeBc8Z94RsQz2DooH74T3znsM+aWcQywF79S/Tw7+TR0iDoJ6
4uMkWE9EPBB1iM8pB+fzX+6bv1NGi1OgPsbaHtcz+D3qK+W3usl3+C7X4NoW
P0PsFf/mN/ntUFlsDRTlpSw8P+o6z6DYTmhHMSgzsWHbbLNN3vewxpZ4uDL9
0D+vqjLWeV6+LfMOU58Xv9H08zJtrym4LjoS/SbPFo0JvbwsHpQ4JTQmNGmP
9VWUl/ps90e/XpZfifvlvtGGOY/nZ+2I3+U+TdvgWVjfyTMp6zv5bgxiCNHD
yevE+IAejhaZkp+rzvjEGkGLKeJ9Wv9tdYR7ps7zfbCxhL8X65/FRXE9y01H
/nTqoEEdIo8T90Qs0vbbb5/3l8V1iCGoo1wvtnZWCCGEEEIIIQYz+H7oNfh0
oTVwQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEII0RQvvvhidvXVV2eXXHJJduONN2Yff/xxr4skhBBC
iH7w2WefZTfffHN26aWXZg8++GCviyP6Ae/ylltu0bsUQgghEnjttdeyp556
quPHf/7zn9Zv/utf/8oOP/zwbPfdd8823XTTbNVVV80WXXTR/L9jIo888ki2
5ZZbZtNMM0020UQTZWuttVa2xRZbZKussko24YQTZuuss0721ltv9bqYQggh
hKjB22+/nW2zzTb5WD7ffPPlY/1cc82VzTLLLNnjjz/e6+INWp588snskEMO
yXbeeedso402ylZaaaVswQUXzHbdddeO/WbZu5x77rmzmWeeWe9ygHH88cdn
I0eOzLbaaqtsjTXWyJZccslsttlmy9+hGJjcd9992UEHHZTtuOOO2QYbbJCt
sMIK2fzzz58deuihvS6aEKKf0J6/9rWvdfxAQzKY75l00kmzCSaYoM85jAVj
Ep988kmumX3rW9/KtaTrrrsu++qrr/qc8/7772cHHHBANtVUU2Wvv/56j0oq
hGiKG264IVt88cWzlVdeOfvnP//Z6+IIMSg56qijsoUWWij71a9+lX355Ze9
Lk4pxBvPOOOMuf1y+umn53974403sqmnnjr/G//9/PPPe1zKwcnZZ5+dDRs2
LBt33HH72InrrbdeR34v9C5/9KMf6V0OQLCZmZ8t+hpvvvlmr4smAhx99NF5
mx5nnHH6vLOddtqp8nv4j8y/L7LIItn111/fpdIKIerAHIy1aeZ+0Dauvfba
7IknnsieeeaZ7LnnnsuefvrpfG1Wse9m7ojzOOfZZ5/N/va3v2X33HNPdtJJ
J2Xrr79+NtZYY7XOfeyxx0b7bbQVbMYxUU9CS5pjjjny+1p22WWzd999t/S8
yy67LJt44onz87CbhRCDF2IxxxtvvFafNsMMM/S6SEIMOs4888w+tsbWW2/d
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
Z9jzoJWmwdzAluX99Y3rnISrNVgfqixob+0+jJeSYO3abaPitCfmXHHfsnuO
LDsOC3ZJdp+4+GUWV0/y9dlgbd/ugxYd946iYVl7QuZnWbERiANqj4lvURxW
07f3MC6vA+1N2ntQip7E/MC2QbxvWX7E6BTEiignPjFzrI9P2vdsoc2vhZ5k
x03obWl6jIvrG5EWQ9ydk/noSbRnefQk7D9tP5Sl77rfV1pZt//BF88H1sbq
SU+yNtx8m3EaCG1AnLbN2NRqi8Qb88X6hPEc0uwwrQ8dGxpUVj9h7ax83h/X
5sPnXfOl3HpSlh7DOoFPWfwXbbmsOFisDVkbedZDimA1KfqZJDtlF9Yw4/Qk
7LN8x2zuNTJmi9rvuM+cjfgdSbh+i/RxWeTVk4jfasv76EnWP5NvJmsc566f
pJV1143SbGJduwf8B4QQDamGnpQVa98dVyTZhKDh2DLRdd0k7HoZ601540lG
qZaexDjf106BcZvdjzXdLO2DtjvN7rNaehJ6h7WLSNMa6X9tfYiPFAc2xHbe
xzgqLneaC2OIrDG36xPD+ncS+ED52ERY7FyODf/0NFydhPF/VkwAax/Clmbj
B66exLqfL64OmPbciuhJlGPMZa/XF3RUq3PhT5V0n6qlJ9nYGGxZNlbENiB+
DsfzaVOyKKI1oC+7Y8+k+C6unkTMJd/2lLGsnb+yxpkHfIns+ZLi4Lnz3bRx
sQt1t3Vis7GxXYipZn+n3cyC99D6q2F/EoerJzEuLhK/sxQ9CdzrSvsOrK6e
tg5eBB89ydqJ0K7Tx6XdJ7ScqK1cUXz1JFdbx2bFF/azx0/br1p6Els0nmUU
10YjaQ5FH+zG5PO1Z6tXPYnNR8u0uDbNeexY8Ke3+0XjYrq4ehJ+OVm4PvtZ
mgnjQVuWdclyUW49KSkmn4sti590HNg/27Ei+p/PGqzb3hbJGYb/vt0fP0gb
Tz0JYmKhHUWx8Q/YsuIB0caiObEOEmdXy7oCfSXHYp6WZAsLbn+RFqPVUi09
iS1rbcpd40nrI6zdKFua7Z+r6WHXKYRoSKX1JHTkrJykPuMK1n1smbT1ahds
F+0+peYlq5aelGd+j57hxqjDFpR4nsTLLXK91dKTgL6dMUca7pjQzRMYxX3O
bMQ9oF9mrFwkbwnXbmNMoCEkvb+McXzHquDqSVnan6sn8VyycPUk8vGkUVRP
Ikaw3Y85SdK9LaInubbJSfPxJNzzxcVOh2roSbSdbnzoNFvASlBEa2BM7c4F
bRzoKK6eRG4CX4in7vMNx8G7afdNiolRRE8C1i3sfm6+RYsbs85nHA02vmhS
n+fqST4x7+IoVU/i27dafto3jH0b+nG58dGTXBs/Oz9kDsX8wMevuCi+epLb
Drp5hnxwY20nxRqvpp6U5Zfm6kmMFeNwYwuxJuBLPetJcbHVk3DjkqXZnUVh
TcmnP3X1pLgcpFFcPSkr5pWrJ+Xtd9Mot54UjSUehy2LjhKH+91yj3xwNb+4
dQcf3LjT9A34rWHrgl+0j6ZFu+TmfcxaM/WB/onzZ8XFc2OM+Lx71dKT0AWz
cPUkfFSTsLG22dL0JNfeKc+4WYiWQqX1JJ816axxBevJbq4Z1miIMZC1uXEq
s2LKZFEtPcnX9sri2ihFN7QmfEBoB31yXlRTT4pC/Vi7YT0NPz5iIbrju7S5
KPcvLlc9G/0wcSLIx5wn/4Lrqx7nfwjUKem3OFw9KSvvoKsnEW8qi2roSe7c
gi0pL1gRPcnt0/PaErsxHZP8IquhJ7EW6N6faO7JSlNUa3D97pLWqF09ySde
m8X9hrHDz4M7n0hqF4vqSdF2k2/C4sbiYMPOzKe/cXOoxflAuXpS0TwRpepJ
QB9rj5HkF4kmX/T4afjmiHfzMUY3vkPuA/GoyomvnkT8O1vONx6YxfVFSopX
Uy09CVvoLHz0JJsXiS1Om02invUk35xezMfdd5Oxli/Rdubhhx+OLefqSeRJ
zsLVk9Jiz0FT0ZOy8kWALZukJ7njBL5hnzad+Ah2H+YARUD/sba20Q19hHqh
VSX5zdJGJ/VV5YT1ae4zuQOIbUacEPwC7HnrSU/CLyALXz3JjeWeZnfPt2fL
EedCCNGQpqAn0c65dWTdFDsc3w1totRYt9XSk4rkbSVmppsrJW7DPjNrjFQL
PYkxFPoBug9rN9gEE2uda7L52NiybBuYp7g5y+M2bEdYF/LB5qBji4vbyNpi
mu1SHE1dT3Jtt9nI+xpHET2J/Fl2nyRNKAlXN07Kk1YNPYm16Uq0pb4U1Rrc
+WBSnAhXT8rj0+Gu3eeNz+HO75Js9IrqSW7uGjbXVtKN28ZGPuI8/Q3PIU6/
d/WkouPRcuhJrl0EulEUrp93vIhtZxa+ehL3j7G9jZOatBF7N28OySR89STi
HNtyeWMYu3P9JB+MpqYnsV5jy+RZD6tnPSkpz3oU1ind99EnxozF7YfTvmfp
SeXRk1wdmDFKnjYdbaUU/Zp9yUuU1pYxho+ziyMOvlvOJ9a9L8ytmNvYWPPo
NNj7X3vttSZXoBvTsrnqSeSltPNV8iMnYfP9+eS6FKIl0hT0JHdswJZmk1gp
qqUn5ZkTudDH3HnnnabdtDkZohtzhKT4KFBNPYk5i+3fsZHHJika28nX382F
taDhw4ebMZXN7x7dsvLJgpvbIi52Lc8pLbZSHE1dT3JjJLMl2TYU0ZPI1WH3
KUVPStIdqqEnuXm+2Xzj9JaLolqDzU3Gxlw5DldP8s29B67NTil6EnGm4iiq
J7l5tdlee+218Df8ZN3fypEfFFw9qWic63LoSeDmuIvm4yO3XtFvJAtfPclC
DD3iwaHpuX6Z7sZv5cBXT3LXbkrRk5LsMJuanuTmss3zjdeznpSVX9xC7Bn3
XSxFT8JHPw7pSeXRk1z/6SLrtqXCmBItH/te7BTjtHLisrk5nIH43G4ZYtuV
A2z2bVuGJsz6YHRcWq/+buXUk+Ciiy4Ky8bFk8KW0OZjZH4hhGhMU9CT8DF2
45Ik5besJPWuJ0VhPIXtD/fT7bfS4jlm6UnErvDxY88C3Yv3gvMQKz06n3Gv
wdYnb+wVoN9FX8Jvnpi+9ljoAazLZMF7FqdBYOPO+50VAylKU9eT3PkwG/bg
cWTpScRrjcYWwk4ia96SRN++fTPnDj56EnFbWKtKIktPcmMt+Izly01RrcH1
f0qKe19UT3JjXead9/Ms7b484ziK6klufgc2N58gz839Dfv/clAtPQnbq6y4
HMR+s8dxbaWIrYy+X2q8wSTy6klx+48bN87Mfd1nhD1rqfjqSW77lpYrNA7s
hO2+6LhxNDU9if7JlsnKwe7SHPQkN48wGzq1L9hAufsm2fs2Vz0JDT8tr125
9ST3PSWHZK1hbMT3RX9qx8N2rOvat7J+7r4neeI2xEHfMGDAgPB45HVN0qha
ip7EOjtzEXI60z4Sexv9j1gr2IzxG8dJii8phGgaehK4vkxZudYrQT3qScRr
icstGoW8FPRRdgyZFNclS0965plnSo5DR65SG5OUtjttPOGjJ2EDgv95Vr4p
yjGHs8ejn8yCtXFr4+TGyySnaFIewjSaup7EPM5nXJOlJzFujvqlHXbYYeE+
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
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghRD0xc+bM4OOPPw7eeuutWldFCCGEEEIIIYQQQtQhaEcrr7xy0KFD
h6B169bBn/70J7MtvfTSta5aYT7//PNg+vTpta6GEEIIIYQQQgghRLNkxowZ
wbHHHhscfPDBQdu2bZu8nnT22WeH13DRRRfVujpCCCGEEEIIIYQQzRpseuaY
Y44mqye98847oZZkt2nTptW6WkIIIYQQQgghhBDNmo4dO9aFnnT11VcHgwcP
zrXPq6++2khP+uijjypUQyGEEEIIIYQQQggBSy21VF3oSaeffnqw++67597v
8MMPD7WkYcOGVaBmQgghhBBCCCGEEMKlXvSk7bbbrpCe9N///jd4+eWXg9de
e60CtRJCCCGEEEIIIYQQUepFT8LvroieJIQQQgghhBBCCCGqSz3oSc8++6yp
g/QkIYQQQgghhBBCiPqnHvSkDTbYQHqSEEIIIYQQQgghRBOh1nrStddeG8bT
lp4khBBCCCGEEEII8T9ef/314J577gnGjBkTnH/++cGxxx4b7LPPPg3KPPDA
A8GQIUOCvffe25SbPXt25nFffPHF4JBDDgnWWGONoHPnzsHyyy8f7LLLLsEN
N9wQ/Oc///GqW1496Zdffgluu+22YODAgcEKK6wQdOnSJVh55ZWDAw44IHjh
hRe8jgFff/11MHTo0FBLYttiiy2CV199tdH28ccfN9qf+Ntx9/T333/3rgN+
duSHW3vttc3969GjR7DDDjsEl112WTBr1qzUfX/99dfgySefDG6//fbgqquu
Cs466yxzPeSpc/nwww+DESNGmOfKPTv66KPNeYUQQgghhBBCCCHS6NmzZwPd
xG7kJkOf2WSTTYJ+/foFEyZMCFZffXXz21ZbbZV4vPfeey/YeuutTbm//vWv
waRJk4J//vOfwfvvvx+ccMIJwZxzzmnO+fjjj2fWLY+e9M477xjtaPvttzd1
RRPivOgq/I3jrLTSSsFLL72UehyurVWrVrH3JG7beeedGx1jueWWiy2LzpMF
9eN+t27d2uhgb731VvDjjz8G06dPD8aOHWt0pXbt2gXnnntuoj71wQcfxJ5/
zTXXNL9TD/TBbt26BSNHjgzuu+8+c2w0OMrxnNGahBBCCCGEEEIIIeL44osv
jHZw5ZVXBgsttFADPWmvvfYKLr30UvPfTzzxRANt4vnnn290LGx1OnToYH4/
7rjjYs938803G71m4YUXNhpTGr56ElrLoosuGtx9992JZQ477DBzrPnmmy94
+OGHE8uhQ33++edmmzhxYni9aFL27+72/fffNzqGvadnnnlmMMccc3jrSdzj
Nm3amHxykydPji2DbdfgwYNDH7w//vijURl0pk8//TSYMmVKcNBBBzXQk9i/
b9++xi4pui/64RJLLGHKYk+Wx55KCCGEEEIIIYQQLZM999wz1B6uvvpq419l
sXnO7PbGG2802Pebb74JunfvHmovaWy22WahvVCa75avnjRo0CBTrn379sbP
LA40sa5du5py2Pdgu5TFY489VnL8JGymfPQkfOfQ87BLevvtt1OPybVsvvnm
5pj7779/Ztm2bduGetJJJ50UnHbaaYnlTz755LC+48ePT784IYQQQgghhBBC
tHiOOOKIUEvo3bt3o9hA2DDhi3XTTTc12rd///7hvmn2PzB69Oiw7HXXXZdY
zldP4nd7PGINJUH8IFcvy6IcetJGG22UqSfNmDEjWHzxxU0Z4hj5QIwme1xs
jdKwOlqnTp2M3REaUxLYndnjHnPMMV51EUIIIYQQQgghRMvF1ZM23HBD7/3c
eD1oF2l6BeAjNtdcc2XaMvnqSb169QrPj16ShOuzR2yiLKqlJxELyZYh3pQv
1vZpySWXTPVNs3oS2xlnnJF6zDfffDMs69qnCSGEEEIIIYQQQsTh6knDhg3z
3o8423Y/crr5QJxvys8///yJOouvnkQcpvXXXz/o06ePiRmUxCuvvBLWk5jh
WVRDT0J7c+N3x+WLS2K77bYL9yOXWxKunvTuu++mHpO45rYstmhCCCGEEEII
IYQQabh60l133eW9n9V92IhB7cNuu+0W7kNc67Tj+uR388HVk9Jy1FmqoSc9
8sgj4e/EKc8TA/vII48M98XfMAlXT/rhhx9Sjyk9SQghhBBCCCGEEHlw9aSn
n37aax/iWkdz0pMXLmtzNY6k3PRF9aQvv/zSxGUixxw2PPjAEavb5i6rJz3J
jelE/fJw4YUXhvsuuOCCieXce/3zzz+nHlN6khBCCCGEEEIIIfLg6kkvvPCC
1z7Tp09voCfh+0acIt/tpZdeSjx2Xj3pmWeeMfoRsZnmnnvuYJtttgluvvnm
YObMmeZ3cqjVm540dOjQ8PcOHTrkOvbIkSMb3Psk2ybpSUIIIYQQQgghhKgU
RfSkr776qoGmMWbMmLLVx1dP+u2330x8bVuHPffc08T8jlKPetJhhx1WNj2J
+xCH9CQhhBBCCCGEEEJUiiJ6EvGk27ZtG+536qmnlq0+PnrSf/7znzC2Nxsx
hZLyy1VCTyJe1LPPPpt4jCw9ydWE5plnnszceC7Dhw8P9+3YsWNiOelJQggh
hBBCCCGEqBRF9CTYbLPNwv2IjVQufPSk8847Lzz32muvnXq8JD3pl19+CT79
9NNG5X30pC222CKYMGFC4jmz9CTiVLk2Rl988UXqNbhgh2X3w88vCelJQggh
hBBCCCGEqBRF9ST0FLvfOuusk+uc2OckaRw+etIyyywTnvvGG29MPddzzz0X
qyfx95VWWqlR+ccff9xLT5o4cWLiObP0pD/++CPo0aNHWCbN1inK+uuvH+53
5513JpaTniSEEEIIIYQQQohKUVRPwuds2WWXNfsRC/ujjz7y2u/99983ecnI
ERdHlp70+eefN7DtibMxchk/fnwuPenll18Oy++6666xx0QvuvfeexPPmaUn
wdVXXx2WOeOMM1KvwULcKu41+/Ts2TPVT056khBCCCGEEEIIISpFUT0J7rnn
nlDfGDBggNc+gwYNMvnNksjSk7755psGetK7776ber6NN944rKOrJ+Fztvrq
qzcqj2bTqlUrU3655ZZr9DsaziKLLBJMmzYt8Zw+ehJxtNdaay1TZokllgj+
9a9/pV4HnHjiiaY8eezuu+++1LLSk4QQQgghhBBCCFEp0IGslnD//ffn3v/W
W28N9ZqxY8emliWO9corrxz89NNPsb///vvvxnaJYy200ELGBioONCJbZzSW
JCZNmmR802z57t27h79de+21wc477xy7H/Gg7PGjdlfYNaHVpLHKKquE+3/7
7beJ5WbOnGl8BSm30047metP4qGHHjI6Etsdd9yRen786RZddNGwDth0pfHU
U0+FZddbb73UskIIIYQQQgghhGiZYFeE9oOd0HzzzRdqCe3btw/OOeec4Jpr
rjG/+8aJJpYQeco4xpAhQ4xO4vLGG28EBxxwgLE5itr1oC1xrjFjxgTbbLNN
A9sj/p+/87urQVEv6mrzo912222N6nTTTTeZGEUzZswwmpc95iWXXBJMnjw5
WH755YPnn38+9nrwyWvdunUY89raGFGHP//5z8G4ceMalEe/oY433HBDMHDg
wAbXsOGGGwajR4829YkDv78NNtjAlCVnHf52LtgxXXDBBcG8884btGnTJlFL
wr7J3sftt9++QR369OkTXHHFFeZ3e/+nTJli/p/7gd+fW37w4MHhO5An95wQ
QgghhBBCCCGaL+REW3LJJU38I3QV7Gl69eoVbt26dTM+WNjE+IJuQxwgjovG
gzZCPOvevXsbHeS4444Lfvzxx0b74a/Wrl27oFOnTsZ+aMUVVzT14V/qgQa1
2GKLNfJr++GHH4KTTjopaNu2rdFA1lxzzeD4448PDj/8cHMcbI++++67sDy2
UdSDsh06dMi08Xn77bdN3Sm/wgorBDvuuKPxxTvhhBMalUXzoY78jo8c5e01
UBeujfuSBJrNgw8+GGy77bbG1w6bJc635ZZbBgsssEDQuXPnYMSIEam2Th9/
/LGpA/eL+2brgFZEHYhhvvjiixstES677DKjyXFsdDfKUZ79uAauBRunJBsx
IYQQQgghhBBCiHIxe/Zs42eGPQ4+ZY888kgwa9asip0P2yC0JuJuYwdE3rkk
3YW/YyvlE6sI0Hk4NteC7dF7771XzqrH8sknnxitCzsj7KCeeOIJc41CCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYSoLm+++Wbwyy+/1LoaQgghhBBCCCGEEKLO+e6774Jhw4YFc845ZzBh
woRaV0cIIYQQQgghhBBC1BmfffZZMHr0aKMhbb755sFiiy0W/OlPfzLbuHHj
al09IYQQQgghhBBCCFFnvPTSS8Huu+8eDB8+PBgzZkzw+eefS08SQgghhBBC
CCGEqHP++9//1roKIT///HPd6Ul//PFHrasghBBCCCGEEEIIUTdMmzYtWG21
1YInnnii1lUx1KOedMEFFwTbb7998O9//7vWVRFCCCGEEEIIIYSoKfiWde3a
NRg5cmStqxJSj3oS9lsDBgwINt10U2lKQgghhBBCCNGEIG/4lVdeGfznP/+p
dVWaBB988EFwzz331Loaoo5BS1puueWCo446qtZVaUA96knw+++/B1tttVXQ
r18/aUpCCCGEEEII0QRAS9pss82CgQMH1lWcl3rmm2++CVZaaaXg3HPPrXVV
RB3CN8X7se6669bdN1WvehL8+OOPweKLLx7sscceta6KEEIIIYQQQtSMjz/+
OLjuuuuCoUOHBvvvv39wzDHHBLfcckswY8aMRmUnT54c3HTTTVWvI/Pe/v37
B9tuu20u26RPPvkkmD59eouOo/vll18GXbp0Cc4555xaV0XUGYcffngwxxxz
BC+++GKtq9KIetaT4NprrzV1q0V7KIQQQgghhBC15IUXXgj+8pe/mPlkjx49
gr333js45JBDTHyQjh07BvPOO6/xgfntt99MeWxd0CVOO+20qtYT/5Itttgi
6N27t5lj+oJORnxhrs/qKTNnzixcjwMOOCDYaaedgr322ivYb7/9goMPPjg4
7LDDgiFDhgT77LOPsVXYcccdzRw9yptvvhnssMMOwS677GLuM7od+3KMwYMH
m7/tuuuuwV//+tfg9ttvjz0/dd9zzz1NHXhG7Mfz4hicn2NfeOGFsftOnTo1
WGCBBRJ/Fy2PSZMmmW+D97keqXc9CXuuddZZJ1hooYWMbi2EEEIIIYQQzR3s
e9BDmKdttNFGwT/+8Y9Gvi78/5NPPhksu+yyweabbx7885//DPr06WP2qXb+
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
/t3Wk2CFFVZI70++ShERaY0RI0Z0LJYS87gf/OAHakkiIiJdgDirU089dQ+N
Bbub6667rmFbpXaz8sortxxn8cYbb+zxXev5+T/zzDPJHHPMUdHMiDEVzv3W
t75V937kRdpjjz2arm8t5p577vT+J510UqnXlYEHvm7Y3hVpC+2iN+hJZ555
Znp/1iQiIiIiIiJSjB133LGHxhIO8q0ut9xyyeGHH57cc889HfFpy2P66adP
63XhhRc2fY2Q+yMco0aNyi2Ptvbb3/628u/tt9++cu6UU06Ze+4LL7yQ2iaV
7cs/fPjw9P7EChAhTgVaELHQGs3DFfKbDRo0qKVY8a3QG/QkbP2Cz+9nn33W
lTqIiIiIiIj0NdA7yBVeS1OKD+yY0J5Yg3Ya/PBDPe66666mr4PfWfydzj77
7Myy2DKhp2HDEQjxsMNBfrws1llnneScc85puq5ZhBx31E0GLldffXWyyCKL
pPHEiBW/3nrrpf8O+biI+8X7nRcTCBs33iXiTnQDfGvPO++8SnvaYostuhJL
lWcV6mAMahERERERkeK8+uqryUorrVRXU+Igdm07dJI8yB8X7k9dm+Xdd9/t
8V2OOOKImuWw1Zh33nkn0M6OO+64HucTy7cW5J8bNmxYmr+2bEaOHJnee/Dg
waVfW3o/5N36/ve/X8lJ9ve//73yGXEk5pxzzjTO/myzzZaW2WijjTKvtd12
27Uck6xR3n777dQOiPjXsS1k/G9ihFHmV7/6VcfqNWTIkPTexM8XERERERGR
4mCHQ9ykbbbZJpllllnq6kqd3McPNgysO1vRaL766qse3+FnP/tZzXLkgeM5
ZNUjHE8//fQEZagf+dfvuOOOpuuZx2233Va5/1tvvdWWe0jv5M0336zoRHvv
vXcP27kAMefjmGjEk89i6aWXrlyrU5CXkLip+LnViv3P3/DbI35bo/57rbD8
8sunz6LseGciIiIiIiIDjeeffz61Q8J2YbrppptAT0IzqbWebQdHHXVUek/q
0SrY9cT+NdXgWzfrrLPW1GrwMaqnqZ111lmp71G7+MMf/lC5/5NPPtm2+0jv
gpjwSyyxRPq7r7baapnl0DNnn332yjsyevTomuVou/jK1fP7HCgEW63vfe97
3a6KiIiIiIhIvwGbATQd7INiPeWpp57qyP3J6cb9ZpxxxpavFfKjceA3VA35
0/FrqwX6Ufz90ZdisLsgBvdLL73Ucj2zeOSRRyr3f/jhh9t2H+k9YNODRhn8
TZ999tnc8iussELlHcHHsxbE8Q5lxowZ045q9ymOOeaY9Flg/yUiIiIiIiLl
cu211/bQU/D/6gT7779/ej/88Fol+PhwLLnkkj0+Gzt2bPLtb387M842/m15
3x//uf3226/lOubxxz/+sXJ/bJWk/0NMn/Cb18tpz7tL7CHKLrDAApnliNsd
rolGOdAZMWJERa8TERERERGRCcHWqFbcnyLgI4OfW1iHnnbaaSXXrjYHHnhg
er+ZZ5655WsNHz68Un9iF8esuuqqyTXXXJN5bmzTwRHbMWEzgp/cJ5980nId
8yDmcrg/OeKlf0ObIzZ8+M3JO5jHPffcUym76667Zpbj3QnleKcGOvj8hefR
jjj6IiIiIiIifZ1777031U2aZaeddqqsuy666KLyKpbDYYcdlt5v+umnb/la
W265ZaX+gwYNqvwd26t6z4UYwrGeFMcxxneuE/moYn+3kBte+i8333xzjzxo
cT63WpCzsF7sJKAfCOWwy2uGejH7u3E0y/nnn1+5RifjgIuIiIiIiPQVDj74
4Fy7hXr89Kc/ray7nnvuuRJrls1JJ52U3m+KKaZo+Vrkb4rXn19++WV6fOc7
3ylkt0UdwrnE8AXizyy++OJpnJt2E+sA48aNa/v9pLtsvPHGld8bX816rLLK
KnVjJ0Ec173ZOGjd1o7K1JPi3I30ByIiIiIiItIT1qTEt26WH/7whxVfsUby
uxE7Gr81tKzTTz+9smbDt6TedeK4Te+//37TdYcjjzyyx/qTPG4nnHBCsssu
uxQ6P+Rr51h33XWTr776Kplvvvk6Fsvo0ksvTe9NnBfspaR/E+dqI45YHtjV
FImdBLRH7dy+JvZ364QuLCIiIiIi0pcg/9hEE01Ud12axdtvv51MOumk6Zpr
5MiRhc557LHHUl8wfNXwKSFuy9FHH50suuiiyRVXXJFMPfXUyRZbbJF7Deyg
wlqv1Vgv8bqR44477kjX7EV1Kuodzl1++eXTGFKbbLJJS3VqBPLsce+55pqr
Y/eU7vDhhx/2eFdvvfXW3PJx/sF6Noh/+tOfKmWJuTTQOfXUU9NnMdlkk3W7
KiIiIiIiIr2Oq666Kl0zrbHGGk2dH2KzDB06NDMHWsydd96Z2kuQv/y9997r
8VnwYePA5ikPbIAmmWSStCy2Sq0watSoHmv0+eefv6G44quttlrlXJ4DMcJf
f/31lurUCDvssEN673XWWadj95TuMH78+Mq7hj3ap59+mlv+8MMPr5Snrefx
j3/8I70mZS+55JIyq90n+fnPf54+i2HDhnW7KiIiIiIiIr2O3XbbLV0zofG8
9tprDZ37yiuvpDZG2DfdcMMNdcs/9NBDabzrwYMHJ3/5y18m+Pxf//pXRSPC
NqAe+JRRttWccrfffvsEehJ6VVHieDYchx56aEv1aRRihnPffffdt6P3lc7z
zjvvVN6z6aabrm75lVdeuVK+Wr+txRxzzJGWPeaYY1qqJ/6q1JVY4bRrwJ+V
f/P3WvGIPvroo9ReMo59TTvkb1kxxylLTCh0NfJU4pdG2XoxyosQ/Hhp3yIi
IiIiItKThRZaqLLe/N73vlf4vDfeeCP1r+I8fNbqQUykEPcFm6ZaYNPTiA8b
PmWUJR54K3CvWA8if1YjEGcpnDvrrLOmdh6dhLhV3Pu3v/1tR+8rnQfNZIYZ
Zkh/77nnnju3LLpN0GcXXHDBQtcfPnx4Wp6cja2Av9xUU02Vas3V8bGJX3/8
8cdPcA79Q6gvdlLhXP621FJL1bwPbT/YVMXH+uuv31L9YeGFF06vhY2XiIiI
iIiIfA2xWMJajBg82BqttdZayQsvvJB73gMPPJDG9mW9d8oppxS6F3GRwloP
n51aXHzxxenn00wzTbpursdFF11UaF1dD+yyQt2a8RkjP144v9OaTvB/4rdo
NS659A2CTeGMM86YWQY7HWKUhfeSc4qw1157Nawt5zF27NhKHWinL730Um55
fGbRjsI511xzTV1bQXSzlVZaKe3L9txzz9TOqQywpaQO9F0iIiIiIiLyNTfd
dFO6XkIPgT//+c/JkksumcbXJu89dkdPPvlk6puGxoRPG+u2EPv5vvvuK3yv
5ZZbrq72s/322xeKnRRAPwk2DPU0sDw++eSTih1EM9cZMWJEej7fsZH8dmVw
1llnpfdeccUVO3pf6R7kXpt44onT371WDkG02J133rlSpkjspMCvf/3rSq7G
MkDXCvH6F1lkkULnbL311pV6v/jii4XOQf868cQTW6lqD+hbQh2ef/750q4r
IiIiIiLSHzjooIOSzTffvIcGgi3AZZddlmy44YbJlFNOOYGfyiqrrJLG6sV/
rSjESgnXyPOjCX5b6DNFCfrW6aefXvicWmCLsN9++zV17ujRo9M186OPPtpS
HZphzTXXTL//ySef3PF7S/c477zz0t+d9hj7V/7xj39MVl999eTHP/5xsswy
yzQUOwneeuutis1iUS2nHiEmU5F4TxDHIyM/XT1uu+22VE9FuyoLYvyXYfso
IiIiIiLSH2EPvlZc3ACxbvFPIY84e/Qhrm6jsJYN60N82moR563CJqoov/rV
r0rxz8HnrYiPXS3Q4DqZzy1AzGF0LPKZ4/MjA4tLL700jR2PDrvVVlulsbeJ
k4Qd4eeff16xCyoaOymw9NJLp+edccYZpdSTXI6hbVOvPO6///4eMZf4jnng
H8czeOaZZ0qpawD7TO6P/5yIiIiIiIh0B3Sp4Htzxx131CwTx05qxM6A9eRM
M82Uaioff/xxWVXuE1x55ZXpM9t22227XRXpEtgWYhd36623JuPGjav8/a67
7mo4dlLg2GOPTc8jlloZbLbZZoX817B5XHTRRZN99tmnUr5W3O6YI488Mi1f
JvQ/IeY5z1FERERERES6x7rrrpuuz66//voJPsO2JuSKKxo7KSbELzrssMPK
qGqfAB0BfyZ0urL8kqT/QE6yRmMnBbDV472afPLJ69oTFSHWh8j7lgXtGH/Y
hx9+uFJ+9913zyz/8ssvJ9/+9reTTz/9tOU6xpBvIPi6lelDJyIiIiIiIo2D
Hws2RMT7iXnssceSxRdfvBKzpZHYSQFslL71rW8lU089dfK3v/2trCr3aohx
VUZed+mf4PvWaOykmE033TRT/20UYpvVy3/45ptvpn57H3zwQfLXv/61Un79
9dfPvO7aa6/dsFZWhAMOOKCUmGwiIiIiIiJSDjfffHMy22yzpXnMjznmmGSj
jTZK4wlffvnlTcVOisEvBU1q3333LbnWvQ9sRmafffY0zjExlGTgQOztejkE
Q1wt2hNabTMQj4j2tOyyyzZ1fszVV19dad8nnHBCzTKbbLJJGgsN8HsLMZTI
N1mLa665Ju1HygafWXzdhg4dWoptloiIiIiIiJQDMa/RfrArGDt2bPq3ZmMn
VUN+NnLQ9ff83kcffXS61r/33nu7XRXpEMTN33rrrdN2stBCC+XqiAcffHDT
vm4x4X433XRT09eARx55pFKfn/3sZxN8fvvttyfLL798D51slllmScsTG62a
zz77LPVzI1dA2QTfvLPPPrv0a4uIiIiIiEi5kNu82dhJMeSfI6bQIosskvrA
9UfIgzdo0KBUM5CBw3nnnVfRZPLiRI8ZM6biO7rFFlu0dE/yP84888zJYost
VtcmKo833nijUu8f/ehHPT5DJyM/21NPPdXj77RjyvNdqvNKYoPYjlhpxGPC
J3e11VYzbpKIiIiIiEgvAA3krbfeqvkZ60l8S1g7nnnmmS3f68MPP0x9fHbY
YYeWr9XbILYMa++f//zn3a6KdJi99967osnwDtTSS9Fkpp122rTMVlttlfrG
tQq2Q2g6559/ftPXwCYx5HdcaqmlenyGrd0ee+wxwTkbbrhh5fsSHzxADrv5
5psvzRlZNhtssEFqI/mXv/yl9GuLiIiIiIhIY2AvQSwX1mkfffTRBJ+fddZZ
6ZqR/G5l5WlCU1piiSVS/7f+AtoAPkG11t7S/yGu2CSTTJK2I2Ja01aIM4Tf
GzoStkjoPkOGDGlJ+6kF9kDf/OY3k+eee67paxA3jXaOdhx49dVX03Zfy3eP
9zzoScTyB2ykVlpppTQOW9nccccd6fO78sorS7+2iIiIiIiINM5mm21WWUdW
21RcdNFFqdZEbrYnnnii1PuiXW277bb9xtaAdW5WLGMZGLzyyiupRrrWWmul
8YPwRSMu+7Bhw1Kf0dtuuy3VmMoGHWfHHXesG7cpj+WWW67iv/bVV1+lf1tn
nXXSPIW1OOmkkyp60hVXXJH+7ZJLLpnAX64MsHmabrrpkgsuuKD0a4uIiIiI
iEhz3HLLLaltw+qrr576trBO3HPPPdOYLOhI/D85lUSk94KmtNNOOyUrrrhi
U3nPNt5444o+9PrrryfXX399suqqq2aWj3M+nnLKKak+jC0T55YJejP9UNk2
XSIiIiIiItI6xNN99NFHk1GjRqXHDTfckOYjF5G+A5rSEUcckbbhRtlrr70q
+hC+ZdhXPfvss5nl77vvvkp5NOddd921LfZ5Rx11VKpdiYiIiIiIiIhI72LE
iBEVfWjBBRdM9t9//9zy5FqL44/j0xf85EREREREREREpP8zevToij5EzKd6
ueeItRbKc9x9990dqqmIiIiIiIiIiPQGHnzwwYo2dM011xQ6Z/rpp0/Lb7nl
lm2unYiIiIiIiIiI9DaIe402NHz48MLnELN/8ODByTvvvNPGmomIiIiIiIiI
SG/kP//5T3LQQQclr732WuFzLrnkkmTMmDFtrJWIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiEhn+PTTT5OXX345eeGFF5KPP/6429UR
EekI//vf/5LXX389+fOf/5x88cUX3a6OiEi/4N13302uv/765MILL0xOPPHE
ZL/99kt22GGH5Nhjj+121VriX//6VzJmzJjkkksuSUaMGJEcfPDByc4775xs
tdVW3a7agOTVV19NHnjggeSJJ55InnnmmeTFF19M/8Z6hn/z94ceeih57LHH
JjiX8f+RRx5JHn744eSpp55KnnvuueSVV15J10P8/9ixY5NHH300uf/++5Px
48dn1uHZZ59NHnzwweTJJ59Mxo0bl7z00kvpdbg/1+daItIYH374YXLjjTcm
v/71r5OTTz452X///ZMdd9wxOeigg7pdta7w1ltvJdddd13yq1/9KjnhhBOS
fffdN9l+++2TU089tav1evrpp5NDDjkkWXbZZZNBgwYlyyyzTLLCCiskQ4cO
TVZeeeXk6quv7mr9pFwYz6666qrkl7/8ZXLMMccke+21V7L11lsnN910U7er
JjmgcTB3vfjii9O5K/0oc1f6EGmeDz74IDnyyCOTeeaZJ5lzzjkrfd8ee+yR
fPnll92unoj0M0477bS0377lllu6XZWOcMUVVyT/93//N8Hxgx/8oNtVa4m3
33675veacsop657LHIx34IILLuhATcvjn//8Z3LAAQekazn0kt7EwgsvXPP3
qD6mnXba5D//+U+Pc9GRipzLseuuu9a8/3//+99k8sknzz13ueWW68SjkD7M
O++8k+y+++7JbrvtlmrxkiS33357zfa0/PLLd7tqXQEdqdbz2HTTTbtSn88+
+yzVEiaaaKJk2LBhqdb1j3/8o/L5v//97+S2225LFl100VT76jboXj/5yU/S
sUz7geZhHlDrPTz99NO7XTXJ4bXXXqv5u0033XR1zx01alQ6d73ooos6UNO+
A3uP3/nOd5KJJ544Oe+889I5JjZKc801V/ps1erK5dZbb03tEtBDRQYiaNeh
755kkknSNtHf+eqrr5KPPvootdXYaKON+o2ehE0LdvzoSvHvWk9PYq7NvDuU
7/aeciOsu+66lXpPP/30qe1Nb4E1C7/H448/nsw222w95knsmWKbxP4RdmW1
+Pzzz9PPR44c2eNc2il/Yw72ySefpL97FlwDW6bNNtuscv4cc8yRnHnmmald
E3UUyYI1eKyLzjfffOlafaBDu2EMoQ1ut912A15PCmMqtpdxn9wNPemvf/1r
uhfP/bHNjXWkGDSwueeeOy1Xy0a0U9APzzjjjJVnttZaa3WtLn0d9pewHcQu
eKGFFlJP6iOEuSt2jtjVF9WTrrzyyuQb3/hGpfzZZ5/doRr3btj3CX3K8ccf
X/k7dknhWTHnr97HlOa47777kskmm6zybLFXFhlosHcXr1X33nvvblepKdDB
8A1uFPSH/qInVTP77LMX0pO23HLLHu/AGmus0aEatgZaSfV+FrZnRcD3rJP2
ePG+6aSTTpqrAVXD2jX+jttss03D9+ca3/zmN5P5558/1RtFioBPZnUbw5ZC
vgYdZaDrSTF/+tOfuqYn0a8yfnHveeedN3O9hObEvn2oJ+usboGPT3UbU+f/
GnS/LE0wD2yt1ZP6JkELqacnxfvBHOuss06Hati7OfTQQ9PnMWTIkB59IO0g
PCv6R5kQfGPZJ2qEX/ziFz3eQ7RskYEGPspxO7j88su7XaWmGD58eBo3qFHY
y+qvehK2/EX0pHPPPbfHO9CXtPUllliiUm98u1jLFIHYWT/84Q/bXLuv4ZnG
z5h91EaYZpppKuc2Ew8LuwH86tj/EykKWskss8xSefeY5/M36Yl60teg1XRL
T7rhhhsKzWXifSSOPffcs4O17Amx7ND6Q10WW2yxrtWlN4I97ptvvtnwecTG
Uk/qm2AHW0RPivURjsMOO6xDNey9oL2iI/E8tt122wk+J74JvsCNaiYDhe9+
97tpfN1GuOaaa3q8h9gsiww0sFMnLgaxKfGx7avgJ6ye1JOiehIQl5x34MAD
D0zj7vQV3n///XSParXVVkvuuuuuwucR77GTetJJJ53UY7x54403Gjr/29/+
duVctNNGWXvttZMzzjij4fNEiOmODw7H888/3+3q9ErUk76mm3oSMYjCvZnb
5MGYxx4E64f33nuvQzWsDfG4Vl999WSTTTZJ/va3v3W1Lr0J4r3wW6onDSyK
6klA3HXmrtjkNGL33V8h94r+f80z00wzNawnAetn3kPW01kxLESkdxP8DdST
etKInjTQWHPNNTuqJ1XHq23EZ4ixadZZZ62cu/TSSzd0b/z6FlhgAX0oRNqE
etLXdFNPYgznvlNNNVVH7yvtIez7qycNLBrRk6Qnd999d+W9J/+oFOcvf/lL
+tya0ZNEpO/Delk9aULUk2qDPoP/WCf1JGKex3pSI7ZUp5xySo9zyc9RFDQk
Yib1hzj77j1Kb0U96Wu6qSdhh8l96d+l70M8T/WkgYd6UvP8/ve/r7z3v/nN
b7pdnT4F8d3Vk0QGLqussop6Ug3Uk2qDDTDPpZN6EvkfYk3oqquuKnQefhhD
hw5NVl111cq5U089deH7ksetv8SoJFbWSiut1O1qiEyAetLXqCdJGZDbdPDg
wepJAxD1pOZRT2oO9itDPFb1JJGBB3YXoe9UT+qJetKEkOsc/+hO60njxo3r
oSf98pe/LHQe8UCOOOKICfJH1IsNAszH+a7N5D3sjZCHkBy3xoOW3oZ60teo
J0kZ7LPPPpX3SD1pYKGe1DzqSc0xevToynNTTxJpjb///e/persIrGeJhVwN
sZzJR87430yO10bATzjkFW2XnvTFF1+k3+Xdd98ttIbPg/U9+teoUaPSnJT4
6raTZvQkfrOPP/64UFnykGI/Uyt+N+8GsTSLvAP4ZPHOcDSa9yzA3gLPNy8O
Hr9hsGXrtJ7Ed4v1oGOPPbbuOWPHjk3mnHPO5PPPP0/Lx+e/8847dc/ffffd
Ux2qvxDGe/JAdxOePX1C0b6yHry7tDnW4fTBvZXQ3tvpd0h/++CDD6Z256wH
ydeYlfO9N5GnJ/WF37YZPvnkk/R7VY8XrehJ/NZ//OMf07bO8cgjjyRffvll
4fMb1ZO4H/Gv6Z+Lwu9Ya1z79NNP0+/O9Zp9Zxm/as2rsuDZMz5UE34bxsRW
82vwXckfkRWznL+fc8456XhDTNoy4vSdeuqpycQTT9xWPSk8I+aArT4j8gXi
037FFVckd955Z+E5VLMwBt18881pGyHG1EsvvVTpl3kf/vCHPxS+FvPaxx9/
vNLm6H+bmevy3v/ud79Ln8GNN97Y0vy2GT2J8bhoH5s3d+XvvBe8H61C+2Me
TN9QC8Y39gv32GOP5J577mn5ftCsnsSzqDeHjqFc0TwGvJu0M8b3asL4yOet
zi149++///7K/IGxpEjbpi2R/7gMPYk1DN+lUWgvtBvaz2233dZSXgbe3Vrv
HH05z5oxxniqUha0F3JiLbzwwsnMM8+cTDrppGk7Yl5QDe8dPjPLLLNMMvfc
c6f+NpTFDydAv/Lzn/88mXfeeVMdI+Sjwk8H356ycobRH1122WWprUI83whx
ijfeeOMJjrx+OktPevjhh5PNN988jVWz+OKLJzPMMEOa0/fHP/5xus5vhIce
eij53ve+l9pWoGf87Gc/S9Zff/1ksskmS5Zccsk0/lM7qKcn8T2oF99v9tln
r+Qs3mmnnWqWJ28BuXD4jRnnv/GNb6Tl0WmA3+boo49O36mFFlooGTZsWPob
Uf6ss86aYJxiDsazmGeeedIcyd/61rfSZ4TOQ76bPMiXhu8Tcab5bcK78Oij
j05Q9t57703233//il1SOMiDXut9Of7444s83obgu8f3LqLz8K6gPcK5557b
43xybuWBPRTtut3z2k7CGBnaTKdhPbPzzjunzzT+HZZbbrn0t2lm/kC+3kMO
OSR9D8P1aFO0W67ZbR0lq72XMc+uhufLepR8W4wdu+66a7L99tun+wUc5Diu
NRftLVTrSbR3+ij6Vp4fdvSMm8TVP+GEEzJt7FgHkmuYfpE+Yt99903/y7/p
l7faaqt0jlzN+eefn+ywww4VDZnz9txzz/QZvvrqq6V9T+ahxx13XDpe8H34
fvTBiyyySKol8M42oyfxTh111FHpe0Y/zTi7yy67pPMNxq8DDjigZhvjOcd9
N3MS7st8plbfzrjLPIYxB80pvNNZPsHMNZjDMJ5x7TBPiu1Lr7322mSNNdZI
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
rP/6O8HukblJu+IKspeFjXMRWHvFduDsU8Z+6ew7YreBnU8jMRLQB9EhWRt1
k+AzU6aeFF+zXgw5NP7Qpxax9+g04Xuwz1sU1ifhvKwcjPGcuZ5+ij0i7xh+
GmUR260WjYuD32YRPSnO35Xn2xzAr4ay9I9ZGkYjehKfN6InsW8WyqM5YN+U
R/BV4KilL1cTfGuK6ElxXlvqEuKSZEEcrVA+y5YcwjPmwMcli9hHvl3xH8vU
kzjqtQtsH0PZLL9Avmsog55Yj3iNmvc868EeEdco4juHnUaWnhT79MT+L9Uw
l46fXS3f+bDGDUeW3WDs/1pPS6iuZxE9ifG0ET0p/k3or+vZfARfXLTvLOi/
g78TNqJZYMcV4tugl7QjZ1EzelKwmyoyh4ZG9CR8K+O+qp4mGs8LsnzeeI4h
VhHzrrx9DuJ0xO9plv1Dq3oSOlERPSnchz3Iov1abEub58cS7zvzrPGRziNe
P9eL0yRShGb1pCLlWQeEsmiyZVOmnkS/VK9905ZDeWJQ1gJb+EbGT8azsE/P
PK0sOqUnFSlPPM9Qvl7sG+ZdoSzrg0bq0pv1pHgvAL2hFsz7a62t2O+Kx8Ra
+xqMvUVjZPR1WDuH/VHWgmXH1UELQvtpJLdUbJPIge8b88Xgk0n/wr5voxCb
vtt+XmXrSdhhBv2NdXQRexp06DBP6rYPYDXh2RA7oyjx+4JvdC3wrQk+FPTj
eRoJc+AyY9Wj02KTH+qYZ1MaU0RPYo81+FiwDitiv8N4G65L/L1adEpPYh1V
T8eO9bIsW5+YZvUkfqN6NkIh7hxHll9I9RiT59cY4kJy5NlvtkKZelK9eEJA
XK16WkusOVXHeqtFbOfTSp4P4rGF/qVeTD1862r5NcbtkrEtzx+efifYrOAL
U6stxXEM8IfNgt8ulCvqV9MpPalI+dAuGa+y2lnwi+fATzSP2He8iM1po/Rm
PSnPLj8Q271l7b3F+/p5tnHA+xfyQ2Hnl9Vvd0JPYj6IjkiZrD3lWjA+hmvX
yiEbiPUkYq3Vi+cZYhNy9Ea7b+l7tKIn1et7Yj2JPZayKVNPYm+3HrGelBX7
Io6pkhcTIiaM3ayVyrIf75SelGcvHIj1pHo5VGI9CZueRurSm/WkeL+aNVT1
fA5bVfwHsjSM4OvMgX1ONdgS58Vj6W/wnMK+O2sw5i1lxYxi7o9PZ6PE66yw
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
HJn5JPMW9vyxWWhWf+Qd4P2lz+IdZF6Bjyo2+6HvLQr+srzzvNP4tpSxtov7
/Or2S19SywcF0DgoT5lG3nPmrrRhngfzP54H8yC+Tz1fuABjEHpfGIs6BXF6
4/1I9jN5VuQEZn+R/oXvgr9KGTa66AZZz7+d4KvMO4HtDetC+jI0csaxYBuM
zRXjLzYh+J/hR8T8NCuGdoD3hjk/fSTzcMZI/su6N88OK2tuEt5TxpmwzuG/
1WN/POYxpsTPlTUj71OtcSmUj2MEcM16YyRzL+B50WapI+dVj9d8pzi+Bvoo
deE6tcZr6hLvS1Eua4zkM64VP1eeP+8x6ww0CfoQfC2qD/YymDeip6Plhb0r
1j714hc2Axoiegf6DOtl1rVZdmy8P/WeUbw24xnXe0b4OeZBX40GHvbDmN+x
38X5ZeVWQRsMe2/YHVEv2hbtj4M1MP0k2lUjGjPPFp2YcYcxjfozztKeseWp
B/078zb8GqgDfTZjGXu5rIljeN8ZL1mXo6nGtiSsBfLmrvydthL0ZN6zuF3W
mrvGeg/va/id43ZZqy2Edpk1dw19Sjzucw7PgPU77QJb8lpth7+j/bD/HPvR
8exayZ3IPL16/kydw8F35l2vF3eS34H+lHGLPpz2xljMnDPew6TP551hzwRd
CB9C3qNgs4me2MiaibrnrS/5fer5hdO3Uw/6JN5jxl38Qrh2I7EU+R3Q3WgH
vM98f/rFWnZszLu4PuNJrXUL3zP091mwduUdC/Mexj3eB+x88V2s155pC/XW
TvGYxufUq9ban7/xu9WzsxcRke7CnKJRrSCGfftO5myWvgd7153wg5LugN0s
+5n14kWINMKBBx6Yrm3Zv87zMakG+8iwN04cfJGBBBp7iLmQl3+iFqz1gz1T
ni2YiIiIiEinwKaj3XZ20j3I2TNQbRSlPWBrgZ0R/kDYwTZKyN/N2jgvrpRI
fwPbGd792Ne0EbBH5vysfMMiIiIiIp2CeBTEIpC+C3b1xNGsZefOZ9iC4B8s
UhYhJxh+jM0Q55DHBldkoIBvGO89eTmaAd+iEFdKRERERKSbEGckL+am9G6I
+RZ8J4jHUZ2H6+qrr256zS+SRch5StzjZmK8E9eG87FxCnlMRAYCIX8ZY28z
BC03jusvIiIiItJp0CKI5VhW3kzpPOhFcb6VOOYr+SGIdUsMNZEyISYfcWx5
54jp0ihhTU0MWZGBBHk6iUVPbizyBDcC8a9DPvi8HF4iIiIiIu2GPFrdyPkl
5UEOm6AlkS8qzktDDilirTdjPyJSj3HjxiWDBg1K87uR26rIe0aOLnIW8r6S
1/rjjz/uQE1FehchhhJtoF4esgB5PsnxzHk77rhjm2soIiIiIpINPm5rrbXW
BP5R0vcgnzb5jseOHZv+m5zc+FKQM5zcwiLt4s0330xzveO3tuKKK6a+OK+/
/nqPMuhMTz/9dHLqqaemOcXRn4444ojks88+61KtRbrP/fffnyy11FJpTHry
JVx//fWp/VEM+wN33nlnsvfee6f2TOSHHz16dJdqLCIiIiLy/2B/NLZlkb7L
l19+mey3337pWp1cffhDHHbYYa7XpWOgFx133HHJ2muvnQwePDiZZZZZkgUW
WCCZd955kyFDhqTv5KabbpqcccYZaex4Efl/WuuYMWOSffbZJ1lmmWVSzYh+
HFtTYpNh/7fwwgsnu+yyS3LZZZe5PyAiIiIiIm0BWzP2t//73/92uyoygOE9
fPfdd5Px48en+SM//PDDbldJpE9AXDL0VuLgYfuHf6iIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIgkyZVXXpkMHz6829Uo
je222y45++yzu10NEREREREREZF+yeWXX54MHTo0+fOf/9ztqpTGu+++m8w3
33zJySef3O2qiIiIiIiIiIj0K0aNGpUMHjw4eeyxx7pdldIZP358MuussyYn
nXRSt6siIiIiIiIiItIvuPPOO5OJJ544ufjii7tdlbZx7733Jv/3f/+X2mCJ
iIiIiIiIiEjzfPTRR8lss82WLL300sn//ve/blenrWy++eapDdZrr73W7aqI
iIiIiIiIiPRZ0Fiw23nwwQe7XZW28+abbyZTTTVVssIKKyT/+c9/ul0dERER
EREREZE+x4033phqSZtttlm3q9IxiKHEdx45cmS3qyIiIiIiIiIi0qfAt23R
RRdNJp988uT111/vdnU6xpdffplMM800ycwzz5x8/vnn3a6OiIiIiIiIiEif
4Xe/+11qp7Peeut1uyodZ7vttku/+1lnndXtqoiIiIiIiIiI9BnWWGONVFO5
8MILu12VjnPLLbek333uuefu9zHIRURERERERETK4I033kj1lIkmmih59913
u12djvPVV18l0003XfoMHnnkkW5XR0RERERERESk13PuueemWsryyy/f7ap0
jR133DF9BgcddFC3qyIiIiIiIiIi0jGa9dUaPnx4qqWceOKJJdcon0brW6R8
s8/gsssuS5/Bggsu2NT5IiIiIiIiIiJ9gf/+97/JxRdfnOpBgwcPTmaYYYY0
R9ujjz5aKYP/2ocffph5jX/9619pTje0lLvuuqvlOl155ZXJPPPMk/rOLbDA
Asnjjz9es9ytt96arLnmmnWvN3bs2GSTTTZJZpxxxtQnjWufffbZyT//+c9K
mY8++ijZe++90zLkaZtzzjlTbeyTTz4pXO/HHnssfQYc+P+JiIiIiIiIiPQ3
0D+WWmqpZOKJJ06OOuqoimb09NNPJwsvvHCquVx33XXJlFNOmeosH3/8cc3r
jBs3rqKjvPLKKy3Vafvtt69cKxyTTTZZcv/99/coR13nmmuuHrpXLdCE0I+u
uuqq5Isvvkj/dsEFFyTf+MY30vjhxD3iWksuuWRyyCGHJP/+97/TMpdeemky
xRRTJN///vcL2yv9/e9/r9T59ttvb+Lbi4iIiIiIiIj0XkaNGpXa/6CZ3HDD
DRN8Pn78+GTQoEHJd77znVQfQX/J0pOuvvrqSixu9JlmIS9c0GPmm2++ZP75
56/YPU0//fTJPffck5Z78cUX08+PP/743Oudd955yQorrJC8//77E3yGTsR1
DzvssGSllVZKTjjhhMpnDzzwQOW+HK+//nrh7zDTTDOl55xxxhmFzxERERER
ERER6e08+OCDFb1k9OjRmeV22mmniqaCvVIW2DZRZo455mi6Ti+99FJqB7Xz
zjv38BX7/PPPU/+39dZbL9WUZpttttReafXVV0999bJ48sknk6FDhyZvvvlm
zc/322+/tM6TTDJJMssss/Twfdt4440r3xu9DbujoqBNcd4uu+xS+BwRERER
ERERkd4M/mjESELzWGuttXLL4iMWdJU99tgjs9zmm2+elll11VWbrtdJJ52U
bLrppnXLYU+Ej149jee73/1u8pvf/Cbz8912263y3c4888wen2HXxN8nnXTS
5Pzzzy/2Bf5/gga3yiqrNHSeiIiIiIiIiEhv5D//+U8ybNiwio5y33335ZY/
9NBDK2WvvfbazHLLLbdcWmbLLbdsum7vvfdebsxvOP3009NY4fXKEVMJO6Y8
+6WVV1658t3w7asGe6m33nqrUN1j9t133/Sas88+e8PnioiIiIiIiIj0NtCE
goaCLlMPYg+F2El/+9vfMsstvvjiaTliabcLbIjwuUN3qscll1ySHHvssZmf
k48OP7ZWffRqcfDBB1fiPYmIiIiIiIiI9HVim5wDDzwwtyxxi/D3qhc7CYLN
009+8pMyq1vh1FNPTZZffvm6dklFeeihhyrPYdttty3lmoEjjzwyve7gwYNL
va6IiIiIiIiISKcZN25cRUMpks/+97//faHYSRD0JGJpl8m///3v5Kc//Wmy
5pprJp999llp1z3llFMq3y0vxlIzHH300el1p5566lKvKyIiIiIiIiLSaUaO
HFnRULA7+sc//pFbPvht1YudBIsttlhabocddiitvuhHxAvfbLPNki+//LK0
68L6669f+W7EJy8T4oXr7yYiIiIiIiIi/YEdd9yxoqEQF6ke5EcrEjsJll12
2Zbjccd88MEHyTLLLJPGtv7f//5XyjUDxCSfdtpp2xYz+6CDDkqvPeuss5Z+
bRERERERERGRTrLuuutW9KRDDjkktyy2S0VjJ8Emm2ySll1llVVaric51YgV
ft5557V8rVo89thjleew9dZbl359YpJzbTQ2EREREREREZG+zHrrrVfRUS69
9NLcssRWKho7CQ4//PC07JxzztlSHfE9m3feeev618Fpp52W5nFrlOOPP77y
3X79619nlnv++edTnaxR0NTK9v0TEREREREREekGu+66a0VHueWWW3LL7rPP
PoVjJ8GoUaPSspNMMknqT9YMr776avKtb30rueKKK+qW/eSTT5IZZ5wxuffe
e2t+TrylF198MY3nXc0aa6xR+W6vvfZa5j2IH8Uza5Q55pgjvfbJJ5/c8Lki
IiIiIiIiIr2JOF/bTTfdlFkOu5ypppqqcOwkeOqppyrX/utf/9pw3d54441k
nnnmSX71q18l//3vf3PL/utf/0o1oSWWWKLm59R3wQUXTOtCDKiYv//978lk
k02WfjbFFFNk3uPDDz9MZp555lSTaoSvvvoqmWiiidLr/+53v2voXBERERER
EenbPPzww8k111zTsfvht0PMGJF2gt0QGglaBzGja/Hee+8lCyywQEUbKhI7
CT7//POKjnL//fc3VK9//vOf6X04n5xoaFnET8K+5y9/+UulHDrTlVdemQwb
NiyZeOKJk/vuu6/m9TbffPNK/Tm4fgBfN87l79g3ZbHVVlslv/jFLxr6HoC/
Xrgv9lbS++HdPfHEE3u8JyJ9HeLEXX311d2uhkif5plnnmnKr74Z/vznP+f6
4IuISN/g5ptvTmaaaabU3qJTXHDBBaltxuuvv96xe8rA5K677krtcwYPHpx8
9NFHPT579NFHk/nmmy/50Y9+1FDspAA54zjnuOOOa6hOO++8czJ06NCK7xr2
RT/4wQ8qdZh77rmTJZdcsqKFcbD+z2LllVeulItjGKH1zDbbbKk/Hc8A37y3
3357gvPPOOOM9Ltga9Qo6NDcl/YsvR+0pNVWWy19B8vOIyjSTdgbQHs/4YQT
ul0VkT7JQw89lK4H7rnnno7c79NPP03nHnvttVdH7iciIv8P/FdGjhyZbLHF
FmmuJvxliJ3SDMSUYZ39hz/8oeRa1ueUU05J5pprrmT8+PEdv3dfhjXgxx9/
nLz88svagxQEzYM5EpoHOdRoM8OHD099xJ544onkwAMPbCh2UgB7Is5hPlSU
0aNHJ9/5zncm0HVow7EuFA787/bdd9/ctf/FF1+cliWfXdCEmA+ild14443p
v+kzuBYxyonFBOxDYttEPO1aOlMRtt122/Tezgd7P0FL2nDDDev6WIr0RbB7
JkcCdpkiUhy0pGmnnTa54YYbOnpf5rOLLLJIsueee3b0viIiAxX6e+ZKrEev
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
0CzkvQl9Mrlc2gF+bsOGDUvv1SrkX6GuXK8s7rzzznQ86sRBDPV20kk9if2h
PGI9qUis907oSbG9lEf3D+k8IT4Gfg2NEPatOZrVk/A/KwP2wEOcH+pFDP9W
7F67DVoS9lWnnXZa2+5BPoSNN964Mm9YZpllkuuvv77rMaUapR16EuvgcE2e
ichABI0+tINm/G3ZLxgxYkRumbL0JGImheuce+65TV9HRGQg8/DDD1f60lZi
CY0fP75yHfKElg0aAesWcrqVwW677ZbWdb755ivlerHNbCcO1kDtpJN60mef
fZZbNtaTiGlSD/WkgXdI5wk+w43uQ5SR362VnA8BdJFwvWmnnTZ58MEHW75m
N2Evn/0Rcqq1kx//+MeV50a8774aw7YdehJaZLimvjMyUPnnP/9ZaQcXXHBB
Q+eiEzGm1POVKEtPws+53fNFEZH+ToipytFK3E5iKITrlGmfhO08NvWsJcrM
d4w/A3VdaKGFSrsmusctt9zSkaORfErNoJ4kInk0a59ETIzQPskLWZSQQ4GD
uM9lQF+6/PLLp9ck/t+GG26YPP7446Vcu5MQq2e22WZrm21wDLGZyNdG3jae
26yzzpraEtTrx3sb7dCT4nGzHftqIn0B5u3NrCuInTp06NDk2WefrVu2LD2p
VVsqERH5WlfheOSRR5q+TjviJ7HHgV8DekbZe6A77LBDWlfjJ9VGPUlE8mg2
flLoeznI5VkU4n6H8y677LJGq5vLfffdlwwfPrxyfeJ947/cF7jpppuSWWaZ
peP558jbRowm8rjxzIYMGZIcccQRdf2Xewvt0JNeeeWVyjWNnyQDmdAOGomf
RP6DH/zgB8mYMWPqHiEfBAf+cfFnf/jDHwrfk7wB4TrGTxIRaY44l00r+VjQ
+CeeeOL0Wuecc07L9cIWif3oAw88sC1xGdiHpq6rr7566dfuD6gniUge2BYF
+5RGIJ9jI+05EOeFw0+7HTz11FNpfxfHBrruuut6bWwg8lMQR5zY2N2CfR/G
/DnnnDN9ZlNOOWW61mu3DW2rtENPIq5huOZDDz1UyjVF+iLTTz992g4OP/zw
wucsssgipfi/L7roooXviU1UO3wrREQGCv/+978rc3TmVq0SNIJGfBhq8d57
7yVLLrlkIdvTq666Ko1B2ijkv6GuxFGSCVFPEpE8iNMT9iIayel1zz33VNpn
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
P555PtpZaJynL774onHupZdeWlmZb7311uDY4WVYZZVV3LU32GCDyq8thBBC
CCGEEEKIavnpp59cnGVy1/sQo5v5/ZFHHjnad/BVmXjiiaNvvvmmrmJG6623
nsvtlqclgWkfffv2zTyPnG6ct+GGG1ZVzCDQxnw9KSsGNvh54LJiJxmWfy8r
V1tR0JCsDLfcckvqefiQnX/++YWvbz5ldcdFF0IIIYQQQgghRHF++9vfunn8
3HPP3fjb66+/3tAOrr322tG+Q8ztPffcs7Yy3nvvvcFaChDbeoYZZnDfeeWV
V1LPW3rppd056E91Qrynscce2917kkkmyT2fd2Oxk0I0vBVXXNGdP3jw4CqK
61hggQXcNSl3VuykXXfdNTrggAMKXRtNc5xxxmlLHCshhBBCCCGEEEIUhxxp
zOO32WYb92/m9sSKnnPOOd3f2RPmc/XVV0crrLBCbj6yKtlkk01cXrci3Hbb
bZmxrq+88kr3OdduB2ussUYjPlUW/j4z9K8Qdt555+A43wY+Z2uvvbbz6Ro2
bFiPzz766KNGGagXaeB3NfXUU0fvvvtu8H2B8+365KcTQgghhBBCCCFEZ3PI
IYdEk002WXTFFVe4+M3rrLOO8zH56quvnG7EZ9dcc010++23O80JrenDDz+s
rXx///vfnV/On/70p8Lfvfjii11sJGLzvPHGG+5v3377bXTYYYe5HHAbb7yx
01HaAWWzXGmffvpp4jlvvvlmj7jdQ4YMCbr20KFDc7WfOMTJsvtMN910PT47
4ogjGp8tu+yyqdegfqBlFcXiohNzPCt3nRBCCCGEEEIIITqHRx55JNpvv/2i
ffbZp0eeM+Jt4x+z1157Rfvvv7/TlOrm/fffjzbffPPogw8+KPV9dKTDDz/c
xfGeZ5553N6xrbbaKhoxYkTFJS3Gd999Fy211FKpOtGTTz4ZzTzzzNFss81W
OF8b37W9acTnDsFiLnEMGjSo8fePP/7Y+bCxd47P5phjjsTv4++18MILu99V
lLPOOqtleeOEEEIIIYQQQgghehPEFkffGn/88aMzzjjD7ft69NFHoy222CKa
b775olGjRjkNrEjsJEAHxMeI71111VVB32HfH+ej3ZkmhB/aQgstFF144YVu
HyT58jjnoosuanyPc4lrju711ltvFX8I/x984rjuUUcdVer7QgghhBBCCCGE
EGMSxOa+/PLL3T5CtJu11lrLxaxiXx57/YrGTjIshpLFxcoDbWv77beP+vTp
E2222WbRwIEDXT49tCQDPYv47ewhpLycQ7ykXXbZpfS+Qfa3cT3K+uyzz5a6
hhBCCCGEEEIIIYT4meuuu65w7CSDvXF8D70Hf6VQ2Fd4//33Rw888EBqLCPi
bt9zzz1ub2Sz8aduvPFGV078m4QQQgghhBBCCCFEc+y+++6FYycZaEiWo++p
p55qUQmbB38nykgMcSGEEEIIIYQQQgjRHMRQQmv59a9/HRw7yee8885z30eX
6kTY00es7ymnnNLlExRCCCGEEEIIIYQQo/Pmm2+6+NXkQ8vi5ZdfbvgmbbDB
BqXuRWym2WefPRp33HFdnrxO4+ijj3a/74QTTmh3UYQQQgghhBBCCCE6EvKf
TTbZZA2d6MEHH0w87/vvv48WXXRRd84kk0wSvffee6XvOWLECHedHXbYofQ1
WsFHH30UTTjhhG5PHn5KQgghhBBCCCGEEGJ0jjvuuIaWxPH4448nnof2w+fj
jDNOrh9TCDvttJO71htvvNH0tapiu+22c2Xq5NhOQgghhBBCCCGEEO3m7LPP
djrRWGONFe2xxx6jff7OO+9E22yzjTtnhhlmiB555JFK7kuetrnmmitaaqml
3B64dvP000+7Z3DUUUe1uyhCCCGEEEIIIYQQHQ1aDr5H7Hlbc801owMPPNBp
Kvx30KBBLu72/PPP7+IKffbZZ5Xe+6WXXor69OkTDRkypNLrFuXLL7+MFlhg
gWiTTTaJfvrpp7aWRQghhBBCCCGEEKJb+Pzzz13spAsuuCA644wzouHDh0eX
Xnpp9Oqrr7b0vi+88EI09dRTRxdddFFL75PGDz/8EK288srRxhtv3BF+UkII
IYQQQgghhBAinxdffDHq27evi9NdN/gkbbTRRtKShBBCCCGEEEIIIboM9tK9
9tprtd/30Ucfjf73v//Vfl8hhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIVrN//73v+iLL76I/vrXv0av
vPJKu4sjCvL9999HH330UfT8889H//rXv9pdnK7mv//9b3TXXXdFO+20UzRw
4MBo8ODB0e23397uYgmRyHfffRedd9550RZbbBFtvPHG0WmnnRb985//bPl9
H3300WiPPfaINthgg2ibbbaJrrnmGtd2hBCik8C+HTlyZLTLLru4Mf13v/td
dMstt7S7WEIIIUSlnH/++dGQIUNaehx88MFuXDUee+yxaO65546mnnrqaJxx
xol+8YtfuGOppZZq45MQoWy77bbRzDPPHE000USNd8dx5513Zn6POvD2229H
f/vb32oqafcwatQo90wnnHDC6LDDDosefPDBaNddd3XPdccdd2x38XodH3zw
QfT++++3uxhdC9r/fPPNF/Xt2ze64oorXH1F25lpppla9lzfeuutaIEFFoh+
9atfRbvttpubpx177LHRWGONFa211lrRTz/91JL7CiG6k3//+9/R66+/7ta9
6uaFF16IZptttmi88caLDjzwwOiBBx6I9ttvPzemb7nlli2/Pxr7m2++GX3+
+ectv1cnw3pH//79nZ43aNCgxGOzzTaLBgwYEK266qrRn/70p8zrsd63xhpr
uDWU+HU22WQTdw3WWMvAGk2rWGmllVy5N9xww9TnsOmmm0brrrtutPLKK0fX
X3995vU4j3GX3xy/zkYbbRStssoqhctIe/Xniu3mkksucb9jvfXWc3Uk7bmx
tsWzXWeddTKvd8MNN7j6sf766ydeZ+2113Zz8iJg93TacxNjJosuumgPTYBj
mmmmiRZeeOFoiSWWcBrP4osv7v4WP2+SSSaJFllkEXfOkksu6f7/N7/5jbPv
4+f+4x//aNyT8X3//fd3/hcTTDCB9KQuY9iwYdE+++zj6kcRPYk5IOehIV5+
+eU1lbbzue2225yO9Otf/zp64okn3N+Yk/t6HT4ZohpOPPHExnM9+eST212c
ruObb75x/TzP79lnn3V/o+2jh/K3nXfeufJ7orey/sD1scng22+/jaaffvrG
u7zssssqv68Qojt59913oxlmmMH1DQsuuGD06aef1nZvtO5JJ500GnvssaP7
77/f/e3vf/97NPnkkwfbS83AHJM5PffBxsbveUzl1FNPjQ444IBozz33jJZb
brnR5ia8I+bye++9t9P9br311szrYTPMOeeco12HdY7VV1/d+c76850Q0AIO
PfRQZwcyrrUC1vWZd1G++eeff7Tyjz/++NFvf/tbZ9sfdNBBbt0/C7TR6aab
brTr8BvQ5rhOHj/88EN08cUXu3mo+RYwf6Td8n2zL9oF7ZhnQVlYLxt33HFH
+72UnWdKHTv66KMzr/fII484HS5+DY655prLrR2H9Au8m3333bdhh9lzY97O
enS7n5sYM5lxxhldXZx22mmjc845J3Vtmf7Or7sc7FFLgj0Pf/nLX5zGZOe+
+uqriec++eST0pO6FOoEenqIfYQ9Ex/DGUvGdLAd+vTp457JMccc0/g7/h7+
88IHRDTPa6+9Nto4js+cCMd04TnmmMP9G33J6jAH68BVY/Yv+0WMDz/8sMd7
PO644yq/rxCiO8FXwO8ffv/739dy3//85z8NHQt9wmCO55fn3HPPbVkZLrjg
gh73wo9U/Ax+Jv6zQc8oiq8Nsq5++umnR19++WWp8rA+4us7dcSNwHctvh6M
1lEU5nX2feaQ+POE+lgxX6BezjvvvM7PmH8zb2S9b6qppmpcl3Iy1ncCrP36
zwxfozJ+QfjM2TXwCcMuDYFnu/3227t1NPQ81p+ZQ/A+mUvjM2faEvppO/wy
xZgLvrj4QaTpPT6rrbZaj7aUt7+Auo9eyrn4+iZBO5Ce1L2ghYfoSSNGjOhR
d+jvWrUO000MHz688Uzeeeedxt9//PFHt8bD35dZZhnnzyp6gs283XbbFfoO
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
0B8+8MADrvz4F990002N7/A32jn9KO3l888/d9fB3502wWfEKI7DebRnvsdv
4t/8l7ihxKBNejbY+auuuupoZaOOUw7qC7lo4tAOaT9+Oz755JMT23FIHGXu
RVloh7RH3jNlYXzIyv3AGHzbbbe5nISsreF/wPyA/t6gb+D58rs233xzN96i
qyY9Q6C8vDP892i/jHP0OXlzJh9+N30TtgH9IuM8ucWpf7wTnh/Pu6p5NmvX
9C/Ubd6l2SoDBgxw/RD5rO66665oxRVXzL1Wmn2BT0GofcH4znuxXBV23H77
7Yl1JJ4Pm/pOu73iiit6tFtskCywobgvOQfIs23Pgf6Cd8p9GDuwOXyIAeOX
Z9ppp3Xl5b3Fy0rfznvjObFfJd5GGfPRMJL2p9Af00b5nrVRvk8bpT3as6Nv
uP76610fRw5Uxhj6qCT4blIb8HNV0AaowzxDfjuf81zLxDinHfAeaRdmu7E+
hG5kMMZi7xMfkf6aOMTM46siVE+yvV08l1bS6XoSticxj6rS/JkH8F7RWZ58
8snc86m7fjmxVdtFqJ5Em1l33XVd3PG6czTTNq18zFW01010InXpSfg/knt6
4YUXdvMuxjv+Sww4zsO+ZiwNAXsSW8x8Ge677z7XvukXmGeTVxF9Bk2hKngu
2JN9+/Z1dpQ/18KWwB7FVmKsoly+/ZoEv53zyYPDGIBthz2CzcS8GNuSZ5WV
rwpbifkOc/djjjnGrRNgJ6JlcQ38ZCaYYAJ3ThHbN0RPYq9v3MeVPL5JoBnG
z+Ww/ID8buaX9NXYi9QNNDvKTl5cbJ7Q8vMcefesl2DfcD3GOovXgF3JvJn7
XX755dE333zj7DM+Y5woA3OtpN+XdDB/AWyrpM/T9vJPPvnkiedT9+Mw30s6
1/YzYaeuscYabm5DXeZ5Y1tTtzmPthVqVzLGolehoZH7nTnaww8/7N4pc3Tq
EvWTa8b3hqM9WeyekCNpHy82TNK5vNc8nnrqKdf/kb8AG4Jc1Pxu2jZ1g3pE
G6J+pM3zmM8n3Z+2a88H7YPc1uht+HWiGaJhct6CCy5YqV6RR3zOn3UwZ6yK
+Ppa1kEZk6CdMael79lrr73cPAw7nXkLbRzNgXVn9Nk0X/Dzzz8/8Z4Wh5T3
ztyRd0W9ZiyhXpfVmn1oY/RpXNfPK0xZqRf0SZbvxc+dyniX98zi+iXE14D9
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
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QpThpZdeihZZZJHo448/ruV+jzzySLTiiitGn376aS33E0IIIYQQQgghhBBR
9L///S/66quv3H+bAS2pb9++0ZVXXllRycI49thjo3nnnVeakhBCCJHBG2+8
ET3wwAPR9ddfH5177rnR8ccfH+27777RO++80+6iiV4ONua7774bffbZZ9G3
334b/fjjj4nHDz/8EH3xxRfRBx98EH399deZ13zvvfeizz//3H0nfp1///vf
0UcffVTTrxOiHt58803Xh99www2uDz/hhBNcH/7Xv/613UUrzJdffhk9+eST
0e233x5deuml0dChQ6NDDz00Ovvss9tdNCFEIGhIu+22WzTttNNGM888szv4
d974ncTLL78cTT311K4vaAd77rlnNM8880R/+9vf2nJ/IbqZ//znP9EzzzwT
3X333U4PHjZsWHTkkUdGBx98cLuLJoSokDnnnDP6xS9+MdrxxBNPtLtoopeD
zZlU97IO5phZ/PKXv8z8/uSTT950ua+55hpnH3/zzTdNX0uIZllggQUS6/qD
Dz7Y7qIV5rLLLkv8Leuss067iyaECODDDz+M+vXrF/Xp0yd69NFH3d+ee+65
aPrpp4/WXHPNQtf6+9//7jSpLbbYohVFDYJ1ryWWWCJadNFF3dxYdD4//fST
W19Bs/j9738fDRkyJBo1alS7i9VxsMb6hz/8ITrmmGOif/7zny25B+taSWM6
/UO38P777zstbPjw4e6/+GEIIXpCu3j22Wejk046KZpgggmkJ4na+O9//xu9
8sor0Ysvvhg99dRTbs3i17/+dY8xZ/31148eeuih6Pnnn3fn4r+QBfbr2muv
3eMaU001VTR48ODopptuil544YWmyozf+5RTTumuW1ccByGywD+J+dppp50W
TTTRRF2tJ/3rX/9ybfTee++Nll9+eelJQnQZa6yxhmuzJ554ovs3fdOEE07Y
aMv4GYcyYMAAZ5eiUbUT7BPWqg488MC2lkNkwxof4+Ass8wSLbbYYtEVV1zh
fHcvvPDCaK211ooGDhzY9N7L3gI++/3792+0y4UWWqiU/2AeaLDY+Mwpt956
667Sk+677z73XFiH3nTTTZ2v9Oabb+7+zd+ZUwghRmfQoEFdrScxF7nnnnva
XYyuhHHkrrvuancxeswhOdjnVhT2tPHdscceO9p7772dH1RVbLLJJo2ySU8S
nca2227b1XqSD/qx9CQhugfW7q3N2toN8zD7269+9atgP4g///nP7jusM3UC
rEmhKTHHFJ0H9WrJJZd0a5KXXHJJD93o+++/d2uT1Ke//OUvbSxl5/Dqq6+O
5jNk/oR54IdQZm2WNeRJJ520K/QkYgaY7RGPn0Zd23jjjd3nu+66a5tKKETn
sscee3S1nkRfiJ+1KA77m6ebbrp2F6OxtmkHdkBR8Ell/SB0bAyFGGN+2aQn
iU7jgAMO6DV6EnHQpCcJ0T2svvrqrr3iw2vg02Pt+Oijjw66DrGK8LWcYYYZ
3J6cToD+aIoppoh+85vfON8O0Tn84x//cLn/qGP4IsU566yzGnXwjjvuqL+A
HQiaCPXZnst4443n4o+GcNhhh7l9hGWg/XS6nnTqqae6MhKLn72Taay00kru
PObOQoj/o9v1pKuuukp6Uknw2+wNehJ2wzTTTON87KsEPyniP4w77rjSk0TH
Ij1JCNEO2Is+zjjjuPaKrmTgJ3LrrbcWWt/Br5jr4GfSSTCPplzKD9BZMD7w
XlZZZZXEz/GlWXzxxaNDDjlE+9082Mc5//zzR3PNNZfbYx4KftC9VU8iH8hY
Y43lypi3Z4O8k9bnye9NiP+j2/Uk/BOlJ5WDcbbb9STWFPgN7JOpmm222Sba
f//9naYkPUl0KtKThBDtAL8Pa6/NxBki3+v4448fTTLJJC5PaydBHBh+H/F5
svwWRH0Q/9XqXRFNRJSHfIe9VU9ab731XPnmm2++oPPRMDl/4YUXbnHJ6oEc
CEI0S7frScsuu6z0pJKsuuqqXa0nEWNhpplmakmO9Ntuuy2aY445ou+++056
kuhopCcJIdrB8ccf32ivxFEqy3HHHeeusdlmm1VYuupgLk35yPMq2o/F58J3
HBtNtBbi1BJHrDfqSeRxsxzRO+ywQ9B3iNFt/d4jjzzS4hK2Bnz2RowYES2z
zDIu7iy6uRDN0M16Ej6KlFt6UnHInYZ/Z7fqSfgNMUaF7v0uArG8Z5555sbc
XHqS6GSkJwkh2oHFp+Voxkd4zjnndNcgN1cnctRRR7nybbDBBu0uivj/TDzx
xO59rLjiiu0uyhgBMdB43r1RT7LfxvGHP/wh6Dvnnntu4ztDhgxpcQmrBR/L
yy67zO15pPzEst95551Lxa0Vwqeb9ST8a6QnlcP2nnebnoSmTm6Fueee2+V0
awX0rf64KT1JdDLSk4QQ7QDbi7bKXrWye8Fef/31Rh44/CA6EcuLNeGEE8of
ps0QF93GCGJbidbCmMw+1N6qJ6211lqN+nTRRRcFfYf9C/adbtnzRr915pln
RrPOOqsrN7kP9tlnn+jDDz9sd9FELyFPT+rEOHbYLf4cqhv0JHJmVsXbb7/t
5o34WRIzumg5LL5kt+lJvHdiAi644IIt2+87cuRIFyfh66+/bvytm/Uk7PPH
HnvM1RfWj8u0Z77z8ssvu2vQR7R6r3WVbaVZ+O2vvfZa9MADD0SPP/54j3pR
9X3K9rVjmp5Udf0gD7K9X3wT2wl9HLFBeI/ETSXecadT9fsglg5jG8+gFf6n
dUC/Syxq6tWbb75Z6bU7pX8kV5S1VeIel+Xkk09212B9sCpC+tKiz3Haaad1
5WSPiKiGsu/J9I0zzjgj6B7t7te7FWw9fMCsnbdKT2rG/mkW4lrY77v99tuD
vsP+DvsOOnin9MlJMBaxL3nqqad25SUPJ7FCyI8oRJUk6UnMn/bcc89o9tln
d3mzJp10UjeWkn/j3Xffzbwe12DOv+6660ZLL720uwb5KRdddNHE8/Eb3Hzz
zaP+/fu7c9hnhG56xBFHjHYuOgp5Qbmurz9QPsobP/BRbhWXXnqpKzc5TdCn
Z5xxRrdGd+ONNzbOufPOO90+7759+7pnMMEEE7jfyG8umg/3008/jfbbbz/3
PvDN4flyb/5NDLnzzz8/M58t7+3iiy+Oll9++R7PjvW2pGfH/uC6CNGT/vOf
/7hnudhiixXW0ELhncw222yj5XfoNj2JsQ1/VuolexrRx/j/ySefPJpqqqmi
rbbaKnrrrbdyr0P+5l122cXVbdrcwIEDoyWXXNLltqD+XX/99e695IENsuGG
G0YrrLCCi0PBuEabNXjfp512mrsH5cOXnc832WQTp++1A/oa9tJPNtlkLicx
8RqJwcgzXGqppdxvz7J/eHa/+93vogEDBrj96dgs9AE8AwNbjXZGflp+N22R
Z8MzJ4dIKHl60vDhw11/etJJJ7n49TzrE088MTr22GNdTH5siyTYU8pn+IDz
nVNOOcXFORk6dGhw2YqSpCehsZx33nmun+D58KyYTxA779prry3lF8F9eG7Y
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
g8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8Fg
MBgMBkMKP//5z4vNNtusePe73128853vLNZZZ53i7rvvbuTa//nPf4rf/e53
xcMPP1zceuutxWWXXVaccsopxYUXXtjI9Q0Gg8HQPv72t78Vv/rVr4p77rmn
uO6664pzzz23OO6444pf//rXw741Q0v4wx/+UDz66KPFbbfdVlxxxRXFaaed
5vZvg6HrQPf8zW9+U/zsZz8rfvCDHxSXXnppcdJJJ7l5PJ6BbF577bWL9773
vcUss8xSzD777MUqq6xSHHLIIcWzzz475tw777yzWG211YZ0pwaDoSk899xz
xUMPPTTs2xgonnnmGaeP3HjjjcO+FcP/4aKLLire+MY3Fsstt1zx1FNPFf/+
97+LPffcs3jta19b/PjHP+77+vBGr3jFK6Y5VlpppQbuvj38/e9/L84666zi
vPPOc3qJwdAv7rjjDqfP/uIXvxj2rRhGGLfffnvx0Y9+tPXj9NNPH/O7Cy20
kFeWY6s1iQcffNCtk/vuu6/R6zYN/DDc51133TXsW2kF+JR87/v973//sG/N
UAE33XRTcfLJJzvdeyLhW9/6lnf+rr/++sO+tVZw8803Fx/4wAeKV73qVcVa
a63l+H7srKuuuqo4+OCDi4997GPFjDPOWBxzzDFOz0evXXzxxYv5559/mmvt
sccezgbgfHzM73rXu7zHO97xjmKGGWYoXv3qV497ns5gqIpB2Y7oIHPOOWfx
wQ9+cCC/1wXAn80999w9uf71r3992Lc0ofH4448Xb37zm91egB8HHHrooW4/
4v1stNFGff8G/hCJSZpvvvlGgk/617/+Vay55pq9e91www2NUzL0he9+97tu
nTGf3va2t3XeVjZ0F2ecccYY++gNb3hDscwyyxTbbrttscsuuxS77767O/g3
Maf63JlmmqnYaquteufsuuuuxQ477FCsvPLK7jN97uc///kxv3vLLbcUl1xy
SbHjjjv25nLTfBJ6EfaJPNe1117b2LWbxAMPPFC89a1vdfeJ3UXsw3jDn/70
p+Lyyy8vzj777GKppZYyPmkEAY/0yle+0r037I0nnnhi2Lc0MPzyl790uue3
v/1tF6sznvkkZPP000/v+B1kUwjkCCywwALFGmusURxxxBFuPHx8EvkEV155
pZP3xCQuscQS0/Byn/70p52/lTHmXLEhDIaJDGxFuFy4ndlmm6146aWXWvmd
f/7zny5umHwikfELL7xwK7/VRRx22GFj5BGyzzA8EAPLe1h66aXdv59//vkx
dgI5cE2CWLxR4JO+//3vT7N3TiQ9zBDH/fffX5lfxA+o59POO+/c0t0ZxjuO
PvpoN4de//rXO1sJ/jsE9Bo97/A7h/Df//7X2QX4ozl3k002CZ6LTdYGnzR5
8uQx9wuv30XAyen7xPc/nvHnP/+5pxsYnzQ6kLUsB/7CUQY+UHjOqkBGjVc+
CQ6eHAN4+Jx8lz/+8Y/FIoss0hsPH59UBnmveh5NJLvVYMgB/M4JJ5xQzDXX
XD0/U9N6/oEHHlhMmTKlWGyxxdz1p5tuOscPT8R1+Z3vfGeMTCJ+3jAcsC/L
e9h3333d3/Av4OPgb8QtNZHvpoFOOgp8Evn2rFO519e85jXF73//+2HflqED
wHZnTrzwwguVvveJT3xijOz76le/2tIdGsY79tprLzeHTjzxxOS511xzzZh5
Rw2NFPB5IfPwN4TwhS98oRU+Cf1L3+/mm2/e2LWbxD777DPmPtddd91h31Lr
IK7S+KTRAnaHnqc5MqPLIA/34osvrvy9J598ctzySeS2VfVRUQeP+M9cPglM
JP7cYMgFdu2RRx7Z4+7f9KY3Fbvttlvx9NNPN/5bn/vc55yfb7/99nP1CFjH
5D5MRD4JMB74ud73vvcVjzzyyLBvZ8KC+S9zUMfq/+QnP3GfUcOiaYwKnwSI
8WW/hVfDZ28wAGLo6/BJcLWLLrqoyyUlBgNfhsFQB1tuuaXLG89BHT4JYHPF
cvHb4pOo+U3uHeuEmn740rsI1u8nP/lJd58f+tCHit/+9rfDvqXWYXzS6AG/
Ie8L/9j222/vYhBHGdgNxif9DzyX1KeomkNPnVTjkwyGemDP/9KXvtTLe595
5pmLr3zlKwOPPZjIfBKwWjTDh/g0OOA4B4FR4pPAqOtehuYh9eWr8kkCk32G
foHszs1Frssnfe1rX3N9gUJoi08SjMo6GZX7bALGJ40uxsM8pU8w88/4pP8B
+1We6y9/+Uul76LDkDNjfJLBkA/sZWIBJZeHuvToS1XXX1OY6HySYfiQ2Dw4
1UFh1Pgkg6EM8enV5ZMMhn7x4Q9/uPjmN7+ZdW5dPokectgaIbTNJxm6B+OT
DMPE1VdfbXxSCVtssUXvuerUw1522WWNTzIYMkAdFGoXUQuANTDPPPO4fgfD
zjUwPskwTFB3W+bfiiuuOLDfNT7JMMogF4ceAsYnGYYJehXdcccdWefW5ZPQ
kegZEso3Mz5p4sH4JMMw8alPfcr4pBLowSzPRX3aqvjyl79sfJLBEMGdd97p
eqhJXik16S644ILOxHwan2QYJq666qre/KNf9KBgfJJhlIEtLvPX+CTDsEC9
x6eeeirr3Lp8EphlllmKRx991PuZ8UkTD8YnGYYF4iVF3hif9D/o/gXUcYv1
+vSB2qDGJxkM0+L66693dqrM+RVWWKG49tprh31b02C88kn4NNFfzz//fNdf
cpTw3HPPubzIv//978O+ldZx0EEH9eYfdacHhWHwSbxP3ivvdyKBWvf0Cs+N
Y+gH//73v10vA45//OMffV3rr3/9q3tfxNB1Cewt9OM1Pqk6iOsahTX44osv
9uZxGV3p78hao1fgSy+9lHV+P3zSdtttV/z85z/3ftZFPok+4r/+9a+LZ555
ZprPuvL+APvgsOYZ8WaM0bPPPlv5twfNJ7EHIDfYEwwTF0888USx4IILjhSf
xDqjd0fbekJZvlftT06O3Kmnnpp1rvFJhkHioYcecn2Q4XHmmGOOYs455yxW
X3314hvf+EZrdjo1c5EvcLPMc2K0J02a5PjsrmLU+KQf/vCHLm/wAx/4QPHu
d7+7WGKJJYo99tij+NGPfuQ+hztC9+SdI6sXWmih4u1vf3uv5wn604EHHljs
sssurtfdaqutViy++OLeHrvYHN/+9reLs88+29W+veSSS4qLLrrI2cb0x+Oz
e+65Z5rv0ZeMXMZzzjmn9z3+i6wM9ZG7//77XbwoehI1tbjvN77xje7e6Ksa
4vqvuOKK4otf/GLxmc98plh77bVdDjJjc9NNN/XO+elPf1rsvvvu7prvec97
3Of0dbrxxhurDn/fuPnmm4uvf/3rvWPJJZfszT/eif6MHPW2EOKTuD96jyyw
wAJurBgz3ktdLoT3xvtDJtCjTd4B/vYNNtigeOCBB4LfPf74452txHxfc801
i6WWWqqYa665vOfefffdLl6Ye19vvfWc3OO3jj322N45xBHA31HzhHsg55Y+
3MznXJtQQD3Ko48+2t0TspW8F9bbSSed5MYWcF3eL8fGG2/sYjSPOuqoSr+T
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
pLe+9a3FvffeO7Df/Oc//1mstNJKxYYbbmickqGTgEuaaaaZiptvvnlgv/mf
//ynmDx5crHaaqsNLCbKYJgI+OUvf+nW9JVXXlncdtttA4vFNRjGA+CStt12
22KuueZysew+kM/zxBNPtH6gPwr4/6lTpxb7779/seOOOzqdcuWVVy6WWGKJ
QQ2NwZAN7K03v/nNxS233DLsW8nC+eefX1x44YXF9773PceHhQ4+5zwOg6FL
uPXWW6Nzt5/jrrvuGvbjdQas/Te+8Y3FDTfc0Mj14IbQ23Pw5z//uVh88cWL
DTbYwDilTPz2t79tbV1wPPvss8N+xE6A9fCmN73J7f2DBvrxiiuuWKy66qoW
p2ToG+ecc05x4IEHutg3YkJXX311F1/wwAMPDPvWWgd7/XbbbedsYLjhSZMm
FZtssknxsY99rJhllllc3o7FWRgMaRx55JHFK17xCsfFhrDrrru6c9o+brrp
pt5vwmG95S1vKd7whjeMOedVr3rVAEbFMBHBngF3+eCDD9b6/pQpU9z+Mwr1
Ddg7Z5xxRre+XvnKV3rXI3+ffvrp3Xnzzz//sG95wuMPf/hDsf766xcrrLBC
ce211w77doaOt7/97a3tRe973/uG/XidwH333Ve89rWvLfbdd9/Grsm1pptu
uuKPf/xj1vnYNK9+9auLr3zlK43dQw4OP/xwZ1Psvffezu82Krjkkkta1dMY
l4mOJ598sphhhhlcXH8VEE902WWXFTvttJOz2zfbbLNijz32cNzUSy+9VOla
Tz31lON50VlGHXfccYfzF2PL81yGwQLOnrlUXut33nnnsG+tNaDvY9uyF809
99zFNddcM008Etz59ttvXyy44ILFiy++OKQ7NRi6j5/+9KfF6173Ohf7EwNc
rciX9773vY7DPvvss4vbb7+9+MlPfuJ0TuLgsXHmm2++MfIIGxuuinM44IKp
NXP88ccXm2++ubNX5dzzzjtvmt9Gj+O34JGMTzK0BebuIoss4ubYKaecUusa
1BWBA11llVVGyv74xS9+UXz0ox8ds26XX355pzMbuoOll166936Q28jeiQz0
QTgJ1t2ll15azDbbbGPm8G677ebq5KIH+o7f/e53zna5+uqri913391xSPLd
17zmNS6vZCKDuIeFFlrI1Yfz+mdf8ep2Dg/Q++GUYn6vJvHNb35zzFzaa6+9
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
w46LxhLu+P766y+zefNm88svv/jazq5du2z7nTt3mv/++y+usWgc3nPj2LZt
m9myZYv5448/Am1vz549pnnz5m4cIxHxJB3bypUrbc7TtGnTzIcffmj27dsX
aBtvvfWWOfHEExMST9LrpHMelF6rmTNn2mOYNWuW+fXXX+Megx+ZiSetWbPG
/Ty+++67Yd8jAAAAAACky1NPPWXOOOMMOw+pS5cupkePHubss882xx57rLnx
xhtt7MAv3Z/fdtttplKlSua6664zw4YNM6NGjTL33nuvOeuss8w111xjnnzy
SXPUUUeZV155xe23atUqWzta+7799ttN37597X979uxpx9SmTRt7T53Rm2++
adq3b2+6d+9u9+v069Spk/nyyy9tm3nz5pmLL77YHlPJkiXN0Ucfbe/v+/fv
725H8a6mTZuasmXLmmrVqplChQqZAgUKmNatW9uxeSlWNmHCBHPuueeaihUr
mqpVq5p8+fKZ0047zQwfPtzs2LEj4vnRsV944YX2XBQrVszkzZvXjmX06NH2
ecWxtHbZqaeeao4//nh3rBqTcnv++eefiNv+6quvzP3332/7OjEMPXQcei0y
Pvr16xfz9fzzzz/t61e8eHFz+umn23N98803m8aNG9tj1uu5ePHiiP0V23r+
+edtuyOOOCJkXFqnLdy4vvnmm5BtKK5y2WWXmRo1apgyZcrY96X6t2jRIub4
Ra/X1KlT7Xtc/fQ+0Gtdp04dkz9/fvv6TZ8+3de2ggoaT1Lcbty4cTa3TOPs
2rWrfW/rs6mx6jPyySefROyvNe9uuOEG07lzZ3Prrbfaz8Mdd9xh31Palj5H
iuuJPpN6LZ3Pm7fdTTfdZGO+jg0bNti+t9xyS8h29XkdNGhQ5k8UAAAAACDb
OHDggLn66qvNJZdcYn744YfDnleOku5hdS+s2EOs/Bvl0ii+othBuJwa3euO
Hz/expK0TeVdOBQz0P2q4j5ODMV5aG153f/PnTv3sG0q/0n79LbX9i+//HIb
XxHFihQXatiwYUg7J540dOhQc8EFF9h4lXOMGn+3bt1sO8VNFi1a5J6z66+/
3j6nfB2H1ixTvEPtFUuLlDvz7LPP2rHUrl07ZCyKJymPq0SJEvY+f8WKFW4f
xcNUV1vtSpcubd5+++2w2x4zZow9h3oo1uJsW7Ex5+feh/YTjc5b0aJFTeHC
hW0Nbc2h81q9erVp1qyZ3Yfid4rbZPTjjz+G7LNcuXLuuPR6hBtXxviU8uYU
12zUqFFITMpPPOnnn3926zXpNXbeEw4dk/KVFK/T6xpvjlkkQeJJaqs4nd67
GWOYonEec8wxdlv33HNP2LHqM6ZYkM5txvjdySefbD9HzvtnwIAB5qqrrrLv
D2+7UqVK2XPrvOdl48aNdlxHHnlkSNsKFSrYsQAAAAAAcg/FME466SQbx9B9
aDhz5sxx7x1jxR+Ud6P4w/79+6O269Chw2HxJC/dxzoxJz2WLVsWdXuK/SjX
RG0Vc4g2V+2ZZ54JiSdNnjzZ3icrThRuu8rtUVvFrPT/2v5jjz0WdtuKvznb
Vs5HLNq/07569er2Pt4bo/JSrOGKK66wbRVvU4wpGsVRMjPfTTlCJ5xwgo0l
hYs1OhRDUs6M9qO8llgUd8rMfDdv/aVY8STNRVTukXN+I80X0/E1adLEtlO8
L5GCxJMeeughG9tRrlTG2J1DMSVnew888EDU7SmPyRv7ifS52Lp1qznuuONs
G8UzNZcwEr3HnZjWiBEjIl43AAAAAAA5lzcv4c4774zYTvfiTp6O8k3CUa6K
2ig3KRa1VZ5DpHiSKFfEGZt3Xlwkzny6aPfCojwLZ7vK46hZs2bUPpr/47TX
XK/evXtHbKt8Ec15U1vF1WJx1l/TQ3PbIsWSHIoRKVdL7XX/78zni9Q23niS
cqOUy6K+mqsWi+bEae6e2vfp0ydq28zGk/T+8xNP0muq+XTOudX5iOTMM89M
aK0pL7/xJL13FL9z2g4cODDmeBVXjHZcUq9ePXeb3333XcR2mlOnNppLGKtO
k+Z56rMDAAAAAMh9lFfgnQ+juVqRKI/JaRcpvqCcCj2vfJBIuRVeyieKFk/S
XCtnnxdddFHM7dWvX9/mWcWiOXnOdlW76NFHH43a/uGHH3bb63xp7lU0ytFy
2seqV61ay05b1YjyY+LEiW4f1QOKJDPxJOcYVDMpWr0mL+XWOPvLWP/IK7Px
pJ9++slXPEk5ZE67li1bRt2mM6dTD82NSyS/8STFv7y5RHXr1o3Y9sEHH3Tb
qS5UNE888YTbNlq9LG8eouY2RqI8PsU0lyxZEnW/AAAAAICcS/fZzj1ktLiK
8oOcdpHyT7RWlrdNrDlvqj8Uq863Uz9Zj2hzrpYuXWrzgcLNWcsoYzxp+/bt
Udt778f9xLU0H87PmMUbT1JdYz+0Fpx3LuCnn34atl288STlSDn9NAfML72W
Tj/Vgo4kVfEk1bJ22mktt2gUo1OsUPk+mVlzLpwg891Uy8xpq/ddJN45f3ff
fXfUbWqNQOf9ovmU4WpcyX333eduU/M/I1Etb+UBAgAAAAByL+UoqZ71/Pnz
o7bTGmrOvabWdwrHO+dJD/1ba40p1hNvjZWxY8e629O8s0g0plj31Q5vPEm1
hGPxm9/h8MaTdOzRxBNPEtWV9s7ZCyfeeJJigU6/aHP7MvLOI9RcPK3rFk4q
4knKj3LaaI5mpLF4qU24GvKZFSSepFwwvSeUmxeNN76rtdZiUY1vp32kGK7W
7nPeV3ny5LHrNIajGLTWbAQAAAAAICPNvVEs5NVXX7XzhhSziBVPEm+ta+9D
9Xtr1aplazR9//33vsehXBynTvCJJ54Y9n5ftV5UU1zxDD+88SQ/cRZvPGnw
4MEx26cinjRkyJCQcxtufmG88STleTn9HnnkEd/9NAblezl9Vec8nFTEk7x1
zk899dTA+0ikIPGkSPR5VO0jxZH0eWzVqlWgeJLmxEXLHVMdrlNOOcUsX77c
bae1AjNSzE1zAzdt2hTXcQAAAAAAcp6vv/7a1vDR/bfm/miu2W233Wbr4tx8
882+4kkyYcIEd/2nSA/lQSgu4IfG5PTTtjN68skn7ZrnfnnjSYpxxeKNJw0d
OjRm+1TEk3QevOfz999/P6xNPPEkzRf0bvepp57yPSbx1pPW+yacVMST2rRp
47ZR7ep0ijeetGDBAnuuFOfR51FzzLRmoHKDvJ8JP/EkxWGduKxirxnnovbs
2dPN73Nq76vmdkaqnaYa5wAAAAAALF682F0HS2t63XXXXYetA+VnvpuXYjbK
o9B2vbV+vI/SpUvHXJtKFi1a5PapVq3aYc+rfnKQuEROiCcp98d7LsOtuRdP
PElxqUTFk/Q+CicV8ST93Gmj+Eg6BY0nLVy40F2TrXDhwuaee+4xy5YtC2kT
dL6beHMM9b5zaC5qkSJFbG6SeOvPr127NmQbl156qXn66ad97Q8AAAAAkHO9
+OKLbi6R1rlfs2ZN2HZB40lemqvz1Vdf2diE6ll74xXKI/FDuRJOH83NcXz2
2Wd23JFqDIeTE+JJysnynsddu3Yd1sZPPEm1mr25TXqtvGv+qX5VEN68NM3J
CydWPEmv5erVqyPuw088qUOHDm4bPzWykilIPOm5556zNcHVtly5cmb9+vVh
28UTT3r33XfdPtdee63789mzZ9va5Q69b4488kjbzju/c+vWrfb13bFjh6/9
AQAAAAByJsVinPvGWLlCfuJJyqEIV3Mlow8++MBUrFjRbkuxCz/1lLz5ON4Y
1I033miGDx8es79XTognqQ6V069s2bJh2/iJJ2k+Y8a4T6VKldx+qkPkl2JT
3hjXzJkzw7aLFU9SfEs5bZH4iSfpdXLaKPcmnfzGk1Qn24nlKUYaqR62xBNP
Uh6SUxtLMSsnBqnP0KhRo0LaXnLJJbadPqcOrf/YrFkzX/sCAAAAAORcVatW
de9JR4wYEbWt1oALF09SzSXdZ4pynRSX8kPz6bTulranmt+x6J68UKFC7r3w
9u3bbfxC86v03yByQjypcuXKbr9u3bqFbRNvPEnjcPppLS+/vv32W7ef8ljC
1XSSVMSTNm/ebNcoc9otWbLE93Ekmt94kjeO53ymIpk+fXrYeJJy96LllGm9
PqffpEmTbF0lfYb0mfBSnSSnndbKk5o1a9o4FgAAAAAg91q3bl1ILslvv/0W
tb03P8gbT9J97ZVXXmn/rXiSns9Y6yWSpk2b2vZTpkzx1d67jv3IkSNtDEy5
FUFl93iS5oI5fZRfFmlumDdfKFI8qVevXofVzdacRydvzTsPKhZvDCJSjEu8
td3DxZP0XlQ8KhI/8SRp0qSJ286pNe3HZZddZj755BPf7WPxE09asWJFyOdx
586dUbfprcfujSe98MIL5uqrr47YT/NOnX4NGzY0L730kv1vRloz8dhjj7Xt
VAN81apVdn1FHQsAAAAAIPf69NNP3ftKzbGJpV27dhHjSY0bN7b/duJJfusr
KRak9lrHyg/FOZz5QKeffrqd5/X555/76uuVVeNJzZs39zV+zUFz+lx33XUR
22l+k9NOa/aFc/3119s8lYyUl5QxPyWW+vXr2/bKC4pUh0sU23G2HS6WqLrQ
kcYrfuNJ7733Xsw5gRkpbqL1z2LFV4PwE0/SHFCnjfL2YmndunXEeFKs91H5
8uXdWKRyjsK9/tKqVSvbrkSJEubee++1NakAAAAAALnbpk2b3BwUPZy1ncLR
vCnNxXHmp2m+kuOZZ56x953ixJO0LrnmG0WjmstaB91bn8UPrS/ljDlI7oyX
xuZsQ/fTsYwbN85tH6nGtJfyW+KJJ+n1UE2raBR3cF431SjfvXt31Pbe+ucZ
1+oSxQpWrlx52M+VH6Nzo34XX3xxzHrnznxIxZJizYmaP3++O6a2bdse9vz4
8eOj5p1544HR4kly//33u22HDRsWta3ib1qPUDGZRFKNc2cMej3C8cZK9YgW
j9NafmeccYY7n88bv1Wd9nDn1GvQoEHufjR3NNJ76O233w6Zvzhv3rzYBwsA
AAAAyPG8eSJa7ylczEBxBc2HUa6HavGqbcmSJc2BAwfs8+qnOTPixJP0qFKl
StRYx+jRo+398IwZMwKN2VvHKeha9g6td+5sQ7GvDRs2RGyrWICO0WmveNa+
ffsitlfsTfWfnfa6v//vv/8itvfGk5S7otyRcPEdUYyhePHitm2dOnVixpLk
448/drefsUbWa6+9ZmrUqBGxr+o1165d2/ZVfGf//v1h2ynGlT9/fl+xJMeF
F15ot6v60N7zqZhOtWrVbCwjEu9cL63dFqt+lrd2eaS17v/55x/Ts2fPQPWi
/NJ5dvavGmAZaxU57rjjDred8o/CvW9UW0oxKdXuvuKKK9zcM5030Ry/WJ8p
73zJaPE4bbNw4cJujlKQNRQBAAAAADmX7hdVsydv3rz2nlH3opp7pvtYxSqe
ffZZe2/vzIdRDpNq9zq5Mddcc42NgRw6dMg+78STFHvo16+fjY2orrDmDqnN
n3/+aebOnWvXZ9M+p02bFnjM2k6pUqXsOKLFdTLSPb1yOtTXW6fGme+nPCk9
78RodF70/6oZk7G9YlB6zrvOnP5fNbK9OV/Oo2DBgvZ5rQWfUcb6SYsWLbJr
e6mukfKoFOfQOu06n8oP03HruT179vg+9r59+9pjVLxH6+8pnqAcnGLFitl6
6tHofCj/Rcesc6daz6qlrvpbivncdNNNdtuKb82ZM8f3mJS3pTmLOm7FrDSn
Tj/TeyrcfC2dp0ivn2JZiitpTlYkOu4yZcq4dYMUc1G+lvY5ceJEu23NHYxV
t8gv5WBpm8rByzhevUeU76fn9fo6FKNV3SnVInfmP+r10edR41IuoHLynPwp
1RjX66K29erVs/Fe5cb5iftonqf6KT4bjWJsaqfaZQAAAAAAeGnum+YFqQ6S
7rmVM6L7XeVLZMyV0f936dLFXHXVVYfl3jg5TE4ei+53VXtZ980nn3yyvbfW
fCLVI9L6bPHSfLsga6GJ4gaPPfaYzWlS3WjlVCmepXtzxc10LA8//LBbb1j3
2YqdKNagWuRTp0617VXvRz/Tc954mPrquBR70zb1nPahfSkn5vHHHzcLFy48
bFzh6nHr3Gj9ds03U8xH+Sd169a18+5UJzkeqpd1ww03mHLlytltKu7gt266
KK6kmIziiHodtQ3Fz9q3b++7vlJGWltM7zu9J5TTpfiSjtvJtfHSWPX66Vxm
fP10zvV6xIpnabuq96X5e6qnpH3qfd6xY8eE1t8W5ZI57zfFETOOV+8VvWec
WKzX+vXrzcCBA22de+fzqHOtuGDGeXDff/+9/Tzo86i8rWi5cF4aj9Z3jJRz
5tB51/svUs4cAAAAAADZgXI4FMuIVu8pO4lnfTcAAAAAAAD4p/ygCy64IN3D
SBjiSQAAAAAAAJmj2i+qaR1uzpOo1k48dZeyKuJJAAAAAAAA8VMtF9WBUWxF
OUgZ622rVrV3bbmcgHgSAAAAAABA/BQv8q6D9f7777vPqW6xalKPHj06jSNM
PO9a8sSTAAAAAAAAgtE8N2etdK299euvv7rPad2v+vXru+uv5RQPPPCAG09q
0KCB7/W5AAAAAAAA8H969+5tjj/+ePPee+/Z/9fctiFDhpgaNWqYnTt3pnl0
iTF+/HjTvHlzU7NmzZB8LD1OOeUU+1z37t3TPUwAAAAAAIBsQfk5w4cPN+XK
lTMVKlQwxYoVM7169QrJVcruXnjhBdOzZ0/Tt29fc++995r777/f5indd999
pn///jampn8DAAAAAADAP8WVdu/ebesmAQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAA+PXII4+YTp06pXsY2cbQoUPNbbfdZv799990
DwUAAAAAAORAijns27fPHDhwIGq7gwcPpmhEoR588EFToUIFs23btrTsPzv6
+++/zSWXXGLat29PTAkAAAAAACTE77//boYMGWLq1atnjjnmGPO///3PHHHE
EaZSpUrmlltuMevWrQtpP3fuXFOjRo2Uj1OxpOLFi5sNGzb47vPxxx+bHj16
mLvvvtssWLAg02PYsmWL+emnn8z27dvN3r17bdxt//799t86jz///LPZuHGj
2bNnz2F9FdfRc1u3bjU7d+40f/75p/nnn3/sf3ft2mVjZNq+ji9S3Oe///6z
29AYtD/F/rSNP/74w47pxx9/tP+fkdrVrFnTtGvXjpgSAAAAAACI2+7du83t
t99ujjvuOFOkSBEzaNAg880339j40YoVK8xzzz1nrrzySnP00Uebp556yvb5
4YcfzEknnWQ6d+6c0rE+88wzNs71ySefBOq3efNmM3r0aJM3b17bXzGVTZs2
xTUG7Vvb8PPQec2obdu2vvsvXLgw6nmI9nj66acjnov8+fObO++8M67jBwAA
AAAAuZtyWxRbUR6S4i3KnYlkxowZNh4zZswYU7ZsWRuzeOGFF1I21jVr1tiY
V8uWLePexoQJE9x4i+bL/fXXX4G3odygVatWmcWLF5vu3buHxHCOOuooM3Dg
QPPhhx+aZcuWhT2fit8tX77czJ8/3557b//y5cubZ5991ixatMisX78+4hiU
C6X9P/zww6ZQoUJuf21v0qRJZsmSJVHzjx566CH7mmsMAAAAAAAAfv3yyy+m
SpUq5sgjjzSTJ0/21WfKlCkh8Q/Nq0qFQ4cOmTp16th5eJrnlRmKIznjV+wl
MzRHzXs+NKcuiEcffTSk/0cffRR4DE888YTtG2QOm+bn6TyUKlXK7NixI/A+
AQAAAABA7qM4SMWKFW0cQnlJfqkmz8knn2z7nXbaaUkcYSit5aZ93nPPPZne
lnJznPjNRRddlOntObWm9Ag6/0/5Xd540pdffhl4//fee69p2rRp4HpI7777
rt3nzTffHHifAAAAAAAg9xk5cqSNJaheUtA5X6rNrb4dOnRI0uhCqca0xlms
WDFbTzqzVDdJc72ceuOqJ5QZJUuWdONBzZs3D9TXiek4j7fffjtQf9XjVnwv
3pyt2rVr2zl6a9eujas/AAAAAADIHbTmmFNzZ/DgwYH7OzWInn/++cQPLgxn
Tli42tbxOv/8890YzvDhwzO1rapVq7rbuuCCCwL1nTVrVkg8ye+8Q0ebNm3M
gAEDAvXxUv0l7bdLly5xbwMAAAAAAOR8ilk48QvlxwT10ksv2b5azz7ZNIfL
qf0dT22hSLT2mXMOzjrrrExtq0GDBu62zjjjDN/9VNc7Yz1uzevz66uvvjKl
S5e2+VvxUm6WcrS0dt+2bdvi3g4AAAAAAMjZVOPHiV/Es76XaliXKVMmCSM7
3Mcff2zHqXyqgwcPJmy7qkGtteqc8/Ddd9/Fva0WLVq42ylatKjvfs8995yp
W7duSDxJtZD8UCxKfROxvl69evXsvpV3BgAAAAAAEM6ll17qxi+GDBkSuL/q
d2ueVSr06dPHjjMZ+2vWrJl7Hvr16xf3drp16+ZuR7WI/Ni7d6/NLVq+fLnt
4/T3WxtbOWJa705xpcx6/PHH7b4bN26c6W0BAAAAAICc6YorrnDjFyVKlDBb
tmwJ1H/FihVm5cqVSRpdqPLly9txzpgxI+HbfuWVV9zzUKpUqcDrozm05pw3
x2j37t0x+9x9992mZ8+e9t/KaXL6XnfddTH7am0+5YdpvlsiLF261O5bc94S
Ue8cAAAAAADkPHfddVdI/KNKlSrm66+/TvewDrNu3Tp3jFqTLdH+/vtvc+KJ
J7r7+OCDD+LajlPT2nlo3NGsX7/exvE0504qV67s9m3YsGHM/Q0aNMi0bds2
rrGGo/X9nPXuZs+enbDtAgAAAACAnENzrLzxD2+OTrt27czUqVPNL7/8ku5h
mrfeesudQ3bo0KGk7KNDhw7u8evf8dA6d97zGCs2d+2115px48a5/1+/fn23
r9aKi+bHH380RYoUMT///HNcY43klFNOsfsfNWpUQrcLAAAAAAByDm8cJdJD
a5WpPvTatWvTMsZhw4bZcWh9t2SZN2+ee7zKVVLOUlCzZs0KOW/R1szTGnVa
T85bW9xbx6lkyZJR99W6dWszdOjQwGOMxamp1bFjx4RvGwAAAAAA5AwHDhww
TZs2jRlT8ubuJHJ9NT80p0v7vvjii5O2D9VM0twz5zhVUymozz//PORcvfji
ixH3Va1aNRvD8lIMx+mrGkaRfPHFF+a0006LK+YVS48ePez+tdYbAAAAAABA
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
Nk6l+yO1r169ulm9enXCz0l2pToxZcqUMfny5bP3u8uWLbOPKVOmmCZNmpg8
efLY1y3c2uOJwJwt//bv35/uIeR4Z599tnv9GTt2rO9+ixcvtp+X6667ztx4
4412npji2JrbqfreWldNNYuU66fPV7ppDIrZ67parVo1+1DMWDFlXTN5rwHI
Kt566y17TdbfKcoDCsobT1J/xc07dOhgr8e6bt93333m66+/zvQ4da3XOLVd
AAAQWax4ku5FVHtDNZf1ezxWPElrta5du9bmLzn5wk486cknn7Q1ZL3fozt0
76N2mr/x/fffm4MHD9p7uUGDBtn1NrxUd0ZzutS+fPny9v/xf5TLpXOvNa6u
v/56+zppHTflWoQ770BONXLkSPf6o+tcbhDP/RkApMqwYcPsNblChQpx9Xfi
SZMnT7bzeJWD+dprr5kFCxaYOXPmmKuvvtqtzZSZ7xuVi6/t6PtMAAAQWZD6
SZpHHiue5NWlSxe3vebLnX/++Wbv3r1h2+o7dqetvg/q16+fufPOOyNuW2uL
Oe2VswQgGMWKNXdr8ODBSX/o85rqtZe3bNlijjzySPc6oTg3ACB9nLyfRo0a
xdVf8STVyVY8auXKlWHb3HrrrXYfxYoVi2tOnSiXXtvQ7xByrwEAiCxIPEl5
SkHiSffcc4/bXr/7Y+Uga66Ws8a38o4y5iV5aU6Ks+3evXvHHAuAUCtWrAiJ
tyT7kY517b05lVpTCACQPjVr1rTXY9XPjEfDhg3tnN5oa8qqVoKzH9W8Uz25
oFRzzvndQf05AAAiS1U8Sb/TY1HustNedbyjWbVqVUg+E4DgND9VsdlkP7Qu
muawpprmejrXCcWoAQDpo+8LdT3WvLd4qOZmpLwkL61n6Vz727dvH3g/qg/g
9FeuEgAACC9V8STNeYnlzDPPdNsvWbIkalvNXXHaah4dAHg9/PDDJn/+/Lbu
q3OtUI0NAEB6ONfiMWPGJHU/GzZscPelupyRai1EovWGnf6KTQEAgPBSFU/S
utuxeONJW7dujdo2u8STUjWXiEfueSC2UaNG2Wua6rQ69Vn16NmzZ7qHBgC5
ktZOca7F48ePT+q+/vnnn5D53KrfHYR3rFpLBgAAhJeqeNLzzz8fs703nhRr
LTLiSTxy6wPRjRgxwp4nZz6FU1dVjyJFiqRl3h0A5HZ//fWXey3WWhDJ5qwD
rMeVV14ZqK9qMDl9k51LBQBAdkY8CUBO4axF3aFDB/dnWpvnxBNPdK8X77zz
ThpHCAC5k3KGnOtwPDk///77b6DvA8qVK+fu76yzzgq0L+9Yk51LBQBAdkY8
CUBO8OCDD9rrwUUXXWTvBbw6duzoXi9at26dphECQO4Wb87Pxx9/bEqWLGny
5MljHnjgAV99tK6ws79TTz010P7+/PNPty/1kwAAiIx4EpB7qT71G2+8kfTH
W2+9ZbZv35604xgyZIi9Fuj+Idy1Y/78+e71Ip7arACAzDv55JPtdXjgwIGB
+tWqVStk3nesNVvktNNOc9vr78sgVMPT6as6fAAAIDziSUDutGzZspTWfWra
tGlSjkNrR2r7hQoVMqtXrw7bRvMkvLU0gtZmBQBkXv369e01uH379oH6lS1b
NuT3yaJFi6K2V/0j79qeN9xwQ6D9ffnll27f77//PlBfAAByE+JJQO6kGMvc
uXPNlClTkv548cUXzZYtWxJ+DPfff7+9BuTNm9d89NFHUdv269fPvWZcdtll
CR8LACC6zp0722twgwYNAvU777zz3L9V77vvvpjtf/rpp5D406RJkwLtb+rU
qbbfUUcdddj8aQAA8P8RTwKQHQ0aNMi9Bjz33HMx2y9fvtxtrxocms+A7OeL
L76wddc///zzdA8FQEAPP/ywvQYr3yiIxx9/3LRq1crs37/fV3vvHOdixYrZ
dRmCeOihh2zfSpUqBeoHAEBuQzwJQHYzYMAA9/N/1113+e5Xr149t98jjzyS
xBEiGebMmePOYdF/33333XQPCUAAWl/TySlVjqxf+pvw+OOP91U3SRR7cq71
w4cPDzzOLl262L7NmzcP3BcAgNykfPny7u/c3bt3R237zTffuG2bNWsWc9s3
33yz2/7RRx+N2b5EiRJu+3Xr1kVtu3DhQrdt7dq1Y24bWcuqVavMrbfemu5h
JMzQoUPJl0iRe++91/3sX3vttbZOhl+qm+T0rVGjRhJHiWTQvZ13DsvVV1+d
7iEBCODXX3+131/q86safkFofnPVqlXNzp07o7b78MMPzZFHHmn3ceONN5pD
hw4FHqfWCVX/ESNGBO4LAEBOpnngmheueiZt27YN+du8YcOGdo65nv/ll19s
+zVr1tj/f/LJJ+39l9P26KOPNn369LH3Z4rtOPT9sdorZ+DEE09022udV63n
reec+26tx6r/V32V66+/PmQsdevWNU8//bR9ftOmTSFjeeKJJ0z16tVD2nfq
1Mk8++yz9vl4/nZA6vzwww82dvjKK6+keygJ8/XXX9uc+vfffz/dQ8nRRo4c
6X7mtd6PriFB/PXXX6ZAgQLUWc2m9DvHe93X/wPIXvT3Xbyxmo4dO5py5cqZ
pUuXhn1e64k6a8gpjz6evwf37Nlj86e0jRUrVgTuDwBATrZr1y5TsGBBG985
/fTT7dzws846y1SuXNn+jtYaSFonSXPP5ZlnnjGFCxc2ZcqUsblMZ5xxhp2X
VrFiRbsWq+6hvX/TX3jhhfZnek5rd6ut+ujfp556qilatKj9e0BULzHaWEqX
Lm3/Lnj11Vdt+wkTJtix6Od6Xu2csWguvmIU2l7Qe8ycQt/1ad30q666ytSs
WdPUqVPHtGvXzkycOPGwc6JcNOWYpTr2pr/N9P4YN25cSvebCvpO9KSTTiKm
lER6b+tvfF2n4q1/pFqu3hh6kPwmpJe+D1G+QZEiRex6TdTJBbIfzT/T9Vd/
LwZ18OBB07dvXzv3TTlE+q7z9ddft38fNmnSxP39oH3E+/fN9OnT7Xb0dysA
AEBOp/q0zn22csFVq1Z5Zvr7qlevXjbOpvsvfW8n+hurUaNGNhaXSsozUyyp
d+/eEdvMmjXLnHLKKTZ2qdjiOeecY9d1UWxMOWkas2KJaqNctIz0faTiloox
nn322XYupPorl0X/r5ilYo966DvIcMaMGWO3r78lq1SpYmNz2obGotioYqXK
RwpHsbtjjjnGfPXVV/GdJESlGLTqpG7evDnubahmh/Iox44da+PlQWp4AAAy
Z+XKle7aabHqLETy+++/2/lvynVyft83btzYfv+omFNmKGat8d15552Z2g4A
AEBW56yVonjLvHnzwrbR/bLunfW322uvvWZ69uxp+3Tv3j1l49QYnNy1SHEc
2bhxoxk/frytlay4jXdui2ouNG3a1M6b1JxHZ06m1+zZs23uk3Lm8ufPH9Jf
MTUds9aJ0fePkeIIixYtMqNGjTL169cP6a95UuqveZiRcuCU66K/b5Vvt3fv
3vhOFgAAOViDBg3s79UZM2akeyghFIvS73rVX9qwYUO6hwMAAJA0DzzwgP17
7JJLLvE1x0/5SsqdceIjiqmkilP3Rvk7fn322Wch8RzVYQ6iffv2If0VJwpK
9Z7VV997/vHHH776fPvtt/ZvUc01BAAAobQ2o7OmQlYyd+5cO66WLVumeygA
AABJ49SAOf/8883ff//tu5/meTnxlXD5Pcmg+tta27tatWqB5hatXbs2JB6k
vKIg+vfvH9I/nnwhrVF4+eWXmwMHDgTup32+/fbbgfcJAEBOp3nkyjtesmRJ
uodiKb/43HPPtd8HsVYDAADIqVR321lv98svvwzUd8CAAbaf6gilSosWLew+
P/roo0D9tCawNx40cODAQP29a4Hp4awT6NePP/5o68HHU6tHtR20BqLqL1Gf
BwCAUPr7RbEb1X/MCl566SX7t4K+DwIAAMiprr76ajc3KSitQaa+3bp1S8LI
Drd8+XIb+1JN66D0XWGePHnceFCPHj0C9VcdpszMd2vVqpWt9xkv1XrSfl95
5ZW4twEAQE6leezxfDeWaH/99Ze7jrHfue0AAADZzbp169z4yIgRIwL3V20f
9Q23NloydOrUye5vyJAhcfVXfpBzvNdff73vfsoJ0vw6bzzp/fff993/888/
t2u86W/MeDnfdWqNOQAAEEr1r/U7Uuu5Zub3bWbpbxR9f7VgwYK0jQEAgERT
vUKtFXXxxRfbfGDlpVxxxRWmYcOG9ucZ6ynv27fPrqGlh9pdc801ttahagkr
l6Vr165h93PHHXfYeeyXXnqpzalo0qSJueiii8zdd9+disNEAFrf3ImPPPnk
k4H7ax179dW668mm7/iOPfZYu7+lS5fGtQ2tA+wcr+qO+6Xa46VKlQqJJ738
8su++iovqlatWmbatGlxjdmhek1O/XNqMQAAcLj169eb4sWLpyxvOiPVbzru
uOPMmDFj0rJ/AACSZceOHTanol+/fiFrnut3ntag2LVrV0h75WR88skn9j5Y
6506fW6//XYza9Yss2rVqrD7UT0e1TouVKiQba+5SS+++GLgejNIPr2Wzut6
6623Bu4/b948U65cuSSM7HBvvPGGHedpp50W9zbq1avnHm/16tV99dm9e7cp
WbKkef3110PiSePGjfPV//nnnzf169ePe8xeiulq3w899FBCtgcAQE6jv09L
lCgR1/dkmbFx40a738ceeyyl+wUAIJVUF9i5J1b+kB/KN3L6+F2bSvkfbdq0
Mf/8809mhoskuu2229zXtWjRombbtm2B+n/33Xc2xykVOnToEHfcy6FcOed4
VdvAj759+9rz9Ntvv4XEkx544IGYfZXjp1jUN998E/eYvZ599lm77zp16iRk
ewAA5ESKKSmvWHPFU+HXX3+1OdCPPvpoSvYHAEC6aH651sDQfek555zjq49T
C1iPDRs2xGyvWsVnnHFGWuevIzb93eONkWhtW60llhUpl05jVJ5QvNq3b+8e
a/78+WO2X7NmjY0HKXdPnxvvuerdu3fM/vfcc4+NgyXKF198YfetmuSKbwEA
gPB+/vlnM2fOnJTsS2u3fvDBBynZFwAA6aZ8XCcnJZYVK1aYvHnzuvfRn376
adT2mien/In58+cnarhIEtU9cmKL3jhLs2bNzNixY83q1avTPURry5Yt7vhU
myBeffr0CTnWWPFOxVG1rpvjxBNPdPveeOONUfsq710xsF9++SXu8Wa0fft2
d//83QoAAAAASDWtf+HkOcSav6Z63aq/7dzHxqor/PTTT5vWrVsncri+NW/e
3NZugn+ak+iNsWR8lC5d2rRt29a8+uqrZv/+/WkZo+p+OeNRPaN4qe6Q99gU
p4q2z7PPPtscOnTI/VnZsmXdvpdffnnUfV133XVm+PDhcY81Eqcu2RNPPJHw
bQMAAAAAEI1T1zfW/DXNO9dacFoP3mk/atSoiO1Vf0f1krdu3ZqMYcfUsmVL
GwOAf8rRUT5ZtJiS81AsQ+vgas2yVFKMUPsvWLBgprbz1FNPhRyP6j+FoxiS
1hv+8MMPQ36uddqcvvp3JKpjf/rppycl/qa1GLX/nj17JnzbAAAAAABEo9ov
zn3xZ599FraN8kAUG9Laq7o/9rMOmGrFpDM/aMaMGVGPKRbd/0+aNMl06tTJ
3HDDDbYOs9a+81tTXHP93n33XdOrVy9z0003ma5du9p15b05LlmRctRUX/qE
E07wFVdKdSzj5ptvDlTvKxLlWHmPI9KcTOX+KOaaUaNGjdy+ylUKR+8BrR2n
9eiSoV27dnb/qncPAAAAAEAqKcfIuS9WvCMcxZwGDx5s/62YktO+RYsWYdsr
hlOjRo20xk4UD9L69VdccUXgvlOmTDHFixe3x6h6UZoL6BxzgQIFzL333mv+
/vvviP21Lu0pp5xijjvuOFv3WXk8On8NGjSwuSqKM2V1Oj7V5VEdadXmzpMn
T8SYUirrY1188cV2n5rPmBkas/cYFF/KaOfOnXZNmHB5e4oxOn1VSykcrXen
8SbL3Xff7c5DBAAAAAAglVQDybkvHj169GHPL1682FSuXNmdr6P/Ou3DrVWu
ta80z+zLL79M+thjUd0bxYJGjhzpu8/06dNtHWrVa167dq39mXJ2dJ6UE+Mc
u9asU31yL50b5WUdffTRdr20PXv2HLZ9nRfFuT7//PPMHVyKKUftrbfesnlW
Get2q6ZWqjjz8RTPyQzNb/Meg7fWtkM5aYqnhaO8M2//jHlreu21HtyyZcsy
Nc5oBg4c6MY4AQAAAABIJa3R5twT33777SHPqTaO7t/fe++9kJ8XLlzYtlfu
RkaPPPKI6dy5c1LHHMRdd91lc2uUKxKL1oQ/6aSTbBwqHMUMtJaXc76OP/54
8+2339rntGZ7vXr17LmJFStaunSpnSO1b9++4AeUBaiWkGIlznk46qijzN69
e1Oyb+W9aZ+a65UZ3nXi9Bg6dGjI8ytXrrQ5ZpFeo/vvvz+k/6+//hry/J13
3mluueWWTI0xlgcffNBdhw8AAAAAgFTSXB7nnljrUHlNnDgx7Jw21YRRe8Vp
vHPatOa86iz9/vvvSR+3XxrfHXfcYcerNd+jrdmu2JPiYdEoxuZsTw/Ni9Mc
wAsuuMDmHTk5TbHcd9995vnnnw9yKFmK6rN74yk//PBDSvZbrVo1uz/lgWWG
ao97x58xlnrllVeayZMnR+w/ZsyYiMe/bt06U6xYMbN9+/ZMjTGWESNG2H0r
Hw4AAAAAgFTSXC6nPpDWi3LoXlj5GeHWUW/SpEnYdda1pppiUEEp/+m8886z
dXqS9Tj22GPtePPly2fjZsoRyqh8+fK+16Dv16+few5Uu1o5Ok6ukh+KO6W7
jvKcOXNsXCgeytVS3SDnHGSc+5csNWvWtPtr06ZNprd1zDHHuONv27at+3PV
t9J7JtradRnjaapT71Btp8ceeyzT44tFOVVOnhwAAAAAAKlWtGjRw+r6al0z
1eoOx1ljS48FCxbYn2ntM8Wj4lk/fuHChXYNtFatWiXlcf3117vxJK0z379/
f7Nx48aQMfz55582huCX1u7yxtWqVq1qa0cFUaVKlUDtE001iPzMA4xE+VhO
zXLl+6SC5hRqn3pdM0vzNZ3Xr3HjxvZneg1VG8t5X0eiWJw3nuSs4aY636o3
5ncdwMwYNGiQ3XehQoWSvi8AAAAAADJycj6UY6M4yRdffGFjHZHuiZ28CD1m
zJhh61DrHlq1u7Maje3aa6+1eUkDBgyImH8UNJ4kqrnszdHp0aNHoP7pjCcp
7lekSBEbF4mXswZe7dq1A/dV3Map8R6Ecn+0z4YNGwbum5HqxmesLf/444/b
2GYsioF640mKy2lupeKKqVq/T+suat8VK1ZMyf4AAAAAAPC6+uqr3fvizZs3
2/pIH3/8ccT2qvvjtNe8nsGDB9t726xINZFVrzhSjW0vxcQUV/JrwoQJdq6g
cp6c8/HEE0/46vv111/bGj3potifxvvZZ5/F1X/Tpk3uOm/h1kYLRzEs5fEo
flmpUiVTq1Ytuzbc8uXLbT3z4cOHR61vJVpvTfs8/fTT4xq3l2JSzuumXCvV
/VKOnuqAxaIaSd54kmoZPf300yl9TZ38OMXYAAAAAABItZ49e7r3xVq/LFZ+
xrx589z211xzjV2rTLk6Wc3UqVNtvGfmzJm+2qse9wsvvOCrrfJ6jjvuOFub
W3WT9G+dD+1v9OjRMfvrPL/yyiu+9pUMI0eOdPPL4qE5g+pfokQJX3lGP/74
o41Tam37Z5991v35l19+aedbnnXWWXZ7msMVzZQpU9w5dsqlywzV0XLexxqX
8suGDBniq++uXbtC4kldu3a1a96tWrUqU2MKwjlnirEBAAAAAJBqygtx7otP
Oumkw9Y+z0i1l7330vHWdE4mzadSrKNz586++6xZs8bW5I6Vn/LUU0/Zte26
dOnizgl8++23bYzDOSd9+/aNWEtKuSzKg4lnvleiXHbZZXHN0ZM//vjD1uxR
f61zFotyjzQnS3MOlyxZctjzzrr3erz55ptRt+WdZ+Ynjygabx0wxQGVo/T3
33/76qvXVu8Bp7/mimZcIy7ZnBjmiy++mNL9AgAAAAAguh917ovHjh0bs/2+
ffvc9omoY5MMyrvR+DSXKmg/rUm/aNGiw57THKdu3brZ2EG486QazloTzzk3
WrNO29P5Ur1q1WrW3CTNjws6rkRSrM2JRahOuY7LL8XPNKdLfdu3bx+zvWJm
Op9qP3DgwLBtnNrWiuns2LEj6vb27t3rnl/V+coMZ+6c8wiaL6b6U07fwoUL
25ylVNm2bZu77yDrCgIAAAAAkCgfffSRvS+tUaOGrSnsh+pQKx9n5cqVSR5d
fJR/c8EFF8TVV/lWZcqUMZdeeqmd16U5bfq34h3169c3H374YcS+infceuut
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
BiRs24mkWGrG3Itdu3b56qu8K8VWU2Hu3LmHjXPz5s0p2Xe6KW+MeFJiKBcv
3nNYpUqVbBlP0vceixYtSvcwAAAAgBxr1qxZmYoniebjFCxY0BQrViwJI0Qk
EydONE2bNo2rb8OGDZMST2rTpo273SOOOMK8+eabCdt2Iq1bt86ccMIJ7ljL
lStn5+r50aJFC/PEE08keYT/Z8uWLaZQoULuOMuUKWP279+fkn2n2+DBg4kn
Jcj48eNt/aN4XHDBBdkyntSxY0czbNiwdA8DAAAAyLESEU+SkSNHJjw2gehU
ryqrxZMU61CtnwsvvNDW883KlL9wySWXmObNm9v5b35pzlmq4kmycOFCc9ll
l5kmTZqYTZs2pWy/6UY8KXH69OmT6+JJugYRTwIAAACSJ1HxJNVbUn/Nq0Bq
KCaU1eJJOZ3O1VFHHZXSeFJuRTwpcRQTyk3xJK1Rd/zxxxNPAgAAAJIoUfEk
UX1j7vtSQ3lAJ554IvGkFPv444/tOSOelHzEkxLj77//Nscdd1yuiictWbLE
jpd4EgAAAJA8iYwntW7d2jz11FMJHB0iefzxx+3rRTwpta688kriSSlCPCkx
tBanzmFuiifpdxHxJAAAACC5gsaTVMtFdWfCueeee8xdd92VjGHCY9++faZI
kSLEk1JM73vnnBFPSj7iSZm3Z88ec/LJJ+eqeJJyk7QWAPEkAAAAILmCxpMe
eOAB07t377DPrV271nz77bchP9Nci23btoX8TLUtVP/4t99+CzTWAwcOmK++
+spMmzbNPvRv/SweBw8eNL/88osdS0b6+YYNG8wff/zha0w//fSTfaQiLqOx
nX/++e7rlYx40qFDh+zro3XpFbuKh9ZK27Fjh69zKHrvvPXWW+all14yb7zx
Rkjd6V9//TWp637rNdR5jeazzz4zxYsXT2s8SeP0Wzdc72/Fv2bMmGFeeOEF
O0/P+1rqeBRrSLbt27fbWJBeV41l9erVvvtmJp6kz+PMmTPNiy++aN5+++1A
9da9NH5dI6dOnWrfl7ouZMbu3bvNrl27Qn6muav6rO3duzdT287o559/Nued
d557DpMRT9K1QvvROoTxXiscK1asMK+++qq9ts+ePTuu86HfP6eccoo7XuJJ
AAAAQPIEjSd17tw5YjxJ97uXX365qVmzpv2bPn/+/HabWg/LoXuFqlWrmjPO
OMMULFjQ1K1b16xZsybqPnVv2LNnT3PssceaevXqmW7dutk1xHSvpJ/pOd3P
RKO1o88991xz+umn27pDzvE693Z//vmnGTBggDnzzDPt+M466yyTJ08eU7Fi
RRs7yHgftWrVKjuOsmXLmurVq9t13NW+WbNmZu7cuVHHEo/58+ebfv36maJF
i4a8XiVKlDDXXnvtYY+HHnoo6vbCxZMUU+nfv78pX768fc0qVKhgn9f95Msv
vxw29ubQ/bba6XVV7pTOhfo+99xzEfso5jR27Fj7uihGNmjQIPPII4+YIUOG
2HtfnfvJkyfb1+y6666L78SFoW3XqlXLnHbaabZmr8ZZoECBw9opJqM4SJs2
bUzevHlDzrte83Dn/Z133knYOG+88UZTu3Zt+x474YQT7H51XqNRHO6WW26x
5+6mm24yI0aMsPOd7r33XvszzQPS/yt/IxnvU8dHH31kLrroIjtmnWfFPfWe
K1SokCldurR58MEHY+a6xBNP0vnXa6ua6Y0bN7bXKl2TdN603pfiaH7HX79+
ffu5bteund3OFVdcYbej49L7MlYs++uvv7bHrOuJPqf58uWzx6J1GUXXHMXn
Tz31VHP22WebY445xu5LP8+MDz74wK7n5uQwOo+SJUuGfc8OHz486vbCxZMU
Q9L1qFy5cvZaoWuGnte5eeWVV+xn2w+10/tR/c855xxz88032+u5rr/6/aHz
4ec10++VDh062HPoPWZtJ9wxK7YJAAAAIHOCxpMUK4oUT9K9hu69W7Zs6d7/
euNJ48ePt7EDfQ+9YMEC9x5dMYhI9x9jxowxRx99tL1/V45FRvqZ7sV0r6bY
RCS6v9K9tO6pvMereNK6devsPejAgQND8lSU/+S09+YBffrpp/Y8eO8pNX4d
XyLqUIWjGIvurfS46qqr3P3o3tz5ufehuEw0GeNJiunpHGjc3rwVvT8Us1M7
xc8ief311238Q6+T9/xGiicpr6F9+/b2Xnr58uVh2+g9UqlSJbsd3QMmSpcu
Xex7VDWKnXGGiyfpvHjPqffY6tSpE/a8v//++wkbZ69evUyrVq1C4p/R4knK
/dH7Qec1XKxDP9P7wpkLlIw5ZMq1UUxV21ccTO+fjHHIb775xn6eFGfZuXNn
xG0FiSdpv05tK72PM+YjLV261BQrVsw+P2rUqKjbUixWsVTF2zJel9avX+++
Jxs0aBB1/IsXL7YxPY3LOedOPEnbVVyzU6dO9vOmPBrn+VtvvTXq+GK5//77
3fejc070UIw/3HtWtdiiyRhPUixd51j9vDlEyi/UtVrtFBOKRbmLl156qX2/
6LxmpGuKsz0dUzTe49HvGGe8ilGFO2blrgEAAAD/r72zCbHpjeN4KYkFOykl
S8VGysJKCoUaC3lZWCil2UgsRmxECrOgRF6Tl5ikKLKRl4WxJXlLLFjIgij2
99/n1O/8nzlznpdz5zkzd8b3U2fj/s459z73nDOez/39fo8YG018Em6HGJ9P
cqGWbc6cOaVPwsGQH4BHgCNHjozyOlUuXrxYvMb8IFSbw75Lly4tYtknBHMY
/JOdl3knbsg3X2XuabHnzp0rfvtnf199lNWi4bdiOVPdQg+rnPVu1JLh9F6/
fl0bS06axfI9hmCezBw65pNwf7we8y/UveT2SQbfD3ksPp9Uxb1mx7PejXvJ
nF7IJy1ZsqTI5QrlkUFfX18rPonzkkfGsenZ46tto4YMN8nY4/Z8pPok97yh
ZwXeEq/DGPquO1zXtGnTCrfsc0Xk5ljuD/mVsfEG/IXrk8hLOnjwYPm6W8NK
TlouXrx4kbXejd5EixYt6rx586Y2FpdpsZw7BPmgjCP5TL4xpP7NjhfLozLs
75Tq3YQQQgghhGiXqk9avXp18f982+ixTQ0CNSsWk+KTwHp34JPI7cCDGDgM
5vC8Tr5NFeoRmNex8Xt4DFwIc0Xih4aGgrHUytlnYT574cIFbyxzSnMOzB2Z
s7u9fapQH2XHjv3u3y25fRI1Kr4e60BPEovt7++PHps1/mI+yZye+cUQ5Bi0
4ZPAavp62SeB+VKfT6K2itfJd4mBM2nDJ3Ft2Pg8evTIG0ddksVxz/rqxlJ9
EnlcFofvDUG9LHHU3dX19jIvZV7Hlze5b9++Mo57PgbnsnhyOMnLc+vazpw5
U4wFW87nRm6fxLNieHjYG0tOYcrfCfKczJGycW/5oKaOGOrfqr346pBPEkII
IYQQYnyo+iT6hVDLYBtzedclNfFJ5CMRT11RnTMiPwSPUf1tmrmX1fg08SVW
B0ZeVKgHCf1l7LNQA0OtTAjmnhZPzVwIen00Haem5PZJuIoQzOEsds2aNdFj
4+dCPonv21735Tm40F+lLZ9ErsVk8EnciyGfRO4cr9PzJwV6KeX0Sa634HkR
YtWqVSOeJ757NcUnkQNlMeRmxfr2nDx5soynv3YV6/lkW13eJFDL5vqhGKxL
YPE8D3EeVV69elVsOcntk2K5U+R7Wiz9q3wwru44M+4+yBWzuDt37kTfr3yS
EEIIIYQQ40NqvRvrb23evLkrn8Q2ODiY/J4uXbpU7kc/4VTc+T7H8OH6JHIb
Yrg9l2L1WZb7wbZx48bk996E3D7p9OnTwVh6pFgsdXExYj4JrG8uuWuxukCu
UfJB2mCq+CTWcLP3Rq+ZWK9rvGjONfPI87Pz79mzJxhLXzLrrxaa76f4pIGB
gaQcF4Pe/tbLiDypKublYvcWNXsW56434MP1SWz0cxoPcvskcg9DkM9psfTH
CuH2drp8+bI3zn2exPoogXySEEIIIYQQ40OT/kn0Jyb3oBufFOul4eL2U43V
rrmwxljK7+iuT6KndgzXJ4X674LrkzZs2JD83puQ2ydRoxLC9UnUh8VI8UnU
ZVkM9YT0ncbV+fJB2mKq+KSfP3+W/crYuGZZQw1vwTp1bUI+odt/P1Q7aZAT
+Pv372BMzCdRK8m6aRZD/+YUqDUjnn7hdTx//rxz9+7dYN4iPZrsvOR6xXB9
Et9TSs+lHOT2STzfQrg+KeaeqXMkR4zxDnH16tXymLY2Xgj5JCGEEEIIIcaH
puu7kdfQjU+KeRiDPCj3/ZDLkIrbu4PN1w/Y9Ul1NS9VXJ8U6/czGX3S27dv
g7Ft+KQvX76U/bOqG3VLrBXHtRnLsxkrU8UnAXWBdeNJLhh+9cCBA533799n
f2/UILnn+/79e5bjxnyS9YyyjZ5r9DaLbVxfxFPHmgpOjucJ1yS95N0arKY+
KWe/7Ri5fZLvmWo08Uk+/vz5U+TO3bx5s6x1lU8SQgghhBCi92jqk5hHdeOT
mE+l8OTJkxHvx7fmWB3Euvs+ffq0Ns71SeQhxHB9UiyvYDL6pHfv3gVj2/BJ
wHpbtva6b5s7d27n/v37jT9fKlPJJwH37/Tp04NjyhrtrBmXC+ol3ePjA3IQ
80m29p9t9Hqjf1TqxjqEIXBPrEmAF2FM6bVGL//Dhw8X49ytT+K5OF7k9kkf
P34Mxnbrk1g3cvv27Z358+cX+7J+AzWux48f7+zYsUM+SQghhBBCiB6kqU/i
N+NYDw3D9Um+NZyquOtqj9Un8dnqkE/qDZ8EzLOpUyIfyZevxJp9rCneBlPN
JwEehLwO1jIjvm5MWTOLGrkcnDhxYsSxY/3tU4n5JK4b97y5cq/oP49r4rpj
/PAZrFfn5iaOpd5t5cqVWd5nCr3uk6h1W7ZsWRE/b9684veK6veoejchhBBC
CCF6k6Y+qQnd+KTHjx+PeD9Nega769qzketUx7/gk+g7HOpP0ys+yYW1uah3
vH37dvEdzZgxY0SeUqzfTjfk9knUA7XRr6iJT3Kh5xl1oGfPni38knt/pPSi
TwG/7B43l6eK+ST6NLnnbVIb64N12xYsWFAcjzrBe/fu1cZNJZ9EP/zQvdWW
T+KatFw67sOvX7/WxrXhk3jOpP5NEkIIIYQQQtTTaz7px48fI96Pbz5XB7Ep
89p/wSdt2rQpuGbSRPokvBHfQaw3EvPcbdu2lcc6dOhQ9NxNye2T6EuNy8tN
zCfhDRj3GA8fPiz7UdMH3TeHbwJ91N377vPnz2M+JsR8Ek7H1mpju3HjxpjO
x/PC+ntzXF+9rJ17qvgk1qHE2fhowye5tYo8U3ju+2jDJ1FXF3vuCSGEEEII
IcL0mk8C1t+2/U6dOpW8H31ybT/6b/iQT5pYn8S1wGspa/7hnKwehs+Um6ni
k+hhtHjx4qRjDQ8PF7VcHA8XNFa4J8xRsaXWw8aI+SRYsWJF176xei/v3r27
PNbatWuD+5LPU+eTuFd27tw5Kl4+6X/wyU2uF9bgrPNJz549K3KcqsgnCSGE
EEIIMT70ok+6du1auV9/f3/yfszjbD+O4WOy+6SXL19GfRJzR+ZhPnrBJ9Hr
OIXr168X8evXr0+Kb0ITn3Ts2LGoT5o1a1a29c1cUnwSOTWsm5eCOQL6leXg
6NGjXfmS/fv3dwYHB2tfS/FJbg+lvr6+5PNSl7hw4cIR/2Z1bmxDQ0PB/Rnn
Op9E7yXqNKtMlE9yn0c+n8QzJJTbldsnUVNoMeTIxfq3u37I9Uk8Z7Zs2TIq
HscU80n0aoqtVSeEEEIIIYQI04s+if4zzPVsnv/379/oPjgPckPYh9++Qz1s
JrtPot+ynYP8jDr4d98cHHrBJzGni9W8gdUx7t27NxrblCY+6fz58+XnwnVU
YZzoudNGX5YUn8TrAwMDScdbt25dEf/hw4cs7w+HxmfnmOQ+ffv2LboP40Rf
LPog1ZHik7gfbY1Azpv6ebiWdu3aNeLfcBt2Pl/vNePKlSten8Q4VJkon/Tp
06fyvL515ZYvX170G/eR2yc9ePCgjJk9e3b0M+AJfT5p69ato+Jv3bpVxrNG
XBWeOTNnzuz8+vUrem4hhBBCCDF5+A8ea3UG
    "], {{0, 640.}, {586., 0}}, {0, 255},
    
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{294.7968749999995, Automatic},
  ImageSizeRaw->{586., 640.},
  PlotRange->{{0, 586.}, {0, 640.}}]], "Input",ExpressionUUID->"a54277dd-a25c-\
4746-ac0e-3bf6c95db1b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"\[Lambda]", 
   FractionBox[
    RowBox[{
     FractionBox["1", 
      RowBox[{"\[Lambda]", " ", "W"}]], 
     RowBox[{"(", 
      FractionBox["1", 
       RowBox[{"-", "2"}]], ")"}], 
     RowBox[{"CoupledLogarithm", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["1", 
          RowBox[{"\[Lambda]", " ", "W"}]], ")"}], 
        RowBox[{"-", "2"}]], ",", "\[Kappa]", ",", "1"}], "]"}]}], 
    RowBox[{
     FractionBox["1", 
      RowBox[{" ", "W"}]], 
     RowBox[{"(", 
      FractionBox["1", 
       RowBox[{"-", "2"}]], ")"}], 
     RowBox[{"CoupledLogarithm", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["1", 
          RowBox[{" ", "W"}]], ")"}], 
        RowBox[{"-", "2"}]], ",", "\[Kappa]", ",", "1"}], "]"}]}]]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.825672103149487*^9, 3.8256721835896883`*^9}, {
   3.825672233803774*^9, 3.825672245605587*^9}, {3.82567228428493*^9, 
   3.825672292602084*^9}, 3.825672344275228*^9, {3.825672375652809*^9, 
   3.8256724354500523`*^9}, {3.825672618854548*^9, 3.825672626858705*^9}, {
   3.825672669235569*^9, 3.825672670428431*^9}, 3.825672742089169*^9, {
   3.825674535969716*^9, 3.825674537722506*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"6ded5688-0dfd-4f27-9cdc-7733b222a2ed"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"W", " ", "\[Lambda]"}], ")"}], 
    FractionBox[
     RowBox[{"2", " ", "\[Kappa]"}], 
     RowBox[{"1", "+", "\[Kappa]"}]]]}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["W", 
    FractionBox[
     RowBox[{"2", " ", "\[Kappa]"}], 
     RowBox[{"1", "+", "\[Kappa]"}]]]}]]], "Output",
 CellChangeTimes->{3.825672439385564*^9, 3.825672504185514*^9, 
  3.825672627855056*^9, 3.825672671922962*^9, 3.825672743539783*^9, 
  3.825674539382516*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"056fcdad-c174-49f4-9e89-9efde3b71056"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"W", " ", "\[Lambda]"}], ")"}], 
      FractionBox[
       RowBox[{"2", " ", "\[Kappa]"}], 
       RowBox[{"1", "+", "\[Kappa]"}]]]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["W", 
      FractionBox[
       RowBox[{"2", " ", "\[Kappa]"}], 
       RowBox[{"1", "+", "\[Kappa]"}]]]}]], ",", 
   RowBox[{"W", "\[Rule]", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.825674192978848*^9, 3.8256742089541073`*^9}, 
   3.825674548320965*^9},
 CellLabel->"In[85]:=",ExpressionUUID->"4351f906-7e22-4724-8da2-3c7b2ad43ce5"],

Cell[BoxData[
 SuperscriptBox["\[Lambda]", 
  FractionBox[
   RowBox[{"2", " ", "\[Kappa]"}], 
   RowBox[{"1", "+", "\[Kappa]"}]]]], "Output",
 CellChangeTimes->{3.825674209806088*^9, 3.825674549921348*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"b7a84435-9f3d-4fdb-8e49-f7c87f057512"]
}, Open  ]],

Cell[TextData[{
 "As ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", "\[Kappa]", "\[LessEqual]", "\[Infinity]"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "50e36333-2641-460e-8e03-36f50e3f7887"],
 ", the scaling ranges from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "\[LessEqual]", 
    FractionBox[
     RowBox[{"2", " ", "\[Kappa]"}], 
     RowBox[{"1", "+", "\[Kappa]"}]], "\[LessEqual]", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "77f04294-8d9c-4846-bc98-f01c5a5d5609"],
 " which is consistent with the specifications given by Hanel, Thurner. Also \
note, that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "1"}], "\[LessEqual]", "\[Kappa]", "<", "0"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "294e3a82-44bb-43a0-a6f9-2ec411018195"],
 " the scaling is faster than exponential and could be governed by the \
\[Kappa] = 0 case. If we solve for c, we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{"2", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "07fef5a6-2afa-4c55-8c10-4707bb5fd120"],
 ", which is not ",
 StyleBox["q. ",
  FontSlant->"Italic"],
 "Rather ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "q"}], ")"}]}], "=", 
     RowBox[{"2", "+", "q"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "acb6b63d-1b82-4e7c-9117-5c3a05b601bc"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "=", 
    RowBox[{"c", "-", "2"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "1cd51364-a3b3-4be2-b758-34e2f6e207f1"],
 ". This seems inconsistent in that for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", "c", "\[LessEqual]", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d09eff61-8fd8-443d-a48d-83b0450d1754"],
 ", then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"-", "2"}], "<", "q", "\[LessEqual]", 
    RowBox[{"-", "1"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "1e8610ed-ca89-47c8-b291-4c43e7df126e"],
 ". There must be another transformation, for instance the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Q", "=", 
    RowBox[{"2", "-", "q"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d8b4f68f-0cfc-48b1-bd6f-c12925e4fcd0"],
 ", which switches the domains of q. Substituting ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "\[Rule]", 
    RowBox[{"2", "-", "Q"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "1b0cd0ba-2b07-4a38-93ef-f5cf80f02a06"],
 ", gives ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", 
    RowBox[{"4", "-", "Q"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "566ca671-6d17-45d9-9929-e48f2278795c"],
 ", which is not helpful, but if ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "\[Rule]", 
    RowBox[{"2", "-", "Q"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "4e085ab8-6664-4136-938a-0a512f40f4d2"],
 ", then have ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "=", 
    RowBox[{"-", "Q"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "0de3367a-cf6a-426c-a44a-8f43d9b9baa2"],
 ".  If we take the relationship to be ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "=", 
    RowBox[{"2", "-", "Q"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "e89f4103-3f85-42c5-8213-f97a837de970"],
 ", then for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "<", "c", "\[LessEqual]", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "83ed0ee3-db1d-4fe6-a6ac-511a870ec843"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", ">", "Q", "\[GreaterEqual]", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "25d3696b-2948-401a-a4a6-1dfebfb0d2ba"],
 ". This leaves out the domain ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "<", "Q", "<", "3"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "3a68d22e-eebb-47f1-93d0-ef841c349f25"],
 "; however, it is closer to the intent of the heavy-tail scaling."
}], "Text",
 CellChangeTimes->{{3.8256744623067503`*^9, 3.825674478750078*^9}, 
   3.8256745680800962`*^9, {3.8256746718677263`*^9, 3.825674742193267*^9}, {
   3.8256747775563593`*^9, 3.825674999231592*^9}, {3.825675032678872*^9, 
   3.825675189973284*^9}, {3.825675349858387*^9, 3.825675423818399*^9}, {
   3.825675551582568*^9, 3.82567571923542*^9}, {3.825675753387539*^9, 
   3.825675854979418*^9}, {3.825675965682192*^9, 3.8256759802251797`*^9}, {
   3.825676031821045*^9, 3.825676079999525*^9}, {3.825676150568432*^9, 
   3.825676307537953*^9}},ExpressionUUID->"018ed513-eed0-4cd6-848e-\
dba9fc30e32d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examination of the Coupled Entropy with a Root", "Section",
 CellChangeTimes->{{3.825670858468258*^9, 
  3.825670869334668*^9}},ExpressionUUID->"e3b027da-134c-4771-ba55-\
f63cc5be030d"],

Cell["\<\
Examination clarified that the root has a different role than \[Alpha]. 
None of these examinations resulted in an equation that \
\[OpenCurlyDoubleQuote]Solve\[CloseCurlyDoubleQuote] could provide a \
solution.
Following Tsallis\[CloseCurlyQuote] notation the symbol for the root is \
suggested to \[Delta].\
\>", "Text",
 CellChangeTimes->{{3.8256708767757473`*^9, 3.825670903994937*^9}, {
  3.8256710132667294`*^9, 3.825671033370049*^9}, {3.8256710761990843`*^9, 
  3.825671148978573*^9}},ExpressionUUID->"9a23a756-4f5e-4acd-be29-\
80a5f21eedba"],

Cell[CellGroupData[{

Cell["\<\
Solution for \[Alpha] = 1 with Mean Constraint and a root expression for the \
entropy\
\>", "Subsubsection",
 CellChangeTimes->{{3.825452980370605*^9, 3.825452998664632*^9}, {
  3.825576234580305*^9, 
  3.8255762389567013`*^9}},ExpressionUUID->"3a0d993b-8747-4660-95be-\
042e3cdcd4e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]RootMean", "[", 
   RowBox[{"\[Kappa]_", ",", "\[Sigma]_", ",", "n_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     SqrtBox["\[Kappa]"]], 
    RowBox[{"(", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox[
        RowBox[{"P", "[", 
         RowBox[{"\[Kappa]", ",", "1", ",", "n"}], "]"}], 
        RowBox[{"\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            SubscriptBox["p", "i"], ")"}], 
           FractionBox[
            RowBox[{"-", " ", "\[Kappa]"}], 
            RowBox[{"1", "+", "\[Kappa]"}]]], "-", "1"}], ")"}], 
        FractionBox["1", "2"]]}]}], ")"}]}], "+", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox["p", "i"]}], "-", 
   RowBox[{
    FractionBox["1", "\[Sigma]"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox[
       RowBox[{"P", "[", 
        RowBox[{"\[Kappa]", ",", "1", ",", "n"}], "]"}], 
       RowBox[{"\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]], 
      SubscriptBox["x", "i"]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.82545301515734*^9, 3.8254530916626863`*^9}, {
  3.825453506682097*^9, 3.82545351192337*^9}, {3.8255761540350122`*^9, 
  3.8255761582037773`*^9}, {3.825576191033235*^9, 3.825576199746874*^9}, {
  3.825576276107359*^9, 3.825576276459002*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"aab6e78e-8ede-47e0-87af-50951fa75a21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"\[Phi]RootMean", "[", 
     RowBox[{"\[Kappa]", ",", "\[Sigma]", ",", "3"}], "]"}], ",", 
    SubscriptBox["p", "1"]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.825576293662757*^9, 3.8255762940265102`*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"8accf0be-32cb-4a9b-a39f-c6d23bc04b16"],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"2", "+", 
    RowBox[{"3", " ", "\[Kappa]"}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], " ", 
     SubsuperscriptBox["p", "1", 
      FractionBox["\[Kappa]", 
       RowBox[{"1", "+", "\[Kappa]"}]]]}]}], 
   RowBox[{"2", " ", "ZP", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
    SqrtBox[
     RowBox[{"\[Kappa]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SubsuperscriptBox["p", "1", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          FractionBox["1", 
           RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      FractionBox["\[Kappa]", 
       RowBox[{"1", "+", "\[Kappa]"}]]}], ")"}], " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox["\[Kappa]", 
      RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
    SubscriptBox["x", "1"]}], 
   RowBox[{"ZP", " ", "\[Sigma]"}]]}]], "Output",
 CellChangeTimes->{3.8255763014325457`*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"f827dd79-6522-43c0-b378-33d256d86a93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"2", "+", 
        RowBox[{"3", " ", "\[Kappa]"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], " ", 
         SubsuperscriptBox["p", "1", 
          FractionBox["\[Kappa]", 
           RowBox[{"1", "+", "\[Kappa]"}]]]}]}], 
       RowBox[{"2", " ", "ZP", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SubsuperscriptBox["p", "1", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              FractionBox["1", 
               RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]]}]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["\[Kappa]", 
           RowBox[{"1", "+", "\[Kappa]"}]]}], ")"}], " ", 
        SubsuperscriptBox["p", "1", 
         FractionBox["\[Kappa]", 
          RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
        SubscriptBox["x", "1"]}], 
       RowBox[{"ZP", " ", "\[Sigma]"}]]}], "\[Equal]", "0"}], ",", 
    SubscriptBox["p", "1"]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8255763144488897`*^9, 3.825576331465143*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"5790f19a-302b-41b9-a690-22a66a6ee5c5"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.825581035827382*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"f7af5a99-4869-44a7-beae-371c6b9b4e0e"]
}, Open  ]],

Cell["Aborted after approximately 1-2 hours", "Text",
 CellChangeTimes->{{3.825581037730557*^9, 
  3.825581059435302*^9}},ExpressionUUID->"14cf253b-79d4-4da4-9d11-\
060efd6aeb00"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Solution for \[Alpha] = 2 with Coupled Variance Constraint and a root \
expression for the entropy\
\>", "Subsubsection",
 CellChangeTimes->{{3.825452980370605*^9, 
  3.825452998664632*^9}},ExpressionUUID->"f8360dd1-b2be-487e-92c4-\
b2745645a510"],

Cell["\<\
Below used root entropy with a second moment constraint. With the root 1/2, \
this is equivalent to having a higher moment constraint if the derivative is \
squared.\
\>", "Text",
 CellChangeTimes->{{3.825576040593443*^9, 
  3.825576134106308*^9}},ExpressionUUID->"5f3b726c-5db4-4785-b417-\
eda7bf5e4a1f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]Root", "[", 
   RowBox[{"\[Kappa]_", ",", "\[Sigma]_", ",", "n_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     SqrtBox["\[Kappa]"]], 
    RowBox[{"(", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox[
        RowBox[{"P", "[", 
         RowBox[{"\[Kappa]", ",", "2", ",", "n"}], "]"}], 
        RowBox[{"\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            SubscriptBox["p", "i"], ")"}], 
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], " ", "\[Kappa]"}], 
            RowBox[{"1", "+", "\[Kappa]"}]]], "-", "1"}], ")"}], 
        FractionBox["1", "2"]]}]}], ")"}]}], "+", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox["p", "i"]}], "-", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["\[Sigma]", "2"]], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox[
       RowBox[{"P", "[", 
        RowBox[{"\[Kappa]", ",", "2", ",", "n"}], "]"}], 
       RowBox[{"\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]], 
      SuperscriptBox[
       SubscriptBox["x", "i"], "2"]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.82545301515734*^9, 3.8254530916626863`*^9}, {
  3.825453506682097*^9, 3.82545351192337*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"1b0ae625-f5fa-46a8-aa0c-1c07a13e81e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"\[Phi]Root", "[", 
     RowBox[{"\[Kappa]", ",", "\[Sigma]", ",", "3"}], "]"}], ",", 
    SubscriptBox["p", "1"]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.825453221340178*^9, 3.8254532230233*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"8643f1f1-3a91-4cd1-b5d9-a0522be3d025"],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "\[Kappa]"}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"3", " ", "\[Kappa]"}]}], ")"}], " ", 
     SubsuperscriptBox["p", "1", 
      FractionBox[
       RowBox[{"2", " ", "\[Kappa]"}], 
       RowBox[{"1", "+", "\[Kappa]"}]]]}]}], 
   RowBox[{"ZP", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
    SqrtBox[
     RowBox[{"\[Kappa]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SubsuperscriptBox["p", "1", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "\[Kappa]"}], 
           RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"3", " ", "\[Kappa]"}]}], ")"}], " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"2", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
    SubsuperscriptBox["x", "1", "2"]}], 
   RowBox[{"ZP", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
    SuperscriptBox["\[Sigma]", "2"]}]]}]], "Output",
 CellChangeTimes->{3.8254532323164597`*^9, 3.8254535241189632`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"01e7ee2f-5aae-401d-a527-6c2a593c97b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "\[Kappa]"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"3", " ", "\[Kappa]"}]}], ")"}], " ", 
         SubsuperscriptBox["p", "1", 
          FractionBox[
           RowBox[{"2", " ", "\[Kappa]"}], 
           RowBox[{"1", "+", "\[Kappa]"}]]]}]}], 
       RowBox[{"ZP", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SubsuperscriptBox["p", "1", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"2", " ", "\[Kappa]"}], 
               RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]]}]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"3", " ", "\[Kappa]"}]}], ")"}], " ", 
        SubsuperscriptBox["p", "1", 
         FractionBox[
          RowBox[{"2", " ", "\[Kappa]"}], 
          RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
        SubsuperscriptBox["x", "1", "2"]}], 
       RowBox[{"ZP", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
        SuperscriptBox["\[Sigma]", "2"]}]]}], "\[Equal]", "0"}], ",", 
    SubscriptBox["p", "1"]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.825453255782177*^9, 3.825453271274358*^9}, 
   3.825453540644063*^9},
 CellLabel->"In[76]:=",ExpressionUUID->"de250996-91c2-4948-95da-56a9b037ec60"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.8254532676935053`*^9, 3.825453471070073*^9, 
  3.825466369465623*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"a5951812-76a6-4362-a0d4-d74c58e44f85"]
}, Open  ]],

Cell["\<\
Above did not find a solution within 3 hours of processing. Try squaring to \
see if this will simplify the expression\
\>", "Text",
 CellChangeTimes->{{3.825466374885427*^9, 
  3.825466438186285*^9}},ExpressionUUID->"3610bffe-6c75-4180-add2-\
7f31ba42fc08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     FractionBox[
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "\[Kappa]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"3", " ", "\[Kappa]"}]}], ")"}], " ", 
        SubsuperscriptBox["p", "1", 
         FractionBox[
          RowBox[{"2", " ", "\[Kappa]"}], 
          RowBox[{"1", "+", "\[Kappa]"}]]]}]}], 
      RowBox[{"ZP", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
       SqrtBox[
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SubsuperscriptBox["p", "1", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{"2", " ", "\[Kappa]"}], 
              RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]]}]], "-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"3", " ", "\[Kappa]"}]}], ")"}], " ", 
       SubsuperscriptBox["p", "1", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
       SubsuperscriptBox["x", "1", "2"]}], 
      RowBox[{"ZP", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}], "2"], "//", 
  "Expand"}]], "Input",
 CellChangeTimes->{{3.825466446317512*^9, 3.825466469923574*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"b7fcede7-2fb8-437c-96d2-94e87738b5d6"],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox["4", 
   RowBox[{
    SuperscriptBox["ZP", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], "+", 
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["ZP", "2"], " ", "\[Kappa]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"4", " ", "\[Kappa]"}], 
   RowBox[{
    SuperscriptBox["ZP", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"10", " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"2", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]]}], 
   RowBox[{
    SuperscriptBox["ZP", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"2", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]]}], 
   RowBox[{
    SuperscriptBox["ZP", "2"], " ", "\[Kappa]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"12", " ", "\[Kappa]", " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"2", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]]}], 
   RowBox[{
    SuperscriptBox["ZP", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"6", " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"4", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]]}], 
   RowBox[{
    SuperscriptBox["ZP", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], "+", 
  FractionBox[
   SubsuperscriptBox["p", "1", 
    FractionBox[
     RowBox[{"4", " ", "\[Kappa]"}], 
     RowBox[{"1", "+", "\[Kappa]"}]]], 
   RowBox[{
    SuperscriptBox["ZP", "2"], " ", "\[Kappa]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"9", " ", "\[Kappa]", " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"4", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]]}], 
   RowBox[{
    SuperscriptBox["ZP", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"4", " ", 
    SqrtBox[
     RowBox[{"\[Kappa]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SubsuperscriptBox["p", "1", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "\[Kappa]"}], 
           RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]]}], 
   RowBox[{"ZP", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SqrtBox[
     RowBox[{"\[Kappa]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SubsuperscriptBox["p", "1", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "\[Kappa]"}], 
           RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]]}], 
   RowBox[{"ZP", " ", "\[Kappa]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"6", " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"2", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
    SqrtBox[
     RowBox[{"\[Kappa]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SubsuperscriptBox["p", "1", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "\[Kappa]"}], 
           RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]]}], 
   RowBox[{"ZP", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"2", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
    SqrtBox[
     RowBox[{"\[Kappa]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SubsuperscriptBox["p", "1", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "\[Kappa]"}], 
           RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]]}], 
   RowBox[{"ZP", " ", "\[Kappa]", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"2", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
    SubsuperscriptBox["x", "1", "2"]}], 
   RowBox[{"ZP", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
    SuperscriptBox["\[Sigma]", "2"]}]], "-", 
  FractionBox[
   RowBox[{"6", " ", "\[Kappa]", " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"2", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
    SubsuperscriptBox["x", "1", "2"]}], 
   RowBox[{"ZP", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
    SuperscriptBox["\[Sigma]", "2"]}]], "-", 
  FractionBox[
   RowBox[{"10", " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"2", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
    SqrtBox[
     RowBox[{"\[Kappa]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SubsuperscriptBox["p", "1", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "\[Kappa]"}], 
           RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], " ", 
    SubsuperscriptBox["x", "1", "2"]}], 
   RowBox[{
    SuperscriptBox["ZP", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
    SuperscriptBox["\[Sigma]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"2", " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"2", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
    SqrtBox[
     RowBox[{"\[Kappa]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SubsuperscriptBox["p", "1", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "\[Kappa]"}], 
           RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], " ", 
    SubsuperscriptBox["x", "1", "2"]}], 
   RowBox[{
    SuperscriptBox["ZP", "2"], " ", "\[Kappa]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
    SuperscriptBox["\[Sigma]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"12", " ", "\[Kappa]", " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"2", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
    SqrtBox[
     RowBox[{"\[Kappa]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SubsuperscriptBox["p", "1", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "\[Kappa]"}], 
           RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], " ", 
    SubsuperscriptBox["x", "1", "2"]}], 
   RowBox[{
    SuperscriptBox["ZP", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
    SuperscriptBox["\[Sigma]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"12", " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"4", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
    SqrtBox[
     RowBox[{"\[Kappa]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SubsuperscriptBox["p", "1", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "\[Kappa]"}], 
           RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], " ", 
    SubsuperscriptBox["x", "1", "2"]}], 
   RowBox[{
    SuperscriptBox["ZP", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
    SuperscriptBox["\[Sigma]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"4", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
    SqrtBox[
     RowBox[{"\[Kappa]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SubsuperscriptBox["p", "1", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "\[Kappa]"}], 
           RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], " ", 
    SubsuperscriptBox["x", "1", "2"]}], 
   RowBox[{
    SuperscriptBox["ZP", "2"], " ", "\[Kappa]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
    SuperscriptBox["\[Sigma]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{"18", " ", "\[Kappa]", " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"4", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
    SqrtBox[
     RowBox[{"\[Kappa]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SubsuperscriptBox["p", "1", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "\[Kappa]"}], 
           RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], " ", 
    SubsuperscriptBox["x", "1", "2"]}], 
   RowBox[{
    SuperscriptBox["ZP", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
    SuperscriptBox["\[Sigma]", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"2", " ", "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"4", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
    SubsuperscriptBox["x", "1", "4"]}], 
   RowBox[{
    SuperscriptBox["ZP", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
    SuperscriptBox["\[Sigma]", "4"]}]], "+", 
  FractionBox[
   RowBox[{"6", " ", "\[Kappa]", " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"4", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
    SubsuperscriptBox["x", "1", "4"]}], 
   RowBox[{
    SuperscriptBox["ZP", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
    SuperscriptBox["\[Sigma]", "4"]}]], "+", 
  FractionBox[
   RowBox[{"9", " ", 
    SuperscriptBox["\[Kappa]", "2"], " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"4", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
    SubsuperscriptBox["x", "1", "4"]}], 
   RowBox[{
    SuperscriptBox["ZP", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
    SuperscriptBox["\[Sigma]", "4"]}]]}]], "Output",
 CellChangeTimes->{{3.8254664580284567`*^9, 3.825466470770975*^9}},
 CellLabel->"Out[78]=",ExpressionUUID->"26654f0c-efcd-4a79-afb9-75700a354bb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%78", "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.825466493258712*^9, 3.825466501234467*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"283fd15d-89e7-4bec-9808-26ea43c31323"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["ZP", "2"], " ", "\[Kappa]", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
    SuperscriptBox["\[Sigma]", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SubsuperscriptBox["p", "1", 
       FractionBox[
        RowBox[{"2", " ", "\[Kappa]"}], 
        RowBox[{"1", "+", "\[Kappa]"}]]]}], ")"}]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["ZP", "2"]}], " ", "\[Kappa]", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}], "2"], " ", 
     SuperscriptBox["\[Sigma]", "4"]}], "+", 
    RowBox[{
     SubsuperscriptBox["p", "1", 
      FractionBox[
       RowBox[{"2", " ", "\[Kappa]"}], 
       RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"\[Kappa]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", 
             RowBox[{
              SuperscriptBox["ZP", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "\[Kappa]"}], ")"}]}]}], ")"}]}]}], ")"}], 
        " ", 
        SuperscriptBox["\[Sigma]", "4"]}], "+", 
       RowBox[{"2", " ", "ZP", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
        SuperscriptBox["\[Sigma]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Kappa]"}]}], ")"}]}], " ", 
           SuperscriptBox["\[Sigma]", "2"], " ", 
           SqrtBox[
            RowBox[{"\[Kappa]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SubsuperscriptBox["p", "1", 
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"2", " ", "\[Kappa]"}], 
                  RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]]}], "+", 
          RowBox[{"\[Kappa]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"3", " ", "\[Kappa]"}]}], ")"}], " ", 
           SubsuperscriptBox["x", "1", "2"]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"3", " ", "\[Kappa]"}]}], ")"}], "2"], " ", 
        SubsuperscriptBox["p", "1", 
         FractionBox[
          RowBox[{"4", " ", "\[Kappa]"}], 
          RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Sigma]", "4"]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Sigma]", "2"], " ", 
           SqrtBox[
            RowBox[{"\[Kappa]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SubsuperscriptBox["p", "1", 
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{"2", " ", "\[Kappa]"}], 
                  RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]], " ", 
           SubsuperscriptBox["x", "1", "2"]}], "+", 
          RowBox[{"\[Kappa]", " ", 
           SubsuperscriptBox["x", "1", "4"]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"3", " ", "\[Kappa]"}]}], ")"}], " ", 
        SubsuperscriptBox["p", "1", 
         FractionBox[
          RowBox[{"2", " ", "\[Kappa]"}], 
          RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["\[Sigma]", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"ZP", " ", 
              SqrtBox[
               RowBox[{"\[Kappa]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SubsuperscriptBox["p", "1", 
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", "\[Kappa]"}], 
                    RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]]}], "+", 
             RowBox[{"\[Kappa]", " ", 
              RowBox[{"(", 
               RowBox[{"2", "+", 
                RowBox[{"ZP", " ", 
                 SqrtBox[
                  RowBox[{"\[Kappa]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SubsuperscriptBox["p", "1", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", "\[Kappa]"}], 
                    RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]]}]}], 
               ")"}]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Sigma]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "ZP"}], " ", "\[Kappa]", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "\[Kappa]"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], " ", 
              SqrtBox[
               RowBox[{"\[Kappa]", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SubsuperscriptBox["p", "1", 
                   RowBox[{"-", 
                    FractionBox[
                    RowBox[{"2", " ", "\[Kappa]"}], 
                    RowBox[{"1", "+", "\[Kappa]"}]]}]]}], ")"}]}]]}]}], ")"}],
            " ", 
           SubsuperscriptBox["x", "1", "2"]}], "-", 
          RowBox[{"\[Kappa]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"3", " ", "\[Kappa]"}]}], ")"}], " ", 
           SubsuperscriptBox["x", "1", "4"]}]}], ")"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.825466509652636*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"457dca56-3cbb-45ce-8fd5-24b310bfdef3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"%79", "\[Equal]", "0"}], ",", 
   SubscriptBox["p", "1"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8254665238580313`*^9, 3.825466544306726*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"c9333f87-6e6f-4254-b694-bcaf3a478a52"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.825468729698681*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"78cae801-9246-46dd-a698-ee5e46614dae"]
}, Open  ]]
}, Closed]],

Cell["Hanel, Thurner c,d entropy", "Subsubsection",
 CellChangeTimes->{{3.825676595785314*^9, 
  3.825676603186798*^9}},ExpressionUUID->"53fe4547-2371-4a3c-a470-\
2a6e003354b4"],

Cell[CellGroupData[{

Cell[TextData[{
 "Simplification of Hanel, Thurner solution for \[Alpha] = 2 assuming that c \
= 1 +",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[Alpha]", " ", "\[Kappa]"}], 
    RowBox[{"1", "+", "\[Kappa]"}]], TraditionalForm]],ExpressionUUID->
  "9fd85b67-0a32-41a2-840f-ce54b69f52fe"],
 ", d = \[Alpha]"
}], "Subsubsection",
 CellChangeTimes->{{3.825487935916127*^9, 
  3.825488025498109*^9}},ExpressionUUID->"017a0dab-9146-491b-864c-\
466fa7b2016f"],

Cell["\<\
Choose ProductLog branch with k = 0 which covers d >= 0, and subsitute \
\>", "Text",
 CellChangeTimes->{{3.825488596116975*^9, 
  3.825488649834128*^9}},ExpressionUUID->"b7f97763-4b29-407b-bdf4-\
1ed208be611d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"HTMaxEntDist", ",", "B", ",", "r"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HTMaxEntDist", "[", 
    RowBox[{"x_", ",", "c_", ",", "d_"}], "]"}], ":=", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["d", 
       RowBox[{"1", "-", "c"}]]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ProductLog", "[", 
        RowBox[{
         RowBox[{"B", "[", 
          RowBox[{"c", ",", "d"}], "]"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            FractionBox["x", 
             RowBox[{"r", "[", 
              RowBox[{"c", ",", "d"}], "]"}]]}], ")"}], 
          FractionBox["1", "d"]]}], "]"}], "-", 
       RowBox[{"ProductLog", "[", 
        RowBox[{"B", "[", 
         RowBox[{"c", ",", "d"}], "]"}], "]"}]}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "[", 
    RowBox[{"c_", ",", "d_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "c"}], ")"}], 
      RowBox[{"r", "[", 
       RowBox[{"c", ",", "d"}], "]"}]}], 
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "c"}], ")"}], 
       RowBox[{"r", "[", 
        RowBox[{"c", ",", "d"}], "]"}]}]}]], 
    RowBox[{"Exp", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "c"}], ")"}], 
       RowBox[{"r", "[", 
        RowBox[{"c", ",", "d"}], "]"}]}], 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "c"}], ")"}], 
        RowBox[{"r", "[", 
         RowBox[{"c", ",", "d"}], "]"}]}]}]], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r", "[", 
    RowBox[{"c_", ",", "d_"}], "]"}], ":=", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "c", "+", 
      RowBox[{"c", " ", "d"}]}], ")"}], 
    RowBox[{"-", "1"}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.825488361135722*^9, 3.825488406385662*^9}, {
  3.825488680897003*^9, 3.825488693235373*^9}, {3.825488727731184*^9, 
  3.8254889212964153`*^9}, {3.825488984550638*^9, 3.825488997922179*^9}, {
  3.825489323910371*^9, 3.825489332042594*^9}, {3.825489526100273*^9, 
  3.825489535716825*^9}, {3.825489856484152*^9, 3.8254898800201273`*^9}, {
  3.825490271860849*^9, 3.825490283972225*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"f4618ce7-583d-40ff-a7ba-ec892aa673fd"],

Cell["Solve for the case of \[Alpha] = 1", "Text",
 CellChangeTimes->{{3.825489032009294*^9, 
  3.8254890409356422`*^9}},ExpressionUUID->"5cd6af8f-6701-40e2-9c9a-\
c05bb202a5a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"HTMaxEntDist", "[", 
   RowBox[{
    RowBox[{"-", "x"}], ",", 
    RowBox[{"1", "+", 
     FormBox[
      FractionBox[
       RowBox[{" ", "\[Kappa]"}], 
       RowBox[{"1", "+", "\[Kappa]"}]],
      TraditionalForm]}], ",", "1"}], "]"}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.825489049093821*^9, 3.825489057506474*^9}, {
   3.825489886879092*^9, 3.825489892651733*^9}, 3.825490690628325*^9},
 CellLabel->
  "In[153]:=",ExpressionUUID->"f81a7495-e80e-40c8-86c7-a4a43254571b"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", "\[Kappa]"}]}]], "+", 
     FractionBox[
      RowBox[{"ProductLog", "[", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox["\[Kappa]", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", "\[Kappa]"}]}]]}]], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "x"}], ")"}], " ", "\[Kappa]"}], 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Kappa]"}]}]]}], "]"}], "\[Kappa]"]}], 
    ")"}]}]]], "Output",
 CellChangeTimes->{3.8254890591153107`*^9, 3.825489341789469*^9, 
  3.8254895611225023`*^9, 3.825489908634346*^9, 3.82549070728743*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"49b33e84-e296-41af-93a1-a9b85e6f6885"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"HTMaxEntDist", "[", 
      RowBox[{
       RowBox[{"-", "x"}], ",", 
       RowBox[{"1", "+", 
        FormBox[
         FractionBox[
          RowBox[{" ", "\[Kappa]"}], 
          RowBox[{"1", "+", "\[Kappa]"}]],
         TraditionalForm]}], ",", "1"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Kappa]", "\[Rule]", "0.1"}], ",", 
       RowBox[{"\[Kappa]", "\[Rule]", "0.5"}], ",", 
       RowBox[{"\[Kappa]", "\[Rule]", "1"}]}], "}"}]}], "//", "Evaluate"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.825489089654562*^9, 3.825489168227263*^9}, {
   3.825489252474678*^9, 3.8254892740088167`*^9}, {3.82548940032021*^9, 
   3.8254894007275*^9}, {3.82548955745074*^9, 3.825489563115273*^9}, {
   3.825489921003676*^9, 3.825489923495288*^9}, 3.825490701712655*^9},
 CellLabel->
  "In[154]:=",ExpressionUUID->"6173bc49-6492-4a69-b7b9-efbc5abbd701"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
      CapForm["Butt"], LineBox[CompressedData["
1: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
Orvnlb2z+SWQjO1yvF9IRSJpDxcrJy4C/YqeEb2MiqKeSn5Q9b0IlYtH5YYa
qOhCsI3HizQziNsn1LHAoqI+91zRrQsmoJZYJS29lQ+1qsWS/+2ig5vtEeEp
Gh+S948p7fOiwwvFN1ymNB/yNZU9PbONDoItCV+PH+FD754EVh6yMQQ2huFj
bMCHqspQzvLqeYhyFG8NvcuHms5scVmv04Ma5biSs9F8iK4lZ8WS1oN5Am+m
0CM+ZOpSvDM7UhcsU+c8k9P5UJeMmUu16Tk43NG0o6icD/kUotEeXh3oP+bl
wf7Fhx53c2tKKzRAmDpt+XqJD6XszpcmqmvAmS7bs24YfvSNaGO0VHYamNcN
aFx+fiT9pzTua/UpuJst3SQiy48+TzuQWP0nQEGoc/spC35U71qYIVqnDiPR
I0HxdvzIoCoqLRqrDsmUhdFRJ36UFH7/QARSAz7CFmaU51/P9M1bqTsKnHkz
zc5YfiSACfu64acSZPX1Mxxq+ZGe0iprNkcRzM1+tpc18SMxsbL8BAFF2Ni5
piLwlR8FyhgztK8fgKBWSfy7fn6kHRUUaRagAJYfrBK58/yIThaM4X6XBfGX
w1UPZAXQd5s94zRlKejYNb/rx34BNOWXYX9LlgaR6aSIw0oCaMuiUitWWQKW
n0rTu08KoKfnStJaf4kBc7NKiby2AErPTnd+UbMZHB6dkfDXF0DkCd1hD59N
0BXtMLbDXAANhOcLdesIQgzFW/eWtQBSuHJtvuUND/wPjxoeLA==
       "]]},
     Annotation[#, "Charting`Private`Tag$1705260#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {0., 0.9999997959183842}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8254892754507017`*^9, 3.825489354783678*^9, 
  3.825489402175579*^9, 3.8254895708119297`*^9, 3.8254899263564577`*^9, 
  3.8254902901581097`*^9, 3.825490710097311*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"c1a2a566-1ab6-4125-852d-a5fd9fada572"]
}, Open  ]],

Cell["Can the Cauchy Distribution be obtained from c = 2, d = 2", "Text",
 CellChangeTimes->{{3.825489599188157*^9, 
  3.825489621786525*^9}},ExpressionUUID->"a83ea96e-46e2-423a-bdc2-\
96f83d4cd7e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"HTMaxEntDist", "[", 
   RowBox[{
    RowBox[{"-", "x"}], ",", "2", ",", "2"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.825489640307773*^9, 3.825489659213356*^9}, {
   3.82549000796833*^9, 3.8254900087730627`*^9}, 3.825490741187533*^9},
 CellLabel->
  "In[156]:=",ExpressionUUID->"5a435baf-27a1-4100-ae96-4e5e3bc9cdc5"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{
   FractionBox["1", "2"], "+", 
   RowBox[{"2", " ", 
    RowBox[{"ProductLog", "[", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"3", " ", "x"}]}]], 
       RowBox[{"4", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"1", "/", "4"}]]}]]}], "]"}]}]}]]], "Output",
 CellChangeTimes->{{3.8254896436178217`*^9, 3.825489659947317*^9}, 
   3.8254900094647217`*^9, 3.825490301667314*^9, 3.8254907421051207`*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"1d373766-56b9-4b84-96b9-665187d103f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"HTMaxEntDist", "[", 
      RowBox[{
       RowBox[{"-", "x"}], ",", "2", ",", "2"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Kappa]", "\[Rule]", "0.1"}], ",", 
       RowBox[{"\[Kappa]", "\[Rule]", "0.5"}], ",", 
       RowBox[{"\[Kappa]", "\[Rule]", "1"}]}], "}"}]}], "//", "Evaluate"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{3.8254896821091022`*^9, 3.825490752635158*^9},
 CellLabel->
  "In[157]:=",ExpressionUUID->"54482adf-fae2-4fda-8fc5-490be95f8688"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
      CapForm["Butt"], LineBox[CompressedData["
1:eJwB0QIu/SFib1JlAgAAACwAAAACAAAAnX5iBjFkiz7hPG+S///vP8TTIExX
IGk/Ggaxvuzm7z//xr6DICB5P7wQUdLzze8/ncCNHwUgiT+VQBsiTpzvP2w9
dW33H5k/sxnZ+Cg67z/T+2iU8B+pPyWeb1Iqeu4/B9viJ+0fuT+RYsNNRAnt
P6HKn3HrH8k/vzbrNchW6j+ur4nbbC7aP9/mcoPaAOU/Zz/Rmexy4z9HmpAJ
pTLgPwCi9rrbi+M/X8iAb0sf4D+YBBzcyqTjP600YOToC+A/yMlmHqnW4z8i
br1fD8rfPyhU/KJlOuQ/xO+LapYt3z/oaCes3gHlP5xUBFsn8N0/apJ9vtCQ
5j+njaq+RFzbPwL1ot+/qeY/rV5FfIwx2z+aV8gAr8LmP6jEPj+dBts/yhwT
Q4305j+5/QMJEbDaPyunqMdJWOc/3GllGv3/2T/su9PQwh/oPxXgqtk5kdg/
hB758bE46D8Jkap+t2HYPxyBHhOhUeg/yiifQMYx2D9MRmlVf4PoP0k7pvR+
0Nc/rdD+2Tvn6D+PYKFhlQfXP0YzJPsqAOk//HE+fdbT1j/elUkcGhnpPzDZ
h81nn9Y/DluUXvhK6T8WufRcSTTWP27lKeO0ruk/brXKRVNT1T/gXtkIwcnp
P268MJFYE9U/U9iILs3k6T8pOh822tHUPzjL53nlGuo/f0RxVZ5J1D+rRJef
8TXqP9bI78BvAtQ/Hr5Gxf1Q6j9SSWKr1bjTPwOxpRAWh+o/+vSrdsoc0z92
KlU2IqLqP2pJd5dCydI/6KMEXC696j/GTg/lA3HSP1sdtIE62Oo/Jw2TPeAS
0j/OlmOnRvPqPzIvDTcUrdE/QBATzVIO6z+gd8GrxTzRP7OJwvJeKes/lFD5
AsC80D8mA3IYa0TrP2/eY9BHIdA/mHwhPndf6z82yD0r03vOP7eAuLHuaOs/
YYV/LmwszT/DJmT3
       "]]},
     Annotation[#, "Charting`Private`Tag$1706210#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.22791816969315007`},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {0.22791816969315007`, 0.9999997959183952}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.825489684522427*^9, 3.825490019074594*^9, 
  3.825490308898326*^9, 3.825490754091803*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"41cd4357-8bc6-4a6b-9abd-6b47ace21740"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"HTMaxEntDist", "[", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["x", "2"]}], ",", "2", ",", "2"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Kappa]", "\[Rule]", "0.1"}], ",", 
       RowBox[{"\[Kappa]", "\[Rule]", "0.5"}], ",", 
       RowBox[{"\[Kappa]", "\[Rule]", "1"}]}], "}"}]}], "//", "Evaluate"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.825490781424632*^9, 3.825490782383649*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"9ab63b73-a1d7-4cbb-88ee-e462ecd7a729"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.9, 0.36, 0.054], AbsoluteThickness[1.6], Opacity[1.], 
      CapForm["Butt"], LineBox[CompressedData["
1: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
UNgJz7Pz7rR0CrS0DCatpx3/AyfdgIE=
       "]]},
     Annotation[#, "Charting`Private`Tag$1706843#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.2251655834836386},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Times"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {0.2251655834836386, 0.9999999999999583}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8254907845566807`*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"2a65d8bb-085c-43d2-a56d-c1035a9ab76f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", " ", "+", " ", 
      RowBox[{"\[Kappa]", " ", "x"}]}], ")"}], 
    FractionBox[
     RowBox[{"1", "+", "\[Kappa]"}], "\[Kappa]"]], ",", 
   RowBox[{"\[Kappa]", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.825618390816744*^9, 3.825618431234561*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"12687d9d-d50a-46e1-90d0-9133e834561e"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "x"]], "Output",
 CellChangeTimes->{3.82561843254082*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"83524898-1baa-4c20-95d1-a4ab8e8781f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", " ", "+", " ", 
       RowBox[{"\[Kappa]", " ", "x"}]}], ")"}], 
     FractionBox["1", "\[Kappa]"]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", " ", "+", " ", 
       RowBox[{"\[Kappa]", " ", "x"}]}], ")"}], "d"]}], ",", 
   RowBox[{"\[Kappa]", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.825618492393283*^9, 3.825618514258041*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"118457fe-399f-481a-8d3b-1f04278111bf"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", "x"]], "Output",
 CellChangeTimes->{3.825618515841073*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"4c500e74-b886-44e1-a0ef-a5918ea8fa2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"\[Phi]", "[", 
       RowBox[{"\[Kappa]", ",", "1", ",", "\[Sigma]", ",", "3"}], "]"}], ",", 
      
      SubscriptBox["p", "1"]}], "]"}], "\[Equal]", "0"}], ",", 
   SubscriptBox["p", "1"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8256695701585703`*^9, 3.8256695720189533`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"5e9692f6-0bb8-4bc0-9686-576137ed9fb7"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.825669658719578*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"cb75bcdb-d565-4de2-8560-2428ca1e2f00"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Alpha]", "2"], "+", 
   SuperscriptBox["\[Sigma]", "2"]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.825669810736024*^9, 3.8256698487620773`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"f1c4323a-862b-4391-9c42-08b802ac9682"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[Alpha]", "2"], "+", 
  SuperscriptBox["\[Sigma]", "2"]}]], "Output",
 CellChangeTimes->{{3.825669835471005*^9, 3.8256698501943197`*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"5327c5b5-ceb5-4b10-b814-21cad4a3a75f"]
}, Open  ]],

Cell[BoxData["("], "Input",
 CellChangeTimes->{
  3.825669853561945*^9},ExpressionUUID->"61c2ed87-0f90-4631-9f4a-\
6b2f48dc144f"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Investigation of Alternative Forms of Coupled Entropy and its Constraints\
\>", "Section",
 CellChangeTimes->{{3.825670420410084*^9, 3.8256704254597673`*^9}, {
  3.82567046630512*^9, 
  3.8256704794978724`*^9}},ExpressionUUID->"627a85eb-1cf2-4f8f-95b2-\
e6014cded4d3"],

Cell[CellGroupData[{

Cell["\<\
If entropy is set with \[Alpha] = 1 but the second moment constraint is \
included\
\>", "Subsubsection",
 CellChangeTimes->{{3.8254688174314213`*^9, 
  3.8254688406502037`*^9}},ExpressionUUID->"6a77828d-d517-4052-b258-\
2c603bd96c74"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]Alt", "[", 
   RowBox[{"\[Kappa]_", ",", "\[Sigma]_", ",", "n_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{" ", "\[Kappa]"}]], 
    RowBox[{"(", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox[
        RowBox[{"P", "[", 
         RowBox[{"\[Kappa]", ",", "1", ",", "n"}], "]"}], 
        RowBox[{"\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           SubscriptBox["p", "i"], ")"}], 
          FractionBox[
           RowBox[{"-", " ", "\[Kappa]"}], 
           RowBox[{"1", "+", "\[Kappa]"}]]], "-", "1"}], ")"}]}]}], ")"}]}], 
   "+", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox["p", "i"]}], "-", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["\[Sigma]", "2"]], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox[
       RowBox[{"P", "[", 
        RowBox[{"\[Kappa]", ",", "1", ",", "n"}], "]"}], 
       RowBox[{"\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]], 
      SuperscriptBox[
       SubscriptBox["x", "i"], "2"]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.8254688516202097`*^9, 3.825468907721219*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"bc089665-6596-437f-8c98-e4001ba24629"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"\[Phi]Alt", "[", 
     RowBox[{"\[Kappa]", ",", "\[Sigma]", ",", "3"}], "]"}], ",", 
    SubscriptBox["p", "1"]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8254689389486027`*^9, 3.825468963640559*^9}, {
  3.825485340034026*^9, 3.825485362337708*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"f479435f-88c9-4bde-9b29-6b5100de4c4d"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"ZP", " ", "\[Kappa]"}]}], ")"}], " ", 
    SuperscriptBox["\[Sigma]", "2"]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox["\[Kappa]", 
      RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Sigma]", "2"], "+", 
      RowBox[{"\[Kappa]", " ", 
       SubsuperscriptBox["x", "1", "2"]}]}], ")"}]}]}], 
  RowBox[{"ZP", " ", "\[Kappa]", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
   SuperscriptBox["\[Sigma]", "2"]}]]], "Output",
 CellChangeTimes->{{3.8254689512525*^9, 3.82546896476311*^9}, {
  3.825485348735918*^9, 3.8254853640425863`*^9}},
 CellLabel->"Out[88]=",ExpressionUUID->"cc013ebf-c599-44f0-b10e-179eb5dc6bf8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"ZP", " ", "\[Kappa]"}]}], ")"}], " ", 
       SuperscriptBox["\[Sigma]", "2"]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], " ", 
       SubsuperscriptBox["p", "1", 
        FractionBox["\[Kappa]", 
         RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Sigma]", "2"], "+", 
         RowBox[{"\[Kappa]", " ", 
          SubsuperscriptBox["x", "1", "2"]}]}], ")"}]}]}], 
     RowBox[{"ZP", " ", "\[Kappa]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
      SuperscriptBox["\[Sigma]", "2"]}]], "\[Equal]", "0"}], ",", 
   SubscriptBox["p", "1"]}], "]"}]], "Input",
 CellChangeTimes->{{3.825468970686598*^9, 3.825468989379719*^9}, 
   3.8254853787127953`*^9},
 CellLabel->"In[89]:=",ExpressionUUID->"40c50988-c852-42cc-a689-f701bb8f0111"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["p", "1"], "\[Rule]", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"ZP", " ", "\[Kappa]"}]}], ")"}], " ", 
        SuperscriptBox["\[Sigma]", "2"]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Sigma]", "2"], "+", 
          RowBox[{"\[Kappa]", " ", 
           SubsuperscriptBox["x", "1", "2"]}]}], ")"}]}]], ")"}], 
     FractionBox[
      RowBox[{"1", "+", "\[Kappa]"}], "\[Kappa]"]]}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{3.82546908654813*^9, 3.825485334409103*^9, 
  3.825485381575488*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"bf09ebe4-46ae-4593-b858-a4d699322f36"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["p", "1"], "\[Rule]", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "\[Kappa]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"\[Kappa]", " ", 
           FractionBox[
            SubsuperscriptBox["x", "1", "2"], 
            SuperscriptBox["\[Sigma]", "2"]]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"ZP", " ", "\[Kappa]"}]}], ")"}]}]], ")"}], 
     FractionBox[
      RowBox[{"1", "+", "\[Kappa]"}], 
      RowBox[{"-", "\[Kappa]"}]]]}], "}"}], "}"}]], "Input",
 CellChangeTimes->{{3.8254854460030212`*^9, 
  3.825485482729237*^9}},ExpressionUUID->"208d2a04-c71e-46e9-b44f-\
0c4e55bb5825"],

Cell["\<\
So the form is a coupled Gaussian but it is missing the 1/2 in the exponent \
and thus \[Kappa] is no longer the shape of the distribution\
\>", "Text",
 CellChangeTimes->{{3.825485489615799*^9, 3.825485523451544*^9}, {
  3.825670546322723*^9, 
  3.825670582037553*^9}},ExpressionUUID->"9cd7c51b-e714-4e0a-a8b4-\
533484c97090"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]Alt", "[", 
   RowBox[{"\[Kappa]_", ",", "\[Sigma]_", ",", "n_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{" ", "\[Kappa]"}]], 
    RowBox[{"(", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox[
        RowBox[{"P", "[", 
         RowBox[{"\[Kappa]", ",", "2", ",", "n"}], "]"}], 
        RowBox[{"\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           SubscriptBox["p", "i"], ")"}], 
          FractionBox[
           RowBox[{
            RowBox[{"-", " ", "2"}], "\[Kappa]"}], 
           RowBox[{"1", "+", "\[Kappa]"}]]], "-", "1"}], ")"}]}]}], ")"}]}], 
   "+", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox["p", "i"]}], "-", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["\[Sigma]", "2"]], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox[
       RowBox[{"P", "[", 
        RowBox[{"\[Kappa]", ",", "2", ",", "n"}], "]"}], 
       RowBox[{"\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]], 
      SuperscriptBox[
       SubscriptBox["x", "i"], "2"]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.8254688516202097`*^9, 3.825468907721219*^9}, {
  3.8254855456406097`*^9, 3.825485553372048*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"28674ae7-8e4d-44ed-90a4-11dcdb7327f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"\[Phi]Alt", "[", 
     RowBox[{"\[Kappa]", ",", "\[Sigma]", ",", "3"}], "]"}], ",", 
    SubscriptBox["p", "1"]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellLabel->"In[91]:=",ExpressionUUID->"397bd656-ebdf-4570-be24-21c5d1b2e14a"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"ZP", " ", "\[Kappa]"}]}], ")"}], " ", 
    SuperscriptBox["\[Sigma]", "2"]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"3", " ", "\[Kappa]"}]}], ")"}], " ", 
    SubsuperscriptBox["p", "1", 
     FractionBox[
      RowBox[{"2", " ", "\[Kappa]"}], 
      RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Sigma]", "2"], "+", 
      RowBox[{"\[Kappa]", " ", 
       SubsuperscriptBox["x", "1", "2"]}]}], ")"}]}]}], 
  RowBox[{"ZP", " ", "\[Kappa]", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
   SuperscriptBox["\[Sigma]", "2"]}]]], "Output",
 CellChangeTimes->{3.825485569328857*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"5d267eaf-b508-45f0-8f6a-ee093e246c2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"ZP", " ", "\[Kappa]"}]}], ")"}], " ", 
        SuperscriptBox["\[Sigma]", "2"]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"3", " ", "\[Kappa]"}]}], ")"}], " ", 
        SubsuperscriptBox["p", "1", 
         FractionBox[
          RowBox[{"2", " ", "\[Kappa]"}], 
          RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Sigma]", "2"], "+", 
          RowBox[{"\[Kappa]", " ", 
           SubsuperscriptBox["x", "1", "2"]}]}], ")"}]}]}], 
      RowBox[{"ZP", " ", "\[Kappa]", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
       SuperscriptBox["\[Sigma]", "2"]}]], "\[Equal]", "0"}], ",", 
    SubscriptBox["p", "1"]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{
  3.8254855897391157`*^9, {3.825485655063684*^9, 3.825485656512787*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"16a5fccb-8506-4e86-928f-f99a6a0bf1b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["p", "1"], "\[Rule]", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"ZP", " ", "\[Kappa]"}]}], ")"}]}]], " ", "\[Sigma]"}], 
         
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"3", " ", "\[Kappa]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Sigma]", "2"], "+", 
             RowBox[{"\[Kappa]", " ", 
              SubsuperscriptBox["x", "1", "2"]}]}], ")"}]}]]]}], ")"}], 
      RowBox[{"1", "+", 
       FractionBox["1", "\[Kappa]"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["p", "1"], "\[Rule]", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"ZP", " ", "\[Kappa]"}]}], ")"}]}]], " ", "\[Sigma]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"3", " ", "\[Kappa]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Sigma]", "2"], "+", 
            RowBox[{"\[Kappa]", " ", 
             SubsuperscriptBox["x", "1", "2"]}]}], ")"}]}]]], ")"}], 
      RowBox[{"1", "+", 
       FractionBox["1", "\[Kappa]"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.825485592940914*^9, 3.8254856581494913`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"515cd5c0-7e19-414f-b829-1658f8e683b4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["p", "1"], "\[Rule]", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"3", " ", "\[Kappa]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[Kappa]", " ", 
          FractionBox[
           SubsuperscriptBox["x", "1", "2"], 
           SuperscriptBox["\[Sigma]", "2"]]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"ZP", " ", "\[Kappa]"}]}], ")"}]}]], ")"}], 
    FractionBox[
     RowBox[{"1", "+", "\[Kappa]"}], 
     RowBox[{
      RowBox[{"-", "2"}], "\[Kappa]"}]]]}], "}"}]], "Input",
 CellChangeTimes->{{3.825485630747405*^9, 3.8254856320488043`*^9}, {
  3.825485687471682*^9, 
  3.8254857157159443`*^9}},ExpressionUUID->"56fc6d9a-198a-4c46-bd4a-\
5348335be30d"],

Cell[TextData[{
 "So the 1/2 multiple is not strictly necessary to achieve the coupled \
Gaussian form; however, in this case the coupled entropy doesn\
\[CloseCurlyQuote]t converge to the Shannon entropy for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Kappa]", "\[Rule]", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "0025090e-b9ca-4377-932e-87b766aceff4"]
}], "Text",
 CellChangeTimes->{{3.825485817436543*^9, 3.825485856038418*^9}, {
   3.825486232456506*^9, 3.825486286642329*^9}, 3.825486508222088*^9, {
   3.825670630016678*^9, 
   3.82567068027837*^9}},ExpressionUUID->"4542d1b8-829b-41fd-9985-\
fa980d4dcd36"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SubscriptBox[
      RowBox[{"P", "[", 
       RowBox[{"\[Kappa]", ",", "2", ",", "3"}], "]"}], 
      RowBox[{"\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         SubscriptBox["p", "1"], ")"}], 
        FractionBox[
         RowBox[{
          RowBox[{"-", " ", "2"}], "\[Kappa]"}], 
         RowBox[{"1", "+", "\[Kappa]"}]]], "-", "1"}], ")"}]}], "\[Kappa]"], 
   ",", 
   RowBox[{"\[Kappa]", "->", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.825486521624804*^9, 3.825486538642901*^9}, {
  3.825486616675256*^9, 3.825486676100801*^9}, {3.825486731539832*^9, 
  3.82548673515926*^9}, {3.825487322328589*^9, 3.825487322382608*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"68f0a61a-d551-4932-93af-3f1385ea60b6"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"Log", "[", 
     SubscriptBox["p", "1"], "]"}], " ", 
    SubscriptBox["p", "1"]}], "ZP"]}]], "Output",
 CellChangeTimes->{3.825486686566566*^9, 3.8254867391776037`*^9, 
  3.8254872223894577`*^9, 3.8254873242573423`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"4578355c-40da-461d-9c32-a65b99a6cc72"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]Alt", "[", 
   RowBox[{"0", ",", "\[Sigma]_", ",", "n_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"Log", "[", 
        SubscriptBox["p", "i"], "]"}], 
       SubscriptBox["p", "i"]}], "ZP"]}]}], "+", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox["p", "i"]}], "-", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["\[Sigma]", "2"]], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox["p", "i"], 
      SuperscriptBox[
       SubscriptBox["x", "i"], "2"]}]}]}]}]}]], "Input",
 CellChangeTimes->{
  3.825486563322134*^9, {3.825486800536005*^9, 3.825486841150024*^9}, 
   3.8254868821191053`*^9, {3.8254869794039583`*^9, 3.8254870022482977`*^9}, 
   3.825487351395958*^9},
 CellLabel->
  "In[107]:=",ExpressionUUID->"e142baa2-d3f6-4cbd-b1b2-8dc5bc43c16d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"\[Phi]Alt", "[", 
     RowBox[{"0", ",", "\[Sigma]", ",", "3"}], "]"}], ",", 
    SubscriptBox["p", "1"]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8254868598887863`*^9, 3.825486860378703*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"c9f344d0-6088-43a3-b574-7b81a654ff8d"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"-", "2"}], "+", "ZP", "-", 
    RowBox[{"2", " ", 
     RowBox[{"Log", "[", 
      SubscriptBox["p", "1"], "]"}]}]}], "ZP"], "-", 
  FractionBox[
   SubsuperscriptBox["x", "1", "2"], 
   SuperscriptBox["\[Sigma]", "2"]]}]], "Output",
 CellChangeTimes->{{3.8254868615600967`*^9, 3.8254868864087543`*^9}, 
   3.825487011032653*^9, 3.8254873584418488`*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"a1ec0b17-425a-4b96-8320-76f7b6b0fcc1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"-", "2"}], "+", "ZP", "-", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", 
          SubscriptBox["p", "1"], "]"}]}]}], "ZP"], "-", 
      FractionBox[
       SubsuperscriptBox["x", "1", "2"], 
       SuperscriptBox["\[Sigma]", "2"]]}], "\[Equal]", "0"}], ",", 
    SubscriptBox["p", "1"]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{3.8254870702786627`*^9, 3.825487367245131*^9},
 CellLabel->
  "In[109]:=",ExpressionUUID->"5a2a2e67-e060-46dc-b3da-2503c0f0487f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["p", "1"], "\[Rule]", 
    TemplateBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"-", "2"}], "+", "ZP", "-", 
             FractionBox[
              RowBox[{"ZP", " ", 
                SubsuperscriptBox["x", "1", "2"]}], 
              SuperscriptBox["\[Sigma]", "2"]]}], ")"}]}]], 
      RowBox[{
        RowBox[{
          RowBox[{"-", "2"}], " ", "\[Pi]"}], "\[LessEqual]", 
        FractionBox[
         RowBox[{"ZP", " ", 
           RowBox[{"Im", "[", 
             SubsuperscriptBox["x", "1", "2"], "]"}]}], 
         SuperscriptBox["\[Sigma]", "2"]], "<", 
        RowBox[{"2", " ", "\[Pi]"}]}]},
     "ConditionalExpression"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8254870732082376`*^9, 3.825487369810546*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"d51faab5-a12b-4826-91a0-fa2ffe9fb734"]
}, Open  ]],

Cell["Alternatively if the entropy is divided by 2", "Text",
 CellChangeTimes->{{3.825487509264971*^9, 
  3.825487525003374*^9}},ExpressionUUID->"21f596d0-64bb-416f-ad7d-\
414b4000081b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]Alt2", "[", 
   RowBox[{"0", ",", "\[Sigma]_", ",", "n_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     FractionBox[
      RowBox[{
       RowBox[{"Log", "[", 
        SubscriptBox["p", "i"], "]"}], 
       SubscriptBox["p", "i"]}], "ZP"]}]}], "+", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "n"], 
    SubscriptBox["p", "i"]}], "-", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["\[Sigma]", "2"]], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     RowBox[{
      SubscriptBox["p", "i"], 
      SuperscriptBox[
       SubscriptBox["x", "i"], "2"]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.8254875297347727`*^9, 3.8254875346096992`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"60bd24d8-fec2-40a6-856e-a79b8a4abc35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"\[Phi]Alt", "[", 
         RowBox[{"0", ",", "\[Sigma]", ",", "3"}], "]"}], ",", 
        SubscriptBox["p", "1"]}], "]"}], "-", 
      FractionBox[
       SubsuperscriptBox["x", "1", "2"], 
       SuperscriptBox["\[Sigma]", "2"]]}], "\[Equal]", "0"}], ",", 
    SubscriptBox["p", "1"]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{3.825487565820458*^9},
 CellLabel->
  "In[111]:=",ExpressionUUID->"61513dd4-1b1d-4838-b975-544d4c9d0865"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["p", "1"], "\[Rule]", 
    TemplateBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
         RowBox[{"-", "1"}], "+", 
         FractionBox["ZP", "2"], "-", 
         FractionBox[
          RowBox[{"ZP", " ", 
            SubsuperscriptBox["x", "1", "2"]}], 
          SuperscriptBox["\[Sigma]", "2"]]}]], 
      RowBox[{
        RowBox[{"-", "\[Pi]"}], "\[LessEqual]", 
        FractionBox[
         RowBox[{"ZP", " ", 
           RowBox[{"Im", "[", 
             SubsuperscriptBox["x", "1", "2"], "]"}]}], 
         SuperscriptBox["\[Sigma]", "2"]], "<", "\[Pi]"}]},
     "ConditionalExpression"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.825487568733239*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"583e1df2-f4fb-4494-9d4e-a405a8ed847d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"ZP", " ", 
          SubsuperscriptBox["x", "1", "2"]}], 
         SuperscriptBox["\[Sigma]", "2"]]}]], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"ZP", " ", 
          SubsuperscriptBox["x", "2", "2"]}], 
         SuperscriptBox["\[Sigma]", "2"]]}]], "+", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"ZP", " ", 
          SubsuperscriptBox["x", "3", "2"]}], 
         SuperscriptBox["\[Sigma]", "2"]]}]]}], "\[Equal]", "1"}], ",", 
    "ZP"}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8254877103389387`*^9, 3.825487775884502*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"602bbbc0-1f1f-4a65-b024-ae34fee45be3"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"ZP", " ", 
         SubsuperscriptBox["x", "1", "2"]}], 
        SuperscriptBox["\[Sigma]", "2"]]}]], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"ZP", " ", 
         SubsuperscriptBox["x", "2", "2"]}], 
        SuperscriptBox["\[Sigma]", "2"]]}]], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"ZP", " ", 
         SubsuperscriptBox["x", "3", "2"]}], 
        SuperscriptBox["\[Sigma]", "2"]]}]]}], "\[Equal]", "1"}], ",", "ZP"}],
   "]"}]], "Output",
 CellChangeTimes->{{3.825487762589386*^9, 3.825487777808226*^9}},
 CellLabel->
  "Out[113]=",ExpressionUUID->"96a8e047-7c21-41bf-888c-3711e9642885"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution for \[Alpha] with \[Alpha] constraint", "Subsubsection",
 CellChangeTimes->{{3.8255810931846027`*^9, 
  3.82558111540685*^9}},ExpressionUUID->"54d7a6b7-b00f-43e2-af3e-\
a45e31d85172"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Phi]Alpha", "[", 
    RowBox[{"\[Kappa]_", ",", "\[Alpha]_", ",", "\[Sigma]_", ",", "n_"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]], 
     RowBox[{"(", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "n"], 
       RowBox[{
        SubscriptBox[
         RowBox[{"P", "[", 
          RowBox[{"\[Kappa]", ",", "\[Alpha]", ",", "n"}], "]"}], 
         RowBox[{"\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]], 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            SubscriptBox["p", "i"], ")"}], 
           FractionBox[
            RowBox[{
             RowBox[{"-", "\[Alpha]"}], " ", "\[Kappa]"}], 
            RowBox[{"1", "+", "\[Kappa]"}]]], "-", "1"}], ")"}]}]}], ")"}]}], 
    "+", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SubscriptBox["p", "i"]}], "-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"\[Alpha]", " ", 
       SuperscriptBox["\[Sigma]", "\[Alpha]"]}]], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      RowBox[{
       SubscriptBox[
        RowBox[{"P", "[", 
         RowBox[{"\[Kappa]", ",", "\[Alpha]", ",", "n"}], "]"}], 
        RowBox[{"\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]], 
       SuperscriptBox[
        SubscriptBox["x", "i"], "\[Alpha]"]}]}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.825581158974207*^9, 3.825581206951058*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"3a0842d7-0762-4d61-a7f5-f4b81707b767"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"\[Phi]Alpha", "[", 
     RowBox[{"\[Kappa]", ",", "\[Alpha]", ",", "\[Sigma]", ",", "3"}], "]"}], 
    ",", 
    SubscriptBox["p", "1"]}], "]"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.825581214165455*^9, 3.825581245684375*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"cf63841f-ac6b-4d6e-8091-ccfe32c33bb8"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[Sigma]", 
    RowBox[{"-", "\[Alpha]"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"ZP", " ", "\[Alpha]", " ", "\[Kappa]"}]}], ")"}], " ", 
      SuperscriptBox["\[Sigma]", "\[Alpha]"]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]", "+", 
        RowBox[{"\[Alpha]", " ", "\[Kappa]"}]}], ")"}], " ", 
      SubsuperscriptBox["p", "1", 
       FractionBox[
        RowBox[{"\[Alpha]", " ", "\[Kappa]"}], 
        RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Sigma]", "\[Alpha]"], "+", 
        RowBox[{"\[Kappa]", " ", 
         SubsuperscriptBox["x", "1", "\[Alpha]"]}]}], ")"}]}]}], ")"}]}], 
  RowBox[{"ZP", " ", "\[Alpha]", " ", "\[Kappa]", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "\[Kappa]"}], ")"}]}]]], "Output",
 CellChangeTimes->{3.825581246797014*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"56b96bde-0ed3-44aa-b70d-ce86dc36f96d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Sigma]", 
       RowBox[{"-", "\[Alpha]"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"ZP", " ", "\[Alpha]", " ", "\[Kappa]"}]}], ")"}], " ", 
         SuperscriptBox["\[Sigma]", "\[Alpha]"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "\[Kappa]", "+", 
           RowBox[{"\[Alpha]", " ", "\[Kappa]"}]}], ")"}], " ", 
         SubsuperscriptBox["p", "1", 
          FractionBox[
           RowBox[{"\[Alpha]", " ", "\[Kappa]"}], 
           RowBox[{"1", "+", "\[Kappa]"}]]], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Sigma]", "\[Alpha]"], "+", 
           RowBox[{"\[Kappa]", " ", 
            SubsuperscriptBox["x", "1", "\[Alpha]"]}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"ZP", " ", "\[Alpha]", " ", "\[Kappa]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Kappa]"}], ")"}]}]], "\[Equal]", "0"}], ",", 
   SubscriptBox["p", "1"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8255812615172253`*^9, 3.825581292321224*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"70ebb991-d141-48eb-ab68-cd24cd92a79d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["p", "1"], "\[Rule]", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Kappa]"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"ZP", " ", "\[Alpha]", " ", "\[Kappa]"}]}], ")"}], " ", 
        SuperscriptBox["\[Sigma]", "\[Alpha]"]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "\[Kappa]", "+", 
          RowBox[{"\[Alpha]", " ", "\[Kappa]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Sigma]", "\[Alpha]"], "+", 
          RowBox[{"\[Kappa]", " ", 
           SubsuperscriptBox["x", "1", "\[Alpha]"]}]}], ")"}]}]], ")"}], 
     FractionBox[
      RowBox[{"1", "+", "\[Kappa]"}], 
      RowBox[{"\[Alpha]", " ", "\[Kappa]"}]]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.825581294452549*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"2c2fb83d-21ae-4017-bcc4-b0d9d1a06e0c"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "1"], "=", 
    RowBox[{
     FractionBox["1", "Z"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"\[Kappa]", 
         FractionBox[
          RowBox[{"\n", 
           SubsuperscriptBox["x", "1", "\[Alpha]"]}], 
          SuperscriptBox["\[Sigma]", "\[Alpha]"]]}]}], ")"}], 
      FractionBox[
       RowBox[{"1", "+", "\[Kappa]"}], 
       RowBox[{
        RowBox[{"-", "\[Alpha]"}], " ", "\[Kappa]"}]]]}]}], TraditionalForm]],
  
  FormatType->"TraditionalForm",ExpressionUUID->
  "9d897c8e-ba3e-4c89-8e14-303e1499f5a0"],
 " "
}], "Text",
 CellChangeTimes->{{3.825581312998686*^9, 
  3.825581425131266*^9}},ExpressionUUID->"df61eb76-bf6b-4f8c-94ab-\
a918d510a1b3"]
}, Open  ]]
}, Closed]]
},
WindowSize->{961, 855},
WindowMargins->{{Automatic, 118}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6e36c731-499d-4a10-a0ea-c54cfa80ae13"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 179, 3, 101, "Section",ExpressionUUID->"93a04127-f124-4199-80f1-88b294f43aa0"],
Cell[CellGroupData[{
Cell[784, 29, 173, 3, 81, "Subsection",ExpressionUUID->"975e07bb-4e6a-4e8f-969b-ee103c35605b"],
Cell[960, 34, 307, 7, 88, "Text",ExpressionUUID->"15a65e83-45d7-4fe1-a024-67403bc1ce84"],
Cell[1270, 43, 1270, 24, 109, "Input",ExpressionUUID->"3f0651dc-7d92-42e7-a2c2-f59f490beb43"],
Cell[2543, 69, 2962, 66, 245, "Input",ExpressionUUID->"8c58bb74-96b7-4a0b-9b70-9f8ed956c874"],
Cell[5508, 137, 951, 22, 198, "Text",ExpressionUUID->"f990944c-d5f2-4325-b9bb-6ffb38bbc45d"],
Cell[6462, 161, 1529, 44, 117, "Input",ExpressionUUID->"c2551c66-15f1-47e4-a7c1-ef52ed897b2c"],
Cell[CellGroupData[{
Cell[8016, 209, 518, 13, 46, "Input",ExpressionUUID->"33dd24f1-2332-43a7-9736-4aed2b2ff484"],
Cell[8537, 224, 594, 13, 59, "Message",ExpressionUUID->"73368809-f8d3-40b1-9252-716dfc873661"],
Cell[9134, 239, 1034, 29, 80, "Output",ExpressionUUID->"cb751382-d36f-4071-8031-f0c034e915a1"]
}, Open  ]],
Cell[10183, 271, 962, 29, 104, "Input",ExpressionUUID->"e22cebec-e5a0-4e9f-aa27-3a30f5ef20bc"],
Cell[11148, 302, 521, 15, 54, "Text",ExpressionUUID->"181e41a6-fa0c-4b0d-b4a9-8104a850f6db"],
Cell[CellGroupData[{
Cell[11694, 321, 1191, 36, 115, "Input",ExpressionUUID->"7d4e22e4-32d4-4d46-b113-6618f68bd94b"],
Cell[12888, 359, 896, 16, 68, "Message",ExpressionUUID->"649f41a9-75df-418c-992b-41be983156d9"],
Cell[13787, 377, 1782, 58, 143, "Output",ExpressionUUID->"eca3b4fc-9675-48f0-a6a2-6425b58c387c"]
}, Open  ]],
Cell[15584, 438, 224, 5, 53, "Text",ExpressionUUID->"1e1d4290-876e-4fad-9e86-20c19554145e"],
Cell[CellGroupData[{
Cell[15833, 447, 541, 15, 86, "Input",ExpressionUUID->"3e6daaee-4eb6-4c79-b896-8f09ab742bd4"],
Cell[16377, 464, 646, 19, 77, "Output",ExpressionUUID->"44678524-db23-485f-bd94-eb2857aeb1ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17060, 488, 1118, 33, 81, "Input",ExpressionUUID->"b1d1824d-4fd5-4358-be6c-5845ed70134e"],
Cell[18181, 523, 907, 28, 111, "Output",ExpressionUUID->"9b1bea0e-e469-4f0d-9448-2dab5f67ab40"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19125, 556, 215, 4, 67, "Subsubsection",ExpressionUUID->"2cabdb59-fac9-41be-a7b1-743ba656fe6e"],
Cell[19343, 562, 742, 19, 134, "Text",ExpressionUUID->"6157cc69-7157-4404-9d36-72bca91c608b"],
Cell[CellGroupData[{
Cell[20110, 585, 330, 7, 46, "Input",ExpressionUUID->"8f31ac6c-5a88-4576-83f5-5aaf35167e9e"],
Cell[20443, 594, 1748, 51, 149, "Output",ExpressionUUID->"109bd72a-5276-44ac-bf9a-f76c97fc236d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22228, 650, 470, 12, 46, "Input",ExpressionUUID->"34527a88-5394-46de-82d9-3f517a3ed2d8"],
Cell[22701, 664, 453, 11, 59, "Message",ExpressionUUID->"c39fff0d-4814-4629-b18f-c0138e399f4d"],
Cell[23157, 677, 1896, 54, 175, "Output",ExpressionUUID->"595c90c9-e715-4be8-9dec-fb8bed197a1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25090, 736, 894, 24, 93, "Input",ExpressionUUID->"5c5b7e24-f6d6-4af6-9cb3-0608dea610fb"],
Cell[25987, 762, 752, 21, 106, "Output",ExpressionUUID->"e225187f-5e03-40c5-bc3a-ce963ce22675"]
}, Open  ]],
Cell[26754, 786, 638, 19, 85, "Input",ExpressionUUID->"07bae38b-6ee5-4ed2-a272-65ae756ce76b"],
Cell[27395, 807, 370, 7, 122, "Text",ExpressionUUID->"09ee9e2c-eef6-4976-a84e-e12abd63122a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27802, 819, 198, 3, 67, "Subsubsection",ExpressionUUID->"5f960e7c-1cf8-47e4-bf0e-4fa6c2eab1d6"],
Cell[28003, 824, 1828, 53, 191, "Input",ExpressionUUID->"563af164-1bcd-47d6-9e11-3d5740cc9809"],
Cell[CellGroupData[{
Cell[29856, 881, 398, 10, 46, "Input",ExpressionUUID->"35c3fd84-634a-4522-bc16-e7a35b7cc5df"],
Cell[30257, 893, 1311, 38, 99, "Output",ExpressionUUID->"050f33f4-774e-4760-8e12-44cacb8f54fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31605, 936, 1525, 42, 146, "Input",ExpressionUUID->"f77d8fb3-622d-463f-b083-664f3ba310e1"],
Cell[33133, 980, 454, 11, 59, "Message",ExpressionUUID->"5bcd68ae-dece-4ee4-ab8a-0088597c3a72"],
Cell[33590, 993, 1187, 34, 81, "Output",ExpressionUUID->"9e4bc9c4-a0a9-4146-8e18-55f9a050880c"]
}, Open  ]],
Cell[34792, 1030, 2190, 67, 83, "Text",ExpressionUUID->"15884870-a941-4695-86d4-fea407b0b530"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37031, 1103, 187, 3, 81, "Subsection",ExpressionUUID->"cdff1dc9-a363-4142-af09-f9bed5b7bea8"],
Cell[37221, 1108, 1439, 37, 336, "Text",ExpressionUUID->"a352861e-a011-4b44-954b-288b0f8a1d31"],
Cell[38663, 1147, 266538, 4375, 503, "Input",ExpressionUUID->"a54277dd-a25c-4746-ac0e-3bf6c95db1b8"],
Cell[CellGroupData[{
Cell[305226, 5526, 1372, 37, 101, "Input",ExpressionUUID->"6ded5688-0dfd-4f27-9cdc-7733b222a2ed"],
Cell[306601, 5565, 656, 19, 92, "Output",ExpressionUUID->"056fcdad-c174-49f4-9e89-9efde3b71056"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307294, 5589, 715, 21, 94, "Input",ExpressionUUID->"4351f906-7e22-4724-8da2-3c7b2ad43ce5"],
Cell[308012, 5612, 285, 6, 59, "Output",ExpressionUUID->"b7a84435-9f3d-4fdb-8e49-f7c87f057512"]
}, Open  ]],
Cell[308312, 5621, 4986, 143, 277, "Text",ExpressionUUID->"018ed513-eed0-4cd6-848e-dba9fc30e32d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[313347, 5770, 191, 3, 101, "Section",ExpressionUUID->"e3b027da-134c-4771-ba55-f63cc5be030d"],
Cell[313541, 5775, 559, 11, 122, "Text",ExpressionUUID->"9a23a756-4f5e-4acd-be29-80a5f21eedba"],
Cell[CellGroupData[{
Cell[314125, 5790, 296, 7, 67, "Subsubsection",ExpressionUUID->"3a0d993b-8747-4660-95be-042e3cdcd4e5"],
Cell[314424, 5799, 1711, 48, 117, "Input",ExpressionUUID->"aab6e78e-8ede-47e0-87af-50951fa75a21"],
Cell[CellGroupData[{
Cell[316160, 5851, 381, 9, 46, "Input",ExpressionUUID->"8accf0be-32cb-4a9b-a39f-c6d23bc04b16"],
Cell[316544, 5862, 1218, 38, 135, "Output",ExpressionUUID->"f827dd79-6522-43c0-b378-33d256d86a93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317799, 5905, 1527, 43, 139, "Input",ExpressionUUID->"5790f19a-302b-41b9-a690-22a66a6ee5c5"],
Cell[319329, 5950, 160, 3, 52, "Output",ExpressionUUID->"f7af5a99-4869-44a7-beae-371c6b9b4e0e"]
}, Open  ]],
Cell[319504, 5956, 179, 3, 53, "Text",ExpressionUUID->"14cf253b-79d4-4da4-9d11-060efd6aeb00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319720, 5964, 257, 6, 106, "Subsubsection",ExpressionUUID->"f8360dd1-b2be-487e-92c4-b2745645a510"],
Cell[319980, 5972, 315, 7, 52, "Text",ExpressionUUID->"5f3b726c-5db4-4785-b417-eda7bf5e4a1f"],
Cell[320298, 5981, 1640, 48, 120, "Input",ExpressionUUID->"1b0ae625-f5fa-46a8-aa0c-1c07a13e81e9"],
Cell[CellGroupData[{
Cell[321963, 6033, 369, 8, 44, "Input",ExpressionUUID->"8643f1f1-3a91-4cd1-b5d9-a0522be3d025"],
Cell[322335, 6043, 1352, 41, 139, "Output",ExpressionUUID->"01e7ee2f-5aae-401d-a527-6c2a593c97b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323724, 6089, 1677, 47, 140, "Input",ExpressionUUID->"de250996-91c2-4948-95da-56a9b037ec60"],
Cell[325404, 6138, 205, 3, 50, "Output",ExpressionUUID->"a5951812-76a6-4362-a0d4-d74c58e44f85"]
}, Open  ]],
Cell[325624, 6144, 268, 6, 52, "Text",ExpressionUUID->"3610bffe-6c75-4180-add2-7f31ba42fc08"],
Cell[CellGroupData[{
Cell[325917, 6154, 1545, 45, 166, "Input",ExpressionUUID->"b7fcede7-2fb8-437c-96d2-94e87738b5d6"],
Cell[327465, 6201, 15670, 507, 734, "Output",ExpressionUUID->"26654f0c-efcd-4a79-afb9-75700a354bb1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343172, 6713, 208, 3, 44, "Input",ExpressionUUID->"283fd15d-89e7-4bec-9808-26ea43c31323"],
Cell[343383, 6718, 6263, 174, 351, "Output",ExpressionUUID->"457dca56-3cbb-45ce-8fd5-24b310bfdef3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[349683, 6897, 284, 6, 44, "Input",ExpressionUUID->"c9333f87-6e6f-4254-b694-bcaf3a478a52"],
Cell[349970, 6905, 156, 2, 50, "Output",ExpressionUUID->"78cae801-9246-46dd-a698-ee5e46614dae"]
}, Open  ]]
}, Closed]],
Cell[350153, 6911, 177, 3, 53, "Subsubsection",ExpressionUUID->"53fe4547-2371-4a3c-a470-2a6e003354b4"],
Cell[CellGroupData[{
Cell[350355, 6918, 468, 13, 60, "Subsubsection",ExpressionUUID->"017a0dab-9146-491b-864c-466fa7b2016f"],
Cell[350826, 6933, 221, 5, 52, "Text",ExpressionUUID->"b7f97763-4b29-407b-bdf4-1ed208be611d"],
Cell[351050, 6940, 2511, 78, 217, "Input",ExpressionUUID->"f4618ce7-583d-40ff-a7ba-ec892aa673fd"],
Cell[353564, 7020, 178, 3, 52, "Text",ExpressionUUID->"5cd6af8f-6701-40e2-9c9a-c05bb202a5a3"],
Cell[CellGroupData[{
Cell[353767, 7027, 530, 15, 62, "Input",ExpressionUUID->"f81a7495-e80e-40c8-86c7-a4a43254571b"],
Cell[354300, 7044, 990, 28, 116, "Output",ExpressionUUID->"49b33e84-e296-41af-93a1-a9b85e6f6885"]
}, Open  ]],
Cell[CellGroupData[{
Cell[355327, 7077, 1167, 29, 166, "Input",ExpressionUUID->"6173bc49-6492-4a69-b7b9-efbc5abbd701"],
Cell[356497, 7108, 6403, 125, 364, "Output",ExpressionUUID->"c1a2a566-1ab6-4125-852d-a5fd9fada572"]
}, Open  ]],
Cell[362915, 7236, 199, 3, 52, "Text",ExpressionUUID->"a83ea96e-46e2-423a-bdc2-96f83d4cd7e5"],
Cell[CellGroupData[{
Cell[363139, 7243, 379, 9, 44, "Input",ExpressionUUID->"5a435baf-27a1-4100-ae96-4e5e3bc9cdc5"],
Cell[363521, 7254, 622, 17, 69, "Output",ExpressionUUID->"1d373766-56b9-4b84-96b9-665187d103f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[364180, 7276, 780, 20, 139, "Input",ExpressionUUID->"54482adf-fae2-4fda-8fc5-490be95f8688"],
Cell[364963, 7298, 2911, 68, 364, "Output",ExpressionUUID->"41cd4357-8bc6-4a6b-9abd-6b47ace21740"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367911, 7371, 810, 21, 146, "Input",ExpressionUUID->"9ab63b73-a1d7-4cbb-88ee-e462ecd7a729"],
Cell[368724, 7394, 4076, 87, 364, "Output",ExpressionUUID->"2a65d8bb-085c-43d2-a56d-c1035a9ab76f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372837, 7486, 445, 11, 62, "Input",ExpressionUUID->"12687d9d-d50a-46e1-90d0-9133e834561e"],
Cell[373285, 7499, 184, 3, 50, "Output",ExpressionUUID->"83524898-1baa-4c20-95d1-a4ab8e8781f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[373506, 7507, 560, 15, 62, "Input",ExpressionUUID->"118457fe-399f-481a-8d3b-1f04278111bf"],
Cell[374069, 7524, 185, 3, 50, "Output",ExpressionUUID->"4c500e74-b886-44e1-a0ef-a5918ea8fa2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374291, 7532, 472, 12, 44, "Input",ExpressionUUID->"5e9692f6-0bb8-4bc0-9686-576137ed9fb7"],
Cell[374766, 7546, 155, 2, 50, "Output",ExpressionUUID->"cb75bcdb-d565-4de2-8560-2428ca1e2f00"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374958, 7553, 294, 6, 45, "Input",ExpressionUUID->"f1c4323a-862b-4391-9c42-08b802ac9682"],
Cell[375255, 7561, 258, 5, 51, "Output",ExpressionUUID->"5327c5b5-ceb5-4b10-b814-21cad4a3a75f"]
}, Open  ]],
Cell[375528, 7569, 129, 3, 44, "Input",ExpressionUUID->"61c2ed87-0f90-4631-9f4a-6b2f48dc144f"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[375706, 7578, 278, 6, 135, "Section",ExpressionUUID->"627a85eb-1cf2-4f8f-95b2-e6014cded4d3"],
Cell[CellGroupData[{
Cell[376009, 7588, 245, 6, 67, "Subsubsection",ExpressionUUID->"6a77828d-d517-4052-b258-2c603bd96c74"],
Cell[376257, 7596, 1509, 45, 118, "Input",ExpressionUUID->"bc089665-6596-437f-8c98-e4001ba24629"],
Cell[CellGroupData[{
Cell[377791, 7645, 421, 9, 44, "Input",ExpressionUUID->"f479435f-88c9-4bde-9b29-6b5100de4c4d"],
Cell[378215, 7656, 989, 28, 97, "Output",ExpressionUUID->"cc013ebf-c599-44f0-b10e-179eb5dc6bf8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379241, 7689, 1151, 32, 94, "Input",ExpressionUUID->"40c50988-c852-42cc-a689-f701bb8f0111"],
Cell[380395, 7723, 979, 29, 94, "Output",ExpressionUUID->"bf09ebe4-46ae-4593-b858-a4d699322f36"]
}, Open  ]],
Cell[381389, 7755, 945, 29, 128, "Input",ExpressionUUID->"208d2a04-c71e-46e9-b44f-0c4e55bb5825"],
Cell[382337, 7786, 337, 7, 52, "Text",ExpressionUUID->"9cd7c51b-e714-4e0a-a8b4-533484c97090"],
Cell[382677, 7795, 1588, 47, 118, "Input",ExpressionUUID->"28674ae7-8e4d-44ed-90a4-11dcdb7327f7"],
Cell[CellGroupData[{
Cell[384290, 7846, 304, 7, 44, "Input",ExpressionUUID->"397bd656-ebdf-4570-be24-21c5d1b2e14a"],
Cell[384597, 7855, 944, 28, 100, "Output",ExpressionUUID->"5d267eaf-b508-45f0-8f6a-ee093e246c2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[385578, 7888, 1244, 34, 98, "Input",ExpressionUUID->"16a5fccb-8506-4e86-928f-f99a6a0bf1b1"],
Cell[386825, 7924, 1916, 58, 104, "Output",ExpressionUUID->"515cd5c0-7e19-414f-b829-1658f8e683b4"]
}, Open  ]],
Cell[388756, 7985, 971, 30, 128, "Input",ExpressionUUID->"56fc6d9a-198a-4c46-bd4a-5348335be30d"],
Cell[389730, 8017, 648, 14, 87, "Text",ExpressionUUID->"4542d1b8-829b-41fd-9985-fa980d4dcd36"],
Cell[CellGroupData[{
Cell[390403, 8035, 893, 24, 93, "Input",ExpressionUUID->"68f0a61a-d551-4932-93af-3f1385ea60b6"],
Cell[391299, 8061, 382, 10, 70, "Output",ExpressionUUID->"4578355c-40da-461d-9c32-a65b99a6cc72"]
}, Open  ]],
Cell[391696, 8074, 1095, 34, 117, "Input",ExpressionUUID->"e142baa2-d3f6-4cbd-b1b2-8dc5bc43c16d"],
Cell[CellGroupData[{
Cell[392816, 8112, 369, 9, 44, "Input",ExpressionUUID->"c9f344d0-6088-43a3-b574-7b81a654ff8d"],
Cell[393188, 8123, 500, 14, 80, "Output",ExpressionUUID->"a1ec0b17-425a-4b96-8320-76f7b6b0fcc1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393725, 8142, 631, 18, 76, "Input",ExpressionUUID->"5a2a2e67-e060-46dc-b3da-2503c0f0487f"],
Cell[394359, 8162, 1005, 28, 109, "Output",ExpressionUUID->"d51faab5-a12b-4826-91a0-fa2ffe9fb734"]
}, Open  ]],
Cell[395379, 8193, 186, 3, 52, "Text",ExpressionUUID->"21f596d0-64bb-416f-ad7d-414b4000081b"],
Cell[395568, 8198, 961, 31, 117, "Input",ExpressionUUID->"60bd24d8-fec2-40a6-856e-a79b8a4abc35"],
Cell[CellGroupData[{
Cell[396554, 8233, 599, 17, 76, "Input",ExpressionUUID->"61513dd4-1b1d-4838-b975-544d4c9d0865"],
Cell[397156, 8252, 839, 24, 105, "Output",ExpressionUUID->"583e1df2-f4fb-4494-9d4e-a405a8ed847d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398032, 8281, 945, 27, 80, "Input",ExpressionUUID->"602bbbc0-1f1f-4a65-b024-ae34fee45be3"],
Cell[398980, 8310, 886, 26, 84, "Output",ExpressionUUID->"96a8e047-7c21-41bf-888c-3711e9642885"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[399915, 8342, 198, 3, 67, "Subsubsection",ExpressionUUID->"54d7a6b7-b00f-43e2-af3e-a45e31d85172"],
Cell[400116, 8347, 1703, 49, 118, "Input",ExpressionUUID->"3a0842d7-0762-4d61-a7f5-f4b81707b767"],
Cell[CellGroupData[{
Cell[401844, 8400, 398, 10, 44, "Input",ExpressionUUID->"cf63841f-ac6b-4d6e-8091-ccfe32c33bb8"],
Cell[402245, 8412, 1140, 32, 102, "Output",ExpressionUUID->"56b96bde-0ed3-44aa-b70d-ce86dc36f96d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403422, 8449, 1360, 36, 106, "Input",ExpressionUUID->"70ebb991-d141-48eb-ab68-cd24cd92a79d"],
Cell[404785, 8487, 1031, 29, 92, "Output",ExpressionUUID->"2c2fb83d-21ae-4017-bcc4-b0d9d1a06e0c"]
}, Open  ]],
Cell[405831, 8519, 782, 26, 130, "Text",ExpressionUUID->"df61eb76-bf6b-4f8c-94ab-a918d510a1b3"]
}, Open  ]]
}, Closed]]
}
]
*)

